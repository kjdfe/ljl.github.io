WEBVTT
Kind: captions
Language: ar

00:00:00.025 --> 00:00:03.417
،لذا سأبدأ بالكود المتوفر لدينا مسبقًا والذي يعمل بشكل صحيح، باستثناء

00:00:03.417 --> 00:00:06.814
مع هذا الافتراض بأن جميع الأشهر تتألف من 30 يومًا. الخطوة الأولى

00:00:06.814 --> 00:00:10.335
هي تحديد إجراء الكود الأساسي daysInMonth الذي يمنح عدد الأيام في

00:00:10.335 --> 00:00:14.272
الشهر. لكن، بالنسبة لإجراء الكود الأساسي، سنقوم بإرجاع 30 دائمًا. وسأقوم

00:00:14.272 --> 00:00:18.631
بتعديل nextDay لاستدعاء daysInMonth. وهذا أمر بسيط نسبيًا، لكني ينبغي

00:00:18.631 --> 00:00:21.628
أن أبدأ الاختبار، وسأكتب بعض الأكواد لتنفيذ الاختبار. فنحن لا نريد

00:00:21.628 --> 00:00:24.879
أن نضطر إلى متابعة كتابة حالات الاختبار ذاتها في الغلاف. نريد كتابة

00:00:24.879 --> 00:00:28.928
بعض الأكواد اللازمة للاختبار. بالنسبة للمشكلة المطروحة، توجد بعض

00:00:28.928 --> 00:00:32.403
حالات الاختبار. سأبدأ في كتابة بدايتي الآن وسأتأكد من

00:00:32.403 --> 00:00:35.941
حالات الاختبار هذه، مع العلم بأننا لا نتوقع النتائج الصحيحة حتى الآن لأنني

00:00:35.941 --> 00:00:39.665
.أقوم بالاختبار باستخدام أشهر تتألف من 30 يومًا. إذًا، سأختبر تاريخين متشابهين

00:00:39.665 --> 00:00:43.560
هذه حالة مقيدة، وهي مفيدة للاختبار. سأقوم بالاختبار من يوم واحد

00:00:43.560 --> 00:00:47.409
.إلى اليوم التالي، وينبغي أن يمنحنا هذا يومًا واحدًا. وهذه هي حالات الاختبار لصالح daysBetweendates

00:00:47.409 --> 00:00:51.210
ينبغي لي حقًا كتابة بعض حالات الاختبار لصالح nextDay. السبب

00:00:51.210 --> 00:00:54.060
وراء ذلك هو، أنه في حالة الفشل، سيكون من الأسهل

00:00:54.060 --> 00:00:57.260
فهم ما حدث من أخطاء، بدلاً من مجرد كتابة جميع حالات الاختبار لصالح

00:00:57.260 --> 00:01:02.486
daysBetweenDays. لذا لنحاول بعض حالات اختبار nextDay. حصلنا على حالة فيها اليوم

00:01:02.486 --> 00:01:08.262
زائد. لنحصل على حالة فيها الشهر زائد. وسأستخدم الشهر الذي يتألف من

00:01:08.262 --> 00:01:14.082
30 يومًا. بالتالي سيكون صحيحًا في الأشهر التي تتألف من 30 شهر، لكن سيظل صحيحًا بمجرد

00:01:14.082 --> 00:01:18.068
إصلاح ذلك. وسأستخدم زيادة العام. في حالات اختبار قليلة، ربما سيتوجب علينا

00:01:18.068 --> 00:01:23.198
،توفير المزيد. لكن لنجرب ذلك الأمر. ينبغي لنا الحفظ، ثم بدء التشغيل هذا

00:01:23.198 --> 00:01:28.090
.وسنقوم بتشغيل اختبارنا. لكن يفشل شيء ما. وذلك لا يسبب دهشة، فهذا يحدث أحيانًا

00:01:28.090 --> 00:01:31.740
دعونا نرَ الأمر الذي فشل. الفشل عبارة عن خطأ في النوع الذي أُطلق عليه اسم

00:01:31.740 --> 00:01:36.380
daysInMonth لا يمرر الرقم الصحيح من المعاملات. في الواقع، قمت بتمرير

00:01:36.380 --> 00:01:40.326
0. ينبغي أن أمرر كلاً من العام والشهر. بالتالي هذا من ضمن

00:01:40.326 --> 00:01:44.050
.أسباب كتابة أشياء في الأكواد الأساسية، يمكننا العثور على هذه الأنواع من الأخطاء سريعًا

00:01:44.050 --> 00:01:48.239
لذا لنجرب مجددًا، والآن نجحنا في الاختبار، وحالة اختبارنا هي استخدام

00:01:48.239 --> 00:01:52.716
القيود. سأكون أكثر حرصًا وسأطبع شيئًا ما عند

00:01:52.716 --> 00:01:56.864
انتهاء الاختبار، لأنه من الخطر بعض الشيء ألا يكون لديك شيء لتقوله

00:01:56.864 --> 00:02:00.909
.عند انتهاء الاختبار. ربما لم نحصل على أي نتيجة لأسباب أخرى

