WEBVTT
Kind: captions
Language: ja

00:00:00.020 --> 00:00:03.170
正確に機能したコードから始めます

00:00:03.170 --> 00:00:05.550
ただしすべての月が30日であるという仮定は除きます

00:00:05.550 --> 00:00:10.330
第1ステップは月の日数を与える
スタブ関数のdaysInMonthを定義することです

00:00:10.330 --> 00:00:14.270
しかしこのスタブ関数では常に30を返します

00:00:14.270 --> 00:00:18.630
daysInMonthを呼び出すためにnextDayを修正します
これはとても簡単です

00:00:18.630 --> 00:00:21.620
ですがテストする必要があり
テスト用のコードを書きます

00:00:21.620 --> 00:00:24.870
シェルに同じテストケースを入力し続けたくありません
テストするコードを書きます

00:00:24.870 --> 00:00:28.920
与えられた問題では与えられたテストケースが
いくつかありました

00:00:28.920 --> 00:00:32.400
では私のコードを書き始めます
これらのテストケースを確認します

00:00:32.400 --> 00:00:36.970
月が30日のものをテストしているので
正確な結果はまだ望めません

00:00:37.020 --> 00:00:39.310
同じ2つの日付をテストします

00:00:39.330 --> 00:00:43.560
これはテストする時に役立つ境界ケースです
ある日からその翌日までテストします

00:00:43.560 --> 00:00:47.400
これで1が与えられるはずです
これは日付間の日付のテストケースです

00:00:47.400 --> 00:00:51.210
nextDayのテストケースを書く必要があります

00:00:51.210 --> 00:00:54.060
なぜなら日付間の日付の
テストケースだけを書くよりは

00:00:54.060 --> 00:00:57.260
失敗した時に何が誤っていたのか
理解しやすくなるからです

00:00:57.260 --> 00:01:02.480
nextDayテストケースを試してみましょう
前の日の日付を取得しましょう

00:01:02.480 --> 00:01:08.260
前の月の日付を取得しましょう
すべての月は30日間とします

00:01:08.260 --> 00:01:14.080
30ヵ月に直します
これは一度修正したら正しいままのはずです

00:01:14.080 --> 00:01:18.060
前の年を使います テストケースは
おそらくもっとあるはずですがこれを試してみましょう

00:01:18.060 --> 00:01:23.190
保存する必要があります　これを実行しましょう

00:01:23.190 --> 00:01:28.090
テストを実行すると何かが失敗しますが
特に驚くことではありません

00:01:28.090 --> 00:01:31.740
何が失敗したのか確認してみましょう
失敗はタイプエラーでした

00:01:31.740 --> 00:01:36.380
正しいパラメータの数値を渡さずに
daysInMonthを呼び出しています

00:01:36.380 --> 00:01:40.320
実際私はゼロを渡しました
yearとmonth両方を渡すべきだったのです

00:01:40.320 --> 00:01:44.050
これがスタブで書く理由の1つです
このようなエラーをすぐに見つけることができます

00:01:44.050 --> 00:01:48.230
もう一度試してみましょう
今回のテストはうまくいきました

00:01:48.230 --> 00:01:52.710
私たちのテストでは制限条件が使われています

00:01:52.710 --> 00:01:56.860
テストを終える際はよく注意して出力します
終了しても何も分からないのは少し危険です

00:01:56.860 --> 00:02:00.900
おそらく何か別の理由で出力が得られませんでした

