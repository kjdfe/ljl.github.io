WEBVTT
Kind: captions
Language: ar

00:00:00.210 --> 00:00:04.236
حسنًا هنا ما سأقترحه هو ترتيبي المفضل، وهو أن ننتقل أولاً إلى

00:00:04.236 --> 00:00:08.460
،write stub، daysInMonth، ومن شأنها أن تأخذ سنة وشهرًا وترجع دائمًا 30

00:00:08.460 --> 00:00:12.663
،وهي بالتأكيد ليست صحيحة. بعد ذلك سنقوم بتعديل روتين nextDay لاستخدام stub

00:00:12.663 --> 00:00:16.300
،وبعد ذلك، على الفور، سنقوم باختباره. في هذه المرحلة

00:00:16.300 --> 00:00:19.550
لن نفعل أي شيء من شأنه تغيير المخرجات التي حصلنا عليها من قبل

00:00:19.550 --> 00:00:22.800
إذا كانت الأمور صحيحة. ولكننا الآن نعيد هيكلة الكود بطريقة

00:00:22.800 --> 00:00:26.760
.تجعل كل ما علينا القيام به هو تحسين daysInMonth. وبعد ذلك، نحصل على الإجابة الصحيحة

00:00:26.760 --> 00:00:31.674
،الشيء التالي الذي سأقوم به هو تعديل daysInMonth لتصبح صحيحة

00:00:31.674 --> 00:00:35.020
باستثناء السنوات الكبيسة. إنني أقوم بتأجيل السنوات الكبيسة بقدر ما أستطيع لأنني أعتقد أن

00:00:35.020 --> 00:00:38.530
السنوات الكبيسة مزعجة حقًا. ولكن هناك تعقيد أيضًا ولكنه لا يأتي

00:00:38.530 --> 00:00:41.910
إلا في بعض الأحيان. يمكن أن نكون بالفعل قد اقتربنا من الإجابة الصحيحة

00:00:41.910 --> 00:00:45.174
،ونعرف أن لدينا هيكل الكود وكل شيء في المكان الجيد

00:00:45.174 --> 00:00:48.882
لنضع هذا جانبًا. حسنًا سأقوم بهذا. بعد ذلك أعتقد أنها فكرة جيدة للاختبار مرة أخرى. لذا

00:00:48.882 --> 00:00:52.858
سنعمل على إجراء الاختبار مرة أخرى في الخطوة الخامسة، ومن الممكن جدًا

00:00:52.858 --> 00:00:57.648
إجراء الاختبار باستخدام daysInMonth. وأعتقد أنه من الأسهل أن تفعلوا ذلك

00:00:57.648 --> 00:01:02.236
باستخدام nextDay، نظرًا لأنني يمكن أن أستمر في إعادة تنفيذ نفس الاختبارات الذي فعلته

00:01:02.236 --> 00:01:06.541
في الخطوة الثالثة. الآن، لقد وصلت إلى المرحلة التي لا يمكنني فيها

00:01:06.541 --> 00:01:10.427
،تأجيل السنوات الكبيسة لفترة أطول، لذلك سأقوم بالعمل على السنوات الكبيسة

00:01:10.427 --> 00:01:15.097
.وسأكتب الإجراء المساعد isLeapYear. هذه هي الخطوة السادسة، وسأقوم باختبار هذا بشكل منفصل

00:01:15.098 --> 00:01:18.532
هذه خطوة أخرى يمكن أن نتناقش حولها، حسنًا، يمكنني اختبار هذا باستخدام

00:01:18.532 --> 00:01:22.375
daysInMonth أو باستخدام nextDay. في هذه الحالة isLeapYear، إنها حالات خاصة

00:01:22.375 --> 00:01:26.108
،كافية لجعل أن من المنطقي اختبار ذلك بشكل منفصل. حسنًا، وبعد أن أقوم بذلك

00:01:26.108 --> 00:01:30.195
،يجب أن يكون لدي الحل الصحيح بشكل كامل. يمكنني اختبارها بشكل منفصل

00:01:30.195 --> 00:01:33.749
ولكنني واثق جدًا من بقية الأكواد الخاصة بي في هذه المرحلة. سأنتقل مباشرة

00:01:33.749 --> 00:01:37.450
،إلى الخطوة K وتشغيل جميع حالات الاختبار. حسنًا هذا هو الترتيب الذي أوصي به

00:01:37.450 --> 00:01:41.720
ولكن هناك الكثير من الترتيبات الأخرى التي قد تكون منطقية. أحد الأشياء المنطقية

00:01:41.720 --> 00:01:44.570
بالتأكيد سيكون نقل ما يخص السنة الكبيسة

00:01:44.570 --> 00:01:48.048
إلى البداية. إذا كنتم تحبون السنة الكبيسة، ولا تريدون تأجيلها، فمن السهل

00:01:48.048 --> 00:01:51.956
أن تفعلوا ذلك بشكل منفصل أولاً. الشيء الآخر الذي قد يحدث هو استخدام

00:01:51.956 --> 00:01:55.176
اختبار daysInMonth بدلاً من اختبار nextDay. سيكون هذا

00:01:55.176 --> 00:01:58.395
منطقي بامتياز أيضًا. هناك الكثير من الإجابات الصحيحة لحل هذا السؤال. الخاصية التي يجب

00:01:58.395 --> 00:02:02.348
أن تكون لدى كل منها، كل الإجابات الصحيحة، هو أن تكتبوا القليل من الأكواد التي

00:02:02.348 --> 00:02:06.022
يمكنكم اختبارها بشكل منفصل أثناء التنقل. لا تريدون كتابة

00:02:06.022 --> 00:02:09.514
الكثير من الأكواد ولن تتمكنوا من اختبارها. أحد أهم الأشياء التي عليكم

00:02:09.514 --> 00:02:12.938
،تعلمها باعتباركم مطوّرين هو التفكير في طرق لإنشاء الكود، لتنظيم طريقة بناء الكود

00:02:12.938 --> 00:02:16.708
بحيث تكونون قادرين على القيام باختبارات ذات مغزى أثناء التنقل

00:02:16.708 --> 00:02:20.304
ورؤية الكود يقترب تدريجيًا من الحل الذي تحتاجونه

00:02:20.304 --> 00:02:24.132
لذلك. عندما تحصلون على ثقة أكبر كمبرمجين، يمكنكم تخطي

00:02:24.132 --> 00:02:27.540
بعض هذه الخطوات. ولكن جزءًا من دوافعي في طرح هذا السؤال هو، أني عندما

00:02:27.540 --> 00:02:31.115
،حاولت حل هذه المشكلة بنفسي، كان عندي خطأ في الحل

00:02:31.115 --> 00:02:35.278
لأنني لم أتبع هذه الخطوات بعناية كافية. لقد حاولت تشغيل جميع حالات الاختبار ولكنها

00:02:35.278 --> 00:02:39.440
.فشلت كلها. واستغرق التصحيح وقتًا أطول بكثير مما لو كنت اتبعت هذا النمط

00:02:39.440 --> 00:02:43.470
ما سأشجعكم على القيام به عند تطوير الحل الخاص بك، هو كتابة الكود

00:02:43.470 --> 00:02:47.550
لتشغيل كل هذه الاختبارات كجزء من الحل الخاص بكم. وما أتمنى حدوثه إذا فعلتم

00:02:47.550 --> 00:02:51.937
،هذه الخطوات، القيام بالاختبار أثناء التنقل. عندما تصلون أخيرًا إلى الخطوة K

00:02:51.937 --> 00:02:56.215
وتشغيل جميع حالات الاختبار، فسوف تعمل كلها بشكل صحيح

00:02:56.215 --> 00:03:00.014
في المرة الأولى بطريقة سحرية. إلا أنه لن يكون سحرًا. وهذا سوف يكون نتيجة لبناء الأشياء

00:03:00.014 --> 00:03:01.453
.بطريقة منهجية ودقيقة

