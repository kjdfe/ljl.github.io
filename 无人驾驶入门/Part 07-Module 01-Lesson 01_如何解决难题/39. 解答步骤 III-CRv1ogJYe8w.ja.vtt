WEBVTT
Kind: captions
Language: ja

00:00:00.360 --> 00:00:04.080
それでは最後に最も面倒くさいものが残っています
うるう年に対処しなければなりません

00:00:04.080 --> 00:00:08.210
私の解決策ではうるう年の評価は成功しませんでした

00:00:08.210 --> 00:00:12.150
うるう年かどうか解明する方法を
見つけ出す必要があります

00:00:12.150 --> 00:00:16.470
うるう年のルールはとても複雑です
Wikipediaで分かることを確認してみましょう

00:00:16.470 --> 00:00:21.570
これはとても面白いです　うるう日があることで
至点がどれくらい正確なのか確認できます

00:00:21.570 --> 00:00:25.660
ここですばらしいことは
これにはコードがあるということです

00:00:25.660 --> 00:00:29.590
Pythonコードではありませんが
とても近いものです

00:00:29.590 --> 00:00:33.750
これがその年がうるう年なのか把握するための
アルゴリズムを記述するとても確実な方法です

00:00:33.750 --> 00:00:37.830
400で割り切れる年はうるう年です
でも100で割り切れる年はうるう年にはなりません

00:00:37.830 --> 00:00:41.860
400で割り切れないが4で割り切れる場合は
うるう年です

00:00:41.860 --> 00:00:46.030
それ以外はうるう年になりません
これらをコードに変換しましょう

00:00:46.030 --> 00:00:49.600
切り取って貼りつけします　これで分かります

00:00:49.600 --> 00:00:53.920
小さなフォントにするか大きいスクリーンで行えば
同時に確認できるので

00:00:53.920 --> 00:00:57.580
切り取って貼りつける必要はありません
しかしコメントとして行うのはよいことでしょう

00:00:57.580 --> 00:01:01.090
ここでやらなくてはいけないことは
Pythonに変換することです

00:01:01.090 --> 00:01:06.870
とても簡単な方法で行うことができます
1行にすることで入力を減らして少し手抜きをします

00:01:06.870 --> 00:01:08.570
もう一度考えさせてください

00:01:08.570 --> 00:01:13.930
解決してみます　コードをさらに何行か使い
Wikipediaで分かったことに忠実に従ってみます

00:01:13.930 --> 00:01:17.050
yearを400で割った余りがゼロに等しい場合は
Trueを返します

00:01:17.050 --> 00:01:21.900
これがうるう年です　yearを100で割った余りが
ゼロに等しい場合はFalseを返します

00:01:21.900 --> 00:01:26.460
これはうるう年ではありません　yearを4で割った
余りがゼロに等しい場合はTrueを返します

00:01:26.460 --> 00:01:31.100
もし違う場合でも返しているのでelseは不要です

00:01:31.100 --> 00:01:35.550
Falseを返します　それをテストしてみましょう

00:01:35.550 --> 00:01:40.230
これが簡単だと思っていなければ
うるう年をテストする特別なテストケースを

00:01:40.230 --> 00:01:44.560
さらに書いていたでしょう
そんなに難しくはなさそうなので

00:01:44.560 --> 00:01:48.660
テストケースを数回手作業で行ってみたいと思います

00:01:48.660 --> 00:01:54.410
2000は400で割り切れるのでうるう年です
2100は400で割り切れないので

00:01:54.410 --> 00:02:02.100
うるう年にはならないはずです
2012はうるう年になるはずです

00:02:02.100 --> 00:02:06.350
2013年はうるう年になりません
うまくできている自信がかなりあります

00:02:06.350 --> 00:02:10.639
それではdaysとmonthsにこれを入力してみましょう
月が2月の時は

00:02:10.639 --> 00:02:14.490
daysInMonthのケースを変えなければいけません
yearをチェックする必要があります

00:02:14.490 --> 00:02:18.850
もしうるう年なら29を返しそれ以外は28を返します
ここでelseは必要ありません

00:02:18.850 --> 00:02:21.970
もっとバランスをよくする時にだけelseを配置します

00:02:21.970 --> 00:02:26.140
それでは現在のテストを実行します
ブレークしなかったことを確認してください

00:02:26.150 --> 00:02:30.420
終了します　これはよい兆候です
さらにうるう年がある場合のテストを追加しましょう

00:02:30.420 --> 00:02:34.960
これからうるう年の場合のnextDayを
2月28日でテストします

00:02:34.960 --> 00:02:40.100
さらに長いyearテストを行う必要があります
うるう年の日数は366日になるはずです

00:02:40.100 --> 00:02:44.890
この2つを取得しました
手動で行ったテストをさらに追加してみましょう

00:02:44.890 --> 00:02:49.680
確認してみます　すべてのテストに合格しました

00:02:49.680 --> 00:02:51.680
今度は与えられたテストでこれを実行してみます

