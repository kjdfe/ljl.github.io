WEBVTT
Kind: captions
Language: ja

00:00:00.040 --> 00:00:04.310
これに答えるために
先回追加した疑似コードについて解説します

00:00:04.310 --> 00:00:08.880
1つ目の日付が2つ目の日付より前かどうかという
停止条件を知る必要がある場合

00:00:08.910 --> 00:00:11.000
このwhileループを使います

00:00:11.000 --> 00:00:15.730
これでnextDayを実装するための手順を得ました

00:00:15.730 --> 00:00:20.600
ヘルパー関数を書くのであれば
エンコードする準備ができました

00:00:20.600 --> 00:00:24.380
この日付の比較を簡単に行うことができるものを
書きましょう

00:00:24.380 --> 00:00:27.980
daysBetweenDatesコード内で比較を行うよりも
ヘルパー関数で行う方がいいです

00:00:27.980 --> 00:00:31.570
別の日の前の日付かどうか把握することは
おそらく役立つことです

00:00:31.570 --> 00:00:35.380
これを書く場合 他のコンテキストにおいても
活用できるでしょう

00:00:35.380 --> 00:00:41.420
ヘルパー関数を分けて書く他の利点は
別々にテストできることです

00:00:41.420 --> 00:00:44.820
最初にdaysBetweenDatesを書き始める代わりに

00:00:44.910 --> 00:00:49.310
停止条件を決めるヘルパー関数を
書き始めることの方がずっと重要です

00:00:49.330 --> 00:00:50.420
では そうしてみましょう

00:00:50.420 --> 00:00:54.750
3つの値がコード化されたままの2つの日付を
入力として使用し

00:00:54.750 --> 00:00:59.300
dateIsBefore関数を書きます
そしてTrueかFalseを返すことで

00:00:59.300 --> 00:01:04.290
year1、month1、day1が
year2、month2、day2の前にあるかが分かります

00:01:04.290 --> 00:01:07.230
自分でdaysBetweenDatesのコードが
書けなかった場合

00:01:07.230 --> 00:01:10.250
このヒントを参考に何度も試してみてください

00:01:10.250 --> 00:01:14.500
まずはdateIsBeforeが書けるかを確認し
daysBetweenDatesを書き始める前に

00:01:14.500 --> 00:01:17.460
正確かどうかテストしてください
次に私のコードをお見せします

