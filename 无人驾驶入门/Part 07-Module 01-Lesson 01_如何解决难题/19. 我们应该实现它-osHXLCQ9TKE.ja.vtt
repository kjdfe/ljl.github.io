WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:03.160
最良の答えはこのノーです　解説しましょう

00:00:03.160 --> 00:00:05.230
このコードはすでにかなり複雑です

00:00:05.230 --> 00:00:07.640
2つのループと多くの文が含まれています

00:00:07.640 --> 00:00:09.670
そしてあまり多くのケースを扱えません

00:00:09.670 --> 00:00:11.940
対処できないケースについて考えてみましょう

00:00:11.940 --> 00:00:15.840
2つの日付の初期値が同じ月の場合は対処できません

00:00:15.840 --> 00:00:20.140
daysにはmonth1のすべての日数を加えますが

00:00:20.140 --> 00:00:24.490
day2もmonth1にある場合は
daysにday2を加えると間違った答えになります

00:00:24.490 --> 00:00:29.520
2つの日付の差を引くという特別な処理を加えれば
対処できそうです

00:00:29.520 --> 00:00:33.160
月が同じ場合を考慮するために
何か異なる処理をループで行う必要があるでしょう

00:00:33.160 --> 00:00:35.700
新たな特別処理が必要となって大変です

00:00:35.700 --> 00:00:38.500
1つなら問題ありませんが
対処できないケースは他にもあります

00:00:38.500 --> 00:00:41.640
month2がmonth1の前にある場合も対処できません

00:00:41.640 --> 00:00:43.210
年が異なる場合には

00:00:43.210 --> 00:00:48.710
month2がmonth1の前であっても
2つ目の日付が1つ目の日付のあとになり得るのですが

00:00:48.710 --> 00:00:50.710
そのケースに正しく対処できません

00:00:50.710 --> 00:00:53.980
その他に正しく対処できないのは
うるう年の日数を数えることです

00:00:53.980 --> 00:00:56.950
year1の日数を加えるこのループでは

00:00:56.950 --> 00:01:01.460
その時点が何月であるかを基に
2月が含まれるかどうかを判断して

00:01:01.460 --> 00:01:05.160
year1の日数を特定する必要があるのです

00:01:05.160 --> 00:01:08.800
対処できない処理はこのようにたくさんありますが
コードの修正は可能なはずです

00:01:08.800 --> 00:01:12.670
2つ目を選んだ方は試してみるといいでしょう

00:01:12.670 --> 00:01:14.870
正確に動くプログラムに修正するのです

00:01:14.870 --> 00:01:17.210
きっとできるはずですが
プログラマとしての私たちの目標は

00:01:17.210 --> 00:01:19.110
まず簡単な解き方を探すことです

00:01:19.110 --> 00:01:21.940
このように複雑なコードを正すのは非常に困難です

00:01:21.940 --> 00:01:26.000
こうした多くの特別なケースに
対処しようとする人たちの議論を

00:01:26.000 --> 00:01:27.940
フォーラムでたくさん目にしますが

00:01:27.940 --> 00:01:30.850
修正するのは大変困難です
コードも非常に複雑になります

00:01:30.850 --> 00:01:32.390
まずはもっと簡単な方法を考えましょう

00:01:32.390 --> 00:01:35.090
人間が問題を解く方法が
最も簡単な方法だとは限りません

00:01:35.090 --> 00:01:38.660
人間は怠け者なので
本当に簡単で機械的な方法で処理するよりも

00:01:38.660 --> 00:01:40.400
手っ取り早い方法を探したくなってしまうからです

00:01:40.400 --> 00:01:42.300
一方コンピュータは怠け者ではありません

00:01:42.300 --> 00:01:44.830
簡単で機械的な方法での処理は
コンピュータにうってつけです

00:01:44.830 --> 00:01:47.840
プログラムも書きやすくなり
より正確なものに近づきます

