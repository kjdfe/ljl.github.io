WEBVTT
Kind: captions
Language: ar

00:00:00.025 --> 00:00:03.440
إذًا، السؤال الأول الذي يلزم إجابته لأي مشكلة هو ما هي الإدخالات؟

00:00:03.440 --> 00:00:07.334
بالنسبة لهذه المشكلة يفيد النص بوضوح وبساطة، إعطاء تاريخ ميلادك

00:00:07.334 --> 00:00:10.502
والتاريخ الحالي. حسنًا، هذا هو الإدخال إلى هذه المشكلة. ما مجموعة الإدخالات

00:00:10.502 --> 00:00:13.685
التي نريد أن يعمل ذلك لصالحها؟ هل ينبغي حقًا أن تعمل فقط لتاريخ ميلادي

00:00:13.685 --> 00:00:17.305
وتاريخ اليوم الحالي؟ إذا كان هذا هو كل ما نريد منه أن يعمل لصالحه فإننا نستطيع لاحقًا

00:00:17.305 --> 00:00:20.508
تحديده مرة. لا يجب علينا بالفعل كتابة إجراء. بالتالي أعتقد أن

00:00:20.508 --> 00:00:24.729
المقصود من هذا هو شيء ما أكثر شمولية. إذًا الإدخالات هي بالفعل

00:00:24.729 --> 00:00:27.803
تاريخان، وهذا يمنحنا نوع الإدخال، والذي يمنحنا بدوره مجموعة من

00:00:27.803 --> 00:00:31.180
جميع الإدخالات الممكنة. نحتاج إلى التفكير قليلاً بحرص لمعرفة ما إذا كان جميعهم

00:00:31.180 --> 00:00:34.283
،صالحًا. حسنًا، عبارة السؤال تمنحنا لغزًا جيدًا هنا. فهي تقول

00:00:34.283 --> 00:00:38.561
افترض أن تاريخ الميلاد والتاريخ الحالي كانا تاريخين صحيحين بدون مرور

00:00:38.561 --> 00:00:41.988
زمني. هذا الاحتمال يكون افتراضًا صحيحًا إذا كنا نتحدث عن تواريخ الميلاد

00:00:41.988 --> 00:00:46.499
والتواريخ الحالية. إذا كنا نقارن تاريخين، فهذا سيفيد بأن التاريخ الثاني

00:00:46.499 --> 00:00:51.152
يلزم بأن يكون بعد التاريخ الأول. فالافتراضات المشابهة لهذا تسهل الأمور بالنسبة

00:00:51.152 --> 00:00:55.660
للمبرمجين. وهذا معناه أنه من الأسهل كتابة الكود بما أنه يعمل لصالح عدد

00:00:55.660 --> 00:00:59.768
أقل من الإدخالات الممكنة. يعجبني الأسلوب الذي ذكر به Mattias بأن هذا ليس مرورًا زمنيًا. بالنسبة

00:00:59.768 --> 00:01:04.058
،لمواصفات أحد البرامج، ربما نريد أن نكون أكثر دقة قليلاً

00:01:04.058 --> 00:01:08.200
ونذكر فقط وببساطة بأن التاريخ الثاني يجب ألا يكون قبل التاريخ الأول. وإذا كنا

00:01:08.200 --> 00:01:11.244
مبرمجين دفاعيين أكفاء، فينبغي لنا التحقق مما إذا كان ذلك صحيحًا. هذا افتراض

00:01:11.244 --> 00:01:16.458
وهو يعود إلى مستخدم الكود لتلبية ذلك، لأننا قلنا ،

00:01:16.458 --> 00:01:20.610
بأن هذا مطلوب. لاستخدام الحل يجب عليك التأكد من أن التاريخ

00:01:20.610 --> 00:01:24.020
الثاني ليس قبل التاريخ الأول. لكن إذا أردنا التحلي بالذكاء فسنقوم

00:01:24.020 --> 00:01:27.485
بالبرمجة بطريقة أكثر دفاعية، لأنه أحيانًا بعض الأشخاص يرتكبون

00:01:27.485 --> 00:01:30.944
أخطاءً أو ربما نرتكب نحن أخطاء. وسنقوم فعليًا بالتحقق من هذا في

00:01:30.944 --> 00:01:34.835
الكود. الافتراض الثاني الذي ربما نريده هو شيء ما حول نطاق

00:01:34.835 --> 00:01:39.105
التواريخ. التقويمات معقدة للغاية كما أنها تغير على مدار التاريخ. سنطلب

00:01:39.105 --> 00:01:44.110
أن تكون التواريخ صحيحة في التقويم الغريغوري، والذي

00:01:44.110 --> 00:01:48.142
يبدأ في أكتوبر 1582. ومن المحتمل أن يعمل الكود للتواريخ الواقعة خارج هذا

00:01:48.142 --> 00:01:51.726
النطاق، لكن ربما لن نحصل على الإجابة الصحيحة تمامًا، فمنذ تغيّر

00:01:51.726 --> 00:01:53.553
.التقويم، تغيّر أيضًا معنى التواريخ

