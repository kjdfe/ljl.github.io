{
  "data": {
    "lesson": {
      "id": 720078,
      "key": "1547d570-d579-43bd-bdcb-fc911e555320",
      "title": "小乌龟（turtle）和你的第一行代码 ",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "zh-cn",
      "summary": "开始学习用 Python 进行编程的核心概念，并编写指令，使虚拟“turtle”机器人在屏幕上画出多彩的图形。",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://s3.amazonaws.com/zips.udacity-data.com/1547d570-d579-43bd-bdcb-fc911e555320/720078/1544268660273/Turtle+%E5%92%8C%E4%BB%A3%E7%A0%81+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://s3.amazonaws.com/zips.udacity-data.com/1547d570-d579-43bd-bdcb-fc911e555320/720078/1544268655663/Turtle+%E5%92%8C%E4%BB%A3%E7%A0%81+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 720006,
          "key": "5baabfe9-0cec-4aab-8b0e-c2537eb6c550",
          "title": "欢迎！",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5baabfe9-0cec-4aab-8b0e-c2537eb6c550",
            "completed_at": "2019-05-29T14:57:00.319Z",
            "last_viewed_at": "2019-05-29T14:58:22.238Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719517,
              "key": "e879c115-ecc0-43ac-8cd6-4255eea488c5",
              "title": "Python：欢迎学习 Python 编程",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "_XOoHSQIkkw",
                "china_cdn_id": "_XOoHSQIkkw.mp4"
              }
            },
            {
              "id": 719518,
              "key": "c57c62bc-2ea3-4426-879e-59628f094982",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://d17h27t6h515a5.cloudfront.net/topher/2017/November/5a0a2707_rainbow-examples/rainbow-examples.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c57c62bc-2ea3-4426-879e-59628f094982",
              "caption": "*学完这节课后，你将能够编写程序来绘制像这样的多彩图形！*",
              "alt": "三个彩虹色的形状：星星、彩虹旗和星爆。",
              "width": 516,
              "height": 197,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 719740,
          "key": "f5c2f9cb-2ced-423c-ab9f-f279a02d99d9",
          "title": "开始学习",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f5c2f9cb-2ced-423c-ab9f-f279a02d99d9",
            "completed_at": "2019-05-29T14:58:26.006Z",
            "last_viewed_at": "2019-05-29T14:58:27.592Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719511,
              "key": "2ef65f99-e801-41df-8a48-0370d6331c53",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# ❇️ 开始学习\n\n在这节课，你将使用叫做 **Python** 的语言编辑和编写代码。你将在 **workspace**（下方的灰色大方框）中完成这些操作。\n",
              "instructor_notes": ""
            },
            {
              "id": 719512,
              "key": "05b777f3-dfd4-4c64-86df-f217f4b75329",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "6d799d3a-7c19-48c9-a842-e8c3d4380170",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/blank.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/blank.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801164,
              "key": "e201a76b-4309-4185-a8c9-3a7610b571ab",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)，我们将本单元内所有有可能需要workspace实现的代码都集成在了这个项目中，你可以遵循教程，安装本地环境，并在本地环境下运行相关代码，在你自己的电脑上进行turtle~",
              "instructor_notes": ""
            },
            {
              "id": 719513,
              "key": "7509c8ea-cc43-4807-b48b-854850edc102",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在 workspace 的左侧是一个**编辑器**，你将在里面编写代码。在右侧可以查看代码的运行效果。**运行**按钮告诉 workspace 开始运行代码。\n\n首先，将下面的代码复制粘贴到 workspace 的左侧：\n\n```python\nimport turtle\nfred = turtle.Turtle()\nfred.color(\"red\")\nfred.forward(100)\nfred.right(135)\nfred.forward(140)\nfred.right(135)\nfred.forward(100)\n```\n\n你可能根本不知道这段代码的含义是什么，完全没关系！在下面的几个页面中，你将尝试该代码，以便知道它的原理。\n\n将这段代码粘贴到 workspace 中之后，点击**运行**按钮。\n\n你在上面粘贴的代码行是一个**程序** — 让计算机去执行的一组指令。在此示例中，该程序告诉计算机在屏幕上画一个三角形。\n\n> **术语**：**程序**是面向计算机的一组指令。程序由代码行组成。每行告诉计算机关于这些指令的一个特定细节信息。\n\n在这节课，你将编写程序来向 **turtle** 发出指令，使它们创建不同的形状和图形。你可以将 turtle 看做虚拟机器人，它们知道如何在屏幕上绘制线条，可以遵守 `forward`、`back`、`left` 和 `right` 等命令。（稍后我们将解释它们为何叫做“turtle”）。\n\n## 尝试一下它吧！\n\n你可以编辑上述代码中的指令。实验代码是了解它的工作原理的很好方式。请尝试更改数字。可以通过复制粘贴重复某些指令！始终记得重新按下**运行**，看看代码的运行效果如何。\n\n不能犯错 — 当你遇到错误消息时，可以使用**撤消**命令（在 Windows 上是 <kbd>Ctrl+Z</kbd>，在 Mac 上是 <kbd>⌘+Z</kbd>）撤消修改。你可以随意**撤消**多次，一直恢复到原始起始代码状态。\n\n**注意：**如果未选择编辑器，撤消命令将没反应。因此，如果撤消命令似乎不起作用，确保你先在编辑器中点击一下（在 workspace 的左侧点击）。",
              "instructor_notes": ""
            },
            {
              "id": 719514,
              "key": "021b7414-4e7d-4c1a-9cd8-815aae0eba3f",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "021b7414-4e7d-4c1a-9cd8-815aae0eba3f",
                "completed_at": "2019-05-29T15:00:59.381Z",
                "last_viewed_at": "2019-05-29T15:01:02.313Z",
                "unstructured": "{\"selected_ids\":[0,1,2,3]}"
              },
              "tasks": [
                "将代码粘贴到 workspace 编辑器中。",
                "通过按下**运行**按钮运行代码。",
                "试着稍微修改下代码并重新按下**运行**。",
                "尝试使用**撤消**命令恢复某些更改。"
              ],
              "positive_feedback": "turtle 的一小步...",
              "video_feedback": null,
              "description": "当你完成这些操作后，请选中它们 —"
            },
            {
              "id": 719515,
              "key": "90dbdcf3-14e0-4428-8ad9-75cb17ce0f9b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 为何要使用 turtle？\n\n学习编程的方式多种多样。很多编程课程首先都会从在终端窗口里显示文本的程序开始。但是如果只能看到一个文本输出页面，通常很难判断程序正在执行什么操作。对于 turtle，你可以观看它逐渐构建一个模式或形状，从而查看程序正在执行什么操作。\n\n学习编程不仅仅是学习 Python 等编程语言的语法，主要是学习思考模式、重复、流程和信息的思维方式。turtle 使我们能够可视化这些过程。\n\n### 为何称为“turtle”？\n\n“turtle graphics”这个概念是在上世纪六十年代由计算机教育家 Seymour Papert 提出来的。一开始，turtle 是一个实际机器人，半球形的外壳看起来像海龟的外壳。该机器人拿着一个笔并且能够在一张大纸上画画。随着计算机越来越便宜，图形效果越来越好，turtle 机器人通常被替换成了屏幕上的版本，就像我们在这门课程中使用的虚拟机器人一样。",
              "instructor_notes": ""
            },
            {
              "id": 719516,
              "key": "4a1b83d5-f366-4f07-99b0-123bd6e5fe37",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://d17h27t6h515a5.cloudfront.net/topher/2018/January/5a4d38b6_turtle-draw/turtle-draw.jpg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/4a1b83d5-f366-4f07-99b0-123bd6e5fe37",
              "caption": "_在纸上绘画的 turtle 机器人。_  \n[_图像来自 Valiant Technologies, Ltd._](https://commons.wikimedia.org/wiki/File:Turtle_draw.jpg)",
              "alt": "在纸上绘画的 turtle 机器人。",
              "width": 281,
              "height": 207,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 720011,
          "key": "0ed5bf38-a703-4cdb-94fd-29917ec546ec",
          "title": "使用 turtle 绘画",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0ed5bf38-a703-4cdb-94fd-29917ec546ec",
            "completed_at": "2019-05-29T15:01:19.357Z",
            "last_viewed_at": "2019-06-03T07:43:55.423Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719552,
              "key": "a7440b8e-9366-4f4b-a9a0-de8d3c35285c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 🖍 使用 Turtle 绘画\n\n这是一段不同的代码。按下**运行**按钮后会发生什么？",
              "instructor_notes": ""
            },
            {
              "id": 719553,
              "key": "df459a58-bf75-4670-b7ec-e1a095a17899",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "69c608dc-afbc-4ac4-b65f-fafd55f987a4",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/one.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/one.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801165,
              "key": "f16ba441-4f42-4999-b70e-616b56839e21",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719554,
              "key": "a5f865f0-7757-4051-a2ec-e5a11c984f08",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a5f865f0-7757-4051-a2ec-e5a11c984f08",
                "completed_at": "2019-05-29T15:04:43.358Z",
                "last_viewed_at": "2019-05-29T15:04:43.358Z",
                "unstructured": "{\"selected_id\":\"a1509147266623\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "按下**运行**按钮后会发生什么？",
                "answers": [
                  {
                    "id": "a1509147266623",
                    "text": "出现了一个箭头图形，并画出一个黄色方形。",
                    "is_correct": true
                  },
                  {
                    "id": "a1509147297140",
                    "text": "出现了一个箭头图形，并画出一个黄色螺旋。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509147298191",
                    "text": "出现一条鱼，并在屏幕上拼出名称“george”。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509147298835",
                    "text": "程序将计算机变成一只可爱的小狗，它会咬住你的鞋。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719555,
              "key": "d6baa45a-9a44-4eb4-9c43-3c6e63a6c211",
              "title": "Python：分析代码",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "nBj8D_meKsA",
                "china_cdn_id": "nBj8D_meKsA.mp4"
              }
            },
            {
              "id": 719556,
              "key": "dc1a8d83-d859-43d2-b075-af61cebfecd0",
              "title": "Ginevra",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "dc1a8d83-d859-43d2-b075-af61cebfecd0",
                "completed_at": "2019-05-29T15:05:44.339Z",
                "last_viewed_at": "2019-05-29T15:06:39.267Z",
                "unstructured": "{\"selected_id\":\"a1509147748473\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "如果将名称 `george` 替换为 `amy`，_但只在一行代码中进行替换_，会怎样？试着在上面的编辑器中进行这一更改，并再次运行代码。会发生什么？",
                "answers": [
                  {
                    "id": "a1509147700276",
                    "text": "它依然会画出一个方形。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509147748473",
                    "text": "它显示一条错误消息。",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719557,
              "key": "78bf9d03-fc7d-4a30-89c0-6847b14f9ae1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #ffffaa\">\n<h2>🐢 保存代码需要时间 🐇</h2><p>当你在 turtle workspace 中编辑代码时，workspace 会将代码保存到优达学城服务器上。只需一小会时间，但是如果在做出更改后很快就按下**运行**按钮，更改可能没有完全保存。如果更改似乎没有生效，请等一会并尝试再次按下**运行**。\n</div>\n",
              "instructor_notes": ""
            },
            {
              "id": 719558,
              "key": "5165cd06-be83-45fc-8a7c-75b1fe9699ee",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5165cd06-be83-45fc-8a7c-75b1fe9699ee",
                "completed_at": "2019-05-29T15:06:45.264Z",
                "last_viewed_at": "2019-05-29T15:06:45.264Z",
                "unstructured": "{\"selected_id\":\"a1510685556537\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "如果将所有的 `george` 替换成 `amy`，会怎样？请试着做出这一更改，并再次运行代码。会发生什么？",
                "answers": [
                  {
                    "id": "a1510685556537",
                    "text": "它再次画出一个方形。",
                    "is_correct": true
                  },
                  {
                    "id": "a1510685587580",
                    "text": "它显示一条错误消息。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719560,
              "key": "c06076ba-0b3b-4766-ba5a-1ed859292e80",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c06076ba-0b3b-4766-ba5a-1ed859292e80",
                "completed_at": "2019-05-29T15:06:49.235Z",
                "last_viewed_at": "2019-05-29T15:06:51.884Z",
                "unstructured": "{\"selected_ids\":[0,1,2]}"
              },
              "tasks": [
                "在上面的 workspace 中**运行**代码。",
                "使用编辑器将所有的名称 `george` 都**替换**成 `amy`。",
                "在做出这一更改之后，**运行**代码。"
              ],
              "positive_feedback": "我们可以画出红色三角形和黄色方形了，下一步呢？",
              "video_feedback": null,
              "description": "在继续之前，确保已经完成每一步！"
            }
          ]
        },
        {
          "id": 720007,
          "key": "13c22400-5c38-4c82-b018-4c3043eebe54",
          "title": "变量",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "13c22400-5c38-4c82-b018-4c3043eebe54",
            "completed_at": "2019-05-29T15:06:56.153Z",
            "last_viewed_at": "2019-06-03T07:44:01.897Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719519,
              "key": "2933c903-1248-493b-83ea-d21e482ba24e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": " ",
              "instructor_notes": ""
            },
            {
              "id": 719520,
              "key": "1d3fa3c5-5d83-4ef5-a35b-a4fb703588dc",
              "title": "Python：变量",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "VPnV3RdoB7Q",
                "china_cdn_id": "VPnV3RdoB7Q.mp4"
              }
            }
          ]
        },
        {
          "id": 720008,
          "key": "e0d01825-2321-49d3-8de3-6151faecceda",
          "title": "练习 — 变量等",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e0d01825-2321-49d3-8de3-6151faecceda",
            "completed_at": "2019-05-29T15:10:23.961Z",
            "last_viewed_at": "2019-06-03T07:44:03.760Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719521,
              "key": "eaaa2754-9316-4584-8347-aa1a52672fa3",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "eaaa2754-9316-4584-8347-aa1a52672fa3",
                "completed_at": "2019-05-29T15:10:53.083Z",
                "last_viewed_at": "2019-05-29T15:10:53.083Z",
                "unstructured": "{\"answer_ids\":[\"a1520339247172\",\"a1520339266058\",\"a1520339303922\",\"a1520344348054\",\"a1520347043485\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "请将每一项与描述相匹配。"
                },
                "concepts_label": "描述",
                "answers_label": "术语",
                "concepts": [
                  {
                    "text": "要求计算机执行的一组指令。",
                    "correct_answer": {
                      "id": "a1520339247172",
                      "text": "程序"
                    }
                  },
                  {
                    "text": "知道如何在屏幕上画出线条的_数据对象_。",
                    "correct_answer": {
                      "id": "a1520339266058",
                      "text": "turtle"
                    }
                  },
                  {
                    "text": "在 Mac 上*撤消*上一个代码更改操作。",
                    "correct_answer": {
                      "id": "a1520339303922",
                      "text": "⌘Z"
                    }
                  },
                  {
                    "text": "在 Windows 上*撤消*上一个代码更改操作。",
                    "correct_answer": {
                      "id": "a1520344348054",
                      "text": "Ctrl+Z"
                    }
                  },
                  {
                    "text": "将代码中的名称与计算机内存中的某些数据关联起来。",
                    "correct_answer": {
                      "id": "a1520347043485",
                      "text": "变量"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1520344348054",
                    "text": "Ctrl+Z"
                  },
                  {
                    "id": "a1520339247172",
                    "text": "程序"
                  },
                  {
                    "id": "a1520347043485",
                    "text": "变量"
                  },
                  {
                    "id": "a1520339303922",
                    "text": "⌘Z"
                  },
                  {
                    "id": "a1520339266058",
                    "text": "turtle"
                  }
                ]
              }
            },
            {
              "id": 719526,
              "key": "78a08e7e-d038-425a-89f7-7228cafd0c3d",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "78a08e7e-d038-425a-89f7-7228cafd0c3d",
                "completed_at": "2019-05-29T15:11:01.560Z",
                "last_viewed_at": "2019-05-29T15:11:01.560Z",
                "unstructured": "{\"selected_id\":\"a1520344754898\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "下面是你之前见过的代码：\n\n```python\nimport turtle\nfred = turtle.Turtle()\nfred.color(\"red\")\nfred.forward(100)\nfred.right(135)\nfred.forward(140)\nfred.right(135)\nfred.forward(100)\n```\n代码的哪一部分属于**变量**名称？",
                "answers": [
                  {
                    "id": "a1520344648482",
                    "text": "`import`",
                    "is_correct": false
                  },
                  {
                    "id": "a1520344740291",
                    "text": "`turtle`",
                    "is_correct": false
                  },
                  {
                    "id": "a1520344744858",
                    "text": "`\"red\"`",
                    "is_correct": false
                  },
                  {
                    "id": "a1520344754898",
                    "text": "`fred`",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719522,
              "key": "5f603eee-80e7-4322-8917-c90d8da0136b",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5f603eee-80e7-4322-8917-c90d8da0136b",
                "completed_at": "2019-05-29T15:11:55.932Z",
                "last_viewed_at": "2019-05-29T15:11:55.932Z",
                "unstructured": "{\"selected_id\":\"a1520345699599\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "哪几行代码是**赋值语句**？",
                "answers": [
                  {
                    "id": "a1520345699599",
                    "text": "`fred = turtle.Turtle()`",
                    "is_correct": true
                  },
                  {
                    "id": "a1520345743197",
                    "text": "`import turtle`",
                    "is_correct": false
                  },
                  {
                    "id": "a1520345743942",
                    "text": "`fred.color(\"red\")`",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719523,
              "key": "37426b96-4953-446b-a31e-7705a521632e",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "37426b96-4953-446b-a31e-7705a521632e",
                "completed_at": "2019-05-29T15:12:16.414Z",
                "last_viewed_at": "2019-05-29T15:12:30.832Z",
                "unstructured": "{\"answer_ids\":[\"a1520791986924\",\"a1520792007820\",\"a1520792031470\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "你能将每个语句与正确的描述相匹配吗？\n\n`fred = turtle.Turtle()`"
                },
                "concepts_label": "描述",
                "answers_label": "代码",
                "concepts": [
                  {
                    "text": "提供变量的名称",
                    "correct_answer": {
                      "id": "a1520791986924",
                      "text": "`fred`"
                    }
                  },
                  {
                    "text": "将右侧的内容赋值给左侧的名称",
                    "correct_answer": {
                      "id": "a1520792007820",
                      "text": "`=`"
                    }
                  },
                  {
                    "text": "在内存中创建新的 turtle 数据对象",
                    "correct_answer": {
                      "id": "a1520792031470",
                      "text": "`turtle.Turtle()`"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1520792031470",
                    "text": "`turtle.Turtle()`"
                  },
                  {
                    "id": "a1520792007820",
                    "text": "`=`"
                  },
                  {
                    "id": "a1520791986924",
                    "text": "`fred`"
                  }
                ]
              }
            },
            {
              "id": 719531,
              "key": "f5d5e29b-13b6-4470-b804-9c00468e8f5c",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f5d5e29b-13b6-4470-b804-9c00468e8f5c",
                "completed_at": "2019-05-29T15:11:42.980Z",
                "last_viewed_at": "2019-05-29T15:11:42.980Z",
                "unstructured": "{\"answer\":\"frodo = turtle.Turtle()\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "现在该你来尝试自己输入代码了。要创建名称为 `frodo` 的新 turtle，你会输入哪行代码？\n\n如果可以的话，尝试回忆一下，而不查看之前的例子！",
                "matchers": [
                  {
                    "expression": "\\s*frodo\\s*=\\s*turtle.Turtle\\(\\)\\s*"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 720009,
          "key": "1bda4681-3cfa-4370-a744-10195cff9d8b",
          "title": "更改颜色",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1bda4681-3cfa-4370-a744-10195cff9d8b",
            "completed_at": "2019-05-29T15:12:33.127Z",
            "last_viewed_at": "2019-06-03T07:44:10.256Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719524,
              "key": "739d3cc7-fb2d-4bce-90c1-477b4a2c5e31",
              "title": "Python：演示代码（第 2 部分）",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "qjNbBZAPOlQ",
                "china_cdn_id": "qjNbBZAPOlQ.mp4"
              }
            },
            {
              "id": 719525,
              "key": "979d5c68-8d46-4b8f-aa72-011764f84690",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "下面是你之前见过的相同代码，但是 `george` 替换成了 `amy`。",
              "instructor_notes": ""
            },
            {
              "id": 719527,
              "key": "0bbeba1c-8b7d-45c2-ad5d-a8e3d1698cef",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "2c677285-f02a-4d65-9f8c-30418ca0b58f",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/two.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/two.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801166,
              "key": "1877d21e-9e69-451b-8ab9-22fac6c7bc7d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719528,
              "key": "83a932e8-21a3-4101-a0e4-020791fd49ec",
              "title": "Green",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "83a932e8-21a3-4101-a0e4-020791fd49ec",
                "completed_at": "2019-05-29T15:13:36.922Z",
                "last_viewed_at": "2019-05-29T15:13:36.922Z",
                "unstructured": "{\"selected_id\":\"a1509387489110\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "如果将 `\"yellow\"` 替换成另一个颜色的名称，例如 `\"green\"`，会发生什么？",
                "answers": [
                  {
                    "id": "a1509387467497",
                    "text": "出错了，Turtle 不能变成绿色。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509387489110",
                    "text": "它使 turtle 和方形变成绿色，而不是黄色。",
                    "is_correct": true
                  },
                  {
                    "id": "a1509387490258",
                    "text": "它在屏幕上输出单词“green”。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509387491145",
                    "text": "使网络浏览器崩溃并呼叫 FBI。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719530,
              "key": "e5f16eef-7588-491e-9acf-aa2744b80795",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": ">**术语：** 单词 `\"yellow\"` 和 `\"green\"` 称为**字符串**。_字符串_一词来源于这些代码位是字符*串*（即序列）。换句话说，我们说 `\"yellow\"` 这样的代码是字符*串*。\n\n在之后的课程中，我们将详细讲解字符串是什么，以及它们的原理。暂时只需知道_你可以区分字符串和代码的其他部分，因为它们位于引号内_。\n\n引号不仅使你（程序员）能够判断某个代码是_字符串_—_Python_ 也将能够通过引号判断它是字符串。要查看实际效果，回到 workspace 并尝试删掉 `\"yellow\"` 中的引号，代码变成：\n\n```python\namy.color(yellow)\n```",
              "instructor_notes": ""
            },
            {
              "id": 719529,
              "key": "c21ba685-fc68-40f4-89dc-044d259d21b0",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c21ba685-fc68-40f4-89dc-044d259d21b0",
                "completed_at": "2019-05-29T15:14:09.835Z",
                "last_viewed_at": "2019-05-29T15:14:09.835Z",
                "unstructured": "{\"selected_id\":\"a1520349216845\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "当你删掉引号后运行代码，发生了什么？",
                "answers": [
                  {
                    "id": "a1520349145030",
                    "text": "依然可行，并且像之前一样画了个黄色方形。",
                    "is_correct": false
                  },
                  {
                    "id": "a1520349184845",
                    "text": "画了个方形，但是颜色是黑色，而不是黄色。",
                    "is_correct": false
                  },
                  {
                    "id": "a1520349216845",
                    "text": "显示错误。",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719532,
              "key": "3d674c08-c59c-410a-802a-210514711388",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "确保实验完毕后再添加引号，以便代码能重新运行：\n\n```python\namy.color(\"yellow\")\n```",
              "instructor_notes": ""
            },
            {
              "id": 719533,
              "key": "97fd118f-3512-4211-8255-0ce3b963cfea",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "97fd118f-3512-4211-8255-0ce3b963cfea",
                "completed_at": "2019-05-29T15:14:23.898Z",
                "last_viewed_at": "2019-05-29T15:14:23.898Z",
                "unstructured": "{\"selected_ids\":[\"a1513482906428\",\"a1513482922196\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "有些文本可以在 Python 程序中用作**字符串**。\n\n请选中符合在代码中编写**字符串**的规则。",
                "answers": [
                  {
                    "id": "a1513482862359",
                    "text": "`Hello!`",
                    "is_correct": false
                  },
                  {
                    "id": "a1513482906428",
                    "text": "`\"Hello!\"`",
                    "is_correct": true
                  },
                  {
                    "id": "a1513482922196",
                    "text": "`\"123\"`",
                    "is_correct": true
                  },
                  {
                    "id": "a1513482941221",
                    "text": "`123`",
                    "is_correct": false
                  },
                  {
                    "id": "a1513482945948",
                    "text": "`[1, 2, 3]`",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719534,
              "key": "7c0b7e98-25d5-4cfb-84bb-8781ff59d24b",
              "title": "Python：代码演示（第 3 部分）",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "xh7_q1Q2Irc",
                "china_cdn_id": "xh7_q1Q2Irc.mp4"
              }
            },
            {
              "id": 719535,
              "key": "a88244c7-5dd1-4e49-a2fa-e739dffe6685",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a88244c7-5dd1-4e49-a2fa-e739dffe6685",
                "completed_at": "2019-05-29T15:14:45.512Z",
                "last_viewed_at": "2019-05-29T15:14:45.512Z",
                "unstructured": "{\"selected_ids\":[\"a1509387855282\",\"a1509387869080\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "哪**两个**句子描述了 turtle 的行为？\n\n请选中**两个**答案。",
                "answers": [
                  {
                    "id": "a1509387855282",
                    "text": "它向前移动，右转…向前移动，右转…向前移动，右转…向前移动，右转…",
                    "is_correct": true
                  },
                  {
                    "id": "a1509387867092",
                    "text": "它向前移动，右转，后退并原地打转。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509387869080",
                    "text": "它画一个方形。",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719536,
              "key": "a854c813-58d7-4c68-9b70-6698817237fc",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a854c813-58d7-4c68-9b70-6698817237fc",
                "completed_at": "2019-05-29T15:15:41.914Z",
                "last_viewed_at": "2019-05-29T15:15:41.914Z",
                "unstructured": "{\"selected_id\":\"a1509388264035\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "你认为 `amy.right(90)` 中的数字 90 是什么意思？",
                "answers": [
                  {
                    "id": "a1509388244209",
                    "text": "是解锁 `right` 命令的密码。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509388263216",
                    "text": "turtle 向右猛冲 90 个像素并冲到侧边。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509388264035",
                    "text": "turtle 右转 90 度。",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 720010,
          "key": "7a77b48d-c9b2-4de9-9acd-e0bd1bb5f2e0",
          "title": "更改形状",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7a77b48d-c9b2-4de9-9acd-e0bd1bb5f2e0",
            "completed_at": "2019-05-29T15:15:45.867Z",
            "last_viewed_at": "2019-06-03T07:44:16.281Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719537,
              "key": "b91b240a-590d-4433-aa6a-8ce02ecae9cf",
              "title": "Python：移动并转向",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "_APxiaRZg_0",
                "china_cdn_id": "_APxiaRZg_0.mp4"
              }
            },
            {
              "id": 719538,
              "key": "25f0ae93-de3a-425f-9ba6-7e301e5355e8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在此页面下方，你将更改此程序 —",
              "instructor_notes": ""
            },
            {
              "id": 719541,
              "key": "f208d4ac-5647-4e3f-a527-a669debf2504",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "6879f5ff-92dd-4c68-a91d-d780de0493c9",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/two.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/two.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801167,
              "key": "fe7b30c1-b1b1-41e0-94af-06bc92e4f762",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719539,
              "key": "34e017fa-954f-4523-a153-33ed5d3b2cc1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# ✂️ 将代码分成两部分\n\n我们似乎可以将此代码分成两部分：\n\n```python\nimport turtle\namy = turtle.Turtle()\namy.color(\"green\")\n```\n\n```python\nfor side in [1, 2, 3, 4]:\n\tamy.forward(100)\n\tamy.right(90)\n```\n\n第一部分是设置我们要使用的对象。即指出 `amy` 是一个 turtle，并且 `amy` 将使用绿色。第二部分实际地告诉 `amy` 应该画什么，即画出方形的四条边。通过向前移动并右转画出每条边。 ",
              "instructor_notes": ""
            },
            {
              "id": 719540,
              "key": "d0de40e0-6430-4fce-bc6b-97406111f152",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d0de40e0-6430-4fce-bc6b-97406111f152",
                "completed_at": "2019-05-29T15:17:47.009Z",
                "last_viewed_at": "2019-05-29T15:18:02.540Z",
                "unstructured": "{\"selected_ids\":[\"a1509388807492\",\"a1509388808950\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "要使 Amy 画一个更大的方形，你认为应该怎么更改？\n\n正确答案有**两个**。",
                "answers": [
                  {
                    "id": "a1509388782672",
                    "text": "向 `[1, 2, 3, 4]` 中添加更多数字。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509388807492",
                    "text": "更改 `amy.forward(100)` 里的数字 100。",
                    "is_correct": true
                  },
                  {
                    "id": "a1509388808260",
                    "text": "更改 `amy.right(90)` 里的数字 90。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509388808950",
                    "text": "复制粘贴 `amy.forward(100)` 这一行，使其出现两次。",
                    "is_correct": true
                  },
                  {
                    "id": "a1509388809660",
                    "text": "将单词 `side` 更改为 `bigside`。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719542,
              "key": "451a24c3-883a-40cf-9566-ca18083f19fc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> **术语：**此代码中出现的数字（例如 `1`、`90` 和 `100`）都属于*整数*。**整数**是一个没有分数或小数部分的整数。整数可以是正数、零或负数（例如 `-5`）。",
              "instructor_notes": ""
            },
            {
              "id": 719543,
              "key": "03d693ec-76d7-4d76-8903-f76528ab25c6",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "03d693ec-76d7-4d76-8903-f76528ab25c6",
                "completed_at": "2019-05-29T15:18:31.400Z",
                "last_viewed_at": "2019-05-29T15:18:31.400Z",
                "unstructured": "{\"answer_ids\":[\"a1514766210050\",\"a1514766317331\",\"a1514766325981\",\"a1514766279291\",\"a1514766352066\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "为了确保你理解了概念，请判断哪些数字是**整数**？"
                },
                "concepts_label": "数字",
                "answers_label": "是否是整数？",
                "concepts": [
                  {
                    "text": "4.88",
                    "correct_answer": {
                      "id": "a1514766210050",
                      "text": "不是整数"
                    }
                  },
                  {
                    "text": "-1",
                    "correct_answer": {
                      "id": "a1514766279291",
                      "text": "整数"
                    }
                  },
                  {
                    "text": "47",
                    "correct_answer": {
                      "id": "a1514766317331",
                      "text": "整数"
                    }
                  },
                  {
                    "text": "0",
                    "correct_answer": {
                      "id": "a1514766325981",
                      "text": "整数"
                    }
                  },
                  {
                    "text": "25.5",
                    "correct_answer": {
                      "id": "a1514766352066",
                      "text": "不是整数"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1514766317331",
                    "text": "整数"
                  },
                  {
                    "id": "a1514766352066",
                    "text": "不是整数"
                  },
                  {
                    "id": "a1514766325981",
                    "text": "整数"
                  },
                  {
                    "id": "a1514766279291",
                    "text": "整数"
                  },
                  {
                    "id": "a1514766210050",
                    "text": "不是整数"
                  }
                ]
              }
            },
            {
              "id": 719544,
              "key": "ca3d279b-e755-4efd-ae9c-312aa918007c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 🛠 做出更改\n\n似乎我们是在弄明白此程序的工作原理。但是还需要了解一些其他细节。这些数字到底是什么意思？如果我们想画方形之外的形状— 例如五边形，该怎么办？我们能利用已知的信息得出解决方式吗？\n\n请尝试更改代码，使 turtle 画一个五边形，而不是方形。画不了完美的五边形也没关系，但是试一试吧！",
              "instructor_notes": ""
            },
            {
              "id": 719545,
              "key": "0b35ece7-13a6-4ad0-a8c2-837bc67d264e",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://d17h27t6h515a5.cloudfront.net/topher/2017/November/5a0f3691_penta/penta.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/0b35ece7-13a6-4ad0-a8c2-837bc67d264e",
              "caption": "_尝试让 turtle 画一个五边形，就像这个！_",
              "alt": "画出一个五边形的绿色 turtle。",
              "width": 222,
              "height": 198,
              "instructor_notes": null
            },
            {
              "id": 719546,
              "key": "6e46ea16-4818-41a5-86cf-f4e6f14698cc",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6e46ea16-4818-41a5-86cf-f4e6f14698cc",
                "completed_at": "2019-05-29T15:19:38.993Z",
                "last_viewed_at": "2019-05-29T15:19:38.993Z",
                "unstructured": "{\"selected_ids\":[\"a1509389162500\",\"a1509389185505\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "你需要作出哪些更改，才能使 turtle 画一个五边形？  \n请标记**所有**需要更改的方面。",
                "answers": [
                  {
                    "id": "a1509389162500",
                    "text": "向 `[1, 2, 3, 4]` 中添加第五项。",
                    "is_correct": true
                  },
                  {
                    "id": "a1509389184715",
                    "text": "更改 `forward(100)` 里的数字 100。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509389185505",
                    "text": "更改 `right(90)` 里的数字 90。",
                    "is_correct": true
                  },
                  {
                    "id": "a1509389186225",
                    "text": "为 turtle 设定一个不同的名称。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719547,
              "key": "e3c08ef8-e8c4-4eb5-b33e-99c54dd542cf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": ">**术语：**`[1, 2, 3, 4, 5]` 和 `[7, 2, 1, 0, 9]` 属于**列表**。在 Python 中，列表放入方括号里，并且用逗号分隔各项。\n\n到目前为止，我们在列表中看到的项目都一直是数字（具体而言是整数）。但是也可以将其他数据放入列表里。例如，可以将字符串放入列表里，如下所示：\n\n```python\n[\"hello\", \"yellow\", \"stuff\", \"things\"]\n```",
              "instructor_notes": ""
            },
            {
              "id": 719548,
              "key": "62d5e555-f3b0-4baf-a08e-ab575df6e9fe",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "62d5e555-f3b0-4baf-a08e-ab575df6e9fe",
                "completed_at": "2019-05-29T15:20:45.774Z",
                "last_viewed_at": "2019-05-29T15:20:45.774Z",
                "unstructured": "{\"selected_ids\":[\"a1520363636420\",\"a1520363652468\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "某些文本可以在 Python 程序中当做**列表**。\n\n请标记出符合规则、可以在代码中写成**列表**的项。",
                "answers": [
                  {
                    "id": "a1520363614199",
                    "text": "`\"1, 2, 3, 4, 5\"`",
                    "is_correct": false
                  },
                  {
                    "id": "a1520363636420",
                    "text": "`[1, 2, 3, 4, 5]`",
                    "is_correct": true
                  },
                  {
                    "id": "a1520363650715",
                    "text": "`(1, 2, 3, 4, 5)`",
                    "is_correct": false
                  },
                  {
                    "id": "a1520363651572",
                    "text": "`[1 2 3 4 5]`",
                    "is_correct": false
                  },
                  {
                    "id": "a1520363652468",
                    "text": "`[\"red\", \"orange\", \"yellow\", \"blue\", \"green\", \"blue\", \"purple\"]`",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719549,
              "key": "28fddc7d-e70b-432f-b5ad-387392cacff3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在继续转到下个页面之前，请尝试一下这些代码！看看你能否让 turtle 画出其他形状。你还可以尝试画出六边形或八角星！",
              "instructor_notes": ""
            },
            {
              "id": 719550,
              "key": "63fbd204-8c73-43e5-9557-9ece40f188fa",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://d17h27t6h515a5.cloudfront.net/topher/2018/January/5a4987f4_hexagon-eight-point-star/hexagon-eight-point-star.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/63fbd204-8c73-43e5-9557-9ece40f188fa",
              "caption": "",
              "alt": "两个 turtle 画了一个绿色六边形和一个黄色八角星。",
              "width": 274,
              "height": 133,
              "instructor_notes": null
            },
            {
              "id": 719551,
              "key": "b41a0023-6c06-4c01-a610-e09963392ae9",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b41a0023-6c06-4c01-a610-e09963392ae9",
                "completed_at": "2019-05-29T15:21:12.064Z",
                "last_viewed_at": "2019-05-29T15:21:12.940Z",
                "unstructured": "{\"selected_ids\":[0,1]}"
              },
              "tasks": [
                "使 turtle 画一个五边形，如图中所示。",
                "使 turtle 画一个不同的形状，例如六边形或星星。"
              ],
              "positive_feedback": "太棒了！你已经全面掌握 turtle 知识了。",
              "video_feedback": null,
              "description": "完成这些操作后，请选中它们 —"
            }
          ]
        },
        {
          "id": 720012,
          "key": "1817206a-ae11-4314-93c6-1aef70a84cbd",
          "title": "查找错误",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1817206a-ae11-4314-93c6-1aef70a84cbd",
            "completed_at": "2019-05-29T15:43:24.559Z",
            "last_viewed_at": "2019-06-03T07:44:23.599Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719559,
              "key": "a655d9a8-02a4-4024-b265-37c4ecc5fef4",
              "title": "Python：查找错误",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "h0fOdBumbbk",
                "china_cdn_id": "h0fOdBumbbk.mp4"
              }
            },
            {
              "id": 719561,
              "key": "a91b8c5e-ff86-4a23-ae4f-155dc4132c80",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在下面的 workspace 中是一个不能正常运行的程序。它实际上有两种 bug。在此页面，你将修复这些 bug。\n\n请尝试运行代码并看看发生了什么！",
              "instructor_notes": ""
            },
            {
              "id": 719562,
              "key": "8af55976-21dc-4af5-bd3a-747fbe842dbe",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "ff372ee9-aee8-4b6f-ad09-58d678a27472",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/errors.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/errors.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801168,
              "key": "f27a3970-4300-420a-8fbd-21cf2ec8be6e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719563,
              "key": "dff5274f-d253-4b9f-a5ae-ffacf710a10e",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "dff5274f-d253-4b9f-a5ae-ffacf710a10e",
                "completed_at": "2019-06-03T07:46:30.994Z",
                "last_viewed_at": "2019-06-03T07:46:45.513Z",
                "unstructured": "{\"selected_id\":\"a1509573674899\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "你第一次运行此程序时，显示了什么错误消息？",
                "answers": [
                  {
                    "id": "a1509573649515",
                    "text": "`SyntaxError`",
                    "is_correct": false
                  },
                  {
                    "id": "a1509573674899",
                    "text": "`NameError`",
                    "is_correct": true
                  },
                  {
                    "id": "a1509573675621",
                    "text": "`ZeroDivisionError`",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719564,
              "key": "d43822e2-0beb-46f0-aeb1-fc28a40862b6",
              "title": "Python：查找错误 - 解决方案",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "mmlAuiQKAFI",
                "china_cdn_id": "mmlAuiQKAFI.mp4"
              }
            },
            {
              "id": 719565,
              "key": "19464626-f8f3-403f-9cdc-b2f3984d240e",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "19464626-f8f3-403f-9cdc-b2f3984d240e",
                "completed_at": "2019-06-03T07:46:57.286Z",
                "last_viewed_at": "2019-06-03T07:46:57.286Z",
                "unstructured": "{\"selected_id\":\"a1509575162248\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "请回到页面的顶部并将这些行排成正确的顺序，然后重新运行程序，发生了什么？",
                "answers": [
                  {
                    "id": "a1509575137661",
                    "text": "turtle 画了一个三角形，并输出了关于我们的颜色品位的 `RudeError`。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509575162248",
                    "text": "turtle 开始画三角形，但是然后停止并显示了 `ZeroDivisionError`。",
                    "is_correct": true
                  },
                  {
                    "id": "a1509575168715",
                    "text": "turtle 爆炸成很小的计算机碎片，上面出现 `BoomError`。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719566,
              "key": "8c9d3a01-3a73-4418-8ab5-26246d414738",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8c9d3a01-3a73-4418-8ab5-26246d414738",
                "completed_at": "2019-06-03T07:47:36.160Z",
                "last_viewed_at": "2019-06-03T07:47:36.160Z",
                "unstructured": "{\"selected_id\":\"a1509575518497\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "你认为为何出现了新的错误？错误消息将告诉你从何处开始检查。",
                "answers": [
                  {
                    "id": "a1509575498970",
                    "text": "第 4 行出现了错误。turtle 需要向前移动 120 个像素（`forward(120)`）而不是 100 个像素（`forward(100)`）。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509575517056",
                    "text": "turtle 说英式英语，因此 colo**u**r 应该是 `\"grey\"` 而不是 `\"gray\"`。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509575517772",
                    "text": "在第 3 行末尾有个隐藏结构，使程序崩溃。",
                    "is_correct": false
                  },
                  {
                    "id": "a1509575518497",
                    "text": "在第 7 行有个拼写错误。代码中多出了一个字符。",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719567,
              "key": "1eee774b-6fb4-4101-b57f-95b734225f19",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "修复该错误后，turtle 应该能够继续绘制图形了。\n\n## ❤️ 错误消息是你的好帮手\n\n错误消息的目的是告诉你哪里可能出错了，并指向检测到问题的代码部分（通常是行号）。\n\n这是 Python 等编程语言与 HTML 不同的方面之一。当浏览器读取 HTML 时，它通常会忽视错误。如果你输入 `<tilte>` 而不是 `<title>`，浏览器直接不在网页里放入标题。如果 Python 在代码中看到拼写错误或其他不合理的地方，它将停止运行并告诉你该错误！",
              "instructor_notes": ""
            },
            {
              "id": 719568,
              "key": "9af75f15-f974-4d2a-b852-bf261983d913",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9af75f15-f974-4d2a-b852-bf261983d913",
                "completed_at": "2019-06-03T07:47:41.950Z",
                "last_viewed_at": "2019-06-03T07:47:47.544Z",
                "unstructured": "{\"selected_ids\":[0,1]}"
              },
              "tasks": [
                "请修正第一个错误，使 turtle 能开始绘制图形。",
                "**运行**代码以找到第二个错误。",
                "修正第二个错误，使 turtle 能绘制完图形。",
                "**运行**代码以查看它的效果！"
              ],
              "positive_feedback": "_“耶，画出三角形了！”_",
              "video_feedback": null,
              "description": "在继续之前，确保你已经完成每一步。"
            }
          ]
        },
        {
          "id": 720013,
          "key": "0a595c7c-d4db-412a-a0c6-7256d271e402",
          "title": "模块和方法",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0a595c7c-d4db-412a-a0c6-7256d271e402",
            "completed_at": "2019-06-03T03:41:06.496Z",
            "last_viewed_at": "2019-06-03T07:46:23.767Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719569,
              "key": "8c47f02d-837c-4269-a454-999ccc919943",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 🐢 turtle 来自什么地方？",
              "instructor_notes": ""
            },
            {
              "id": 719570,
              "key": "f24fa566-2fad-48c9-b7f4-8dd332e2523b",
              "title": "Python：模块和方法",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "SlmX9X66vDQ",
                "china_cdn_id": "SlmX9X66vDQ.mp4"
              }
            },
            {
              "id": 719571,
              "key": "6f6b433f-9979-46fa-a54f-0a9700359bc8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "注意，Python 区分大小写。例如，在 `turtle.Turtle()` 中，`Turtle()` 中的 `T` 大写了。因此 `turtle` 与 `Turtle` 含义不一样。我们说 Python 是一个**区分大小写**的编程语言。\n\n并非所有语言都区分大小写。例如，你可能注意到了，在 HTML 中，你通常可以不用大写或小写，网页看起来还是一样的。",
              "instructor_notes": ""
            },
            {
              "id": 719572,
              "key": "b38a37d2-9a71-47cc-9a98-0585a075c293",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b38a37d2-9a71-47cc-9a98-0585a075c293",
                "completed_at": "2019-06-03T03:44:24.162Z",
                "last_viewed_at": "2019-06-03T03:44:24.162Z",
                "unstructured": "{\"selected_id\":\"a1525311879987\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "如果你想在程序里使用叫做 `math` 的模块，你需要在代码里放入以下哪些行？",
                "answers": [
                  {
                    "id": "a1525311831326",
                    "text": "`use math;`",
                    "is_correct": false
                  },
                  {
                    "id": "a1525311879987",
                    "text": "`import math`",
                    "is_correct": true
                  },
                  {
                    "id": "a1525311884307",
                    "text": "`module.load(\"math\")`",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719573,
              "key": "900c6b7c-b3e9-4105-a0e4-032fb7fb9de4",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "900c6b7c-b3e9-4105-a0e4-032fb7fb9de4",
                "completed_at": "2019-06-03T03:44:56.474Z",
                "last_viewed_at": "2019-06-03T03:45:06.305Z",
                "unstructured": "{\"answer_ids\":[\"a1525312114043\",\"a1525312170822\",\"a1525312175511\",\"a1525312187839\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "请将每项与其描述配对起来："
                },
                "concepts_label": "描述",
                "answers_label": "项目",
                "concepts": [
                  {
                    "text": "一个包含实用代码的文件，可以 `import` 到程序里。",
                    "correct_answer": {
                      "id": "a1525312114043",
                      "text": "模块"
                    }
                  },
                  {
                    "text": "一个有名称的代码块，可以*调用*它以使 turtle 执行某个操作。",
                    "correct_answer": {
                      "id": "a1525312170822",
                      "text": "方法"
                    }
                  },
                  {
                    "text": "我们一直使用的某个方法的名称。",
                    "correct_answer": {
                      "id": "a1525312175511",
                      "text": "`forward`"
                    }
                  },
                  {
                    "text": "方法调用。",
                    "correct_answer": {
                      "id": "a1525312187839",
                      "text": "`amy.forward(100)`"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1525312175511",
                    "text": "`forward`"
                  },
                  {
                    "id": "a1525312187839",
                    "text": "`amy.forward(100)`"
                  },
                  {
                    "id": "a1525312170822",
                    "text": "方法"
                  },
                  {
                    "id": "a1525312114043",
                    "text": "模块"
                  }
                ]
              }
            },
            {
              "id": 719574,
              "key": "59b5e21f-8f5f-4dfe-8fe7-01bd0f5a5736",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "59b5e21f-8f5f-4dfe-8fe7-01bd0f5a5736",
                "completed_at": "2019-06-03T03:45:16.764Z",
                "last_viewed_at": "2019-06-03T03:45:16.764Z",
                "unstructured": "{\"selected_id\":\"a1525313100147\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "哪句话准确描述了代码行 `amy.forward(100)`？",
                "answers": [
                  {
                    "id": "a1525313100147",
                    "text": "我们对叫做 `amy` 的 `Turtle` 对象调用 `forward` 方法，并为其提供输入 `100`。",
                    "is_correct": true
                  },
                  {
                    "id": "a1525313250241",
                    "text": "我们将值 `100` 赋值给变量 `forward`。",
                    "is_correct": false
                  },
                  {
                    "id": "a1525313370265",
                    "text": "我们在叫做 `amy` 的方法上安装程序 #100。",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 720014,
          "key": "e921cf24-cf8f-4669-bd37-3c58e34d960f",
          "title": "练习 — 绘制方形",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e921cf24-cf8f-4669-bd37-3c58e34d960f",
            "completed_at": "2019-06-03T03:45:19.942Z",
            "last_viewed_at": "2019-06-03T07:46:27.935Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719575,
              "key": "5b3745e9-39eb-4f0a-bef0-6ff8d3ef9711",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 练习 — 绘制方形\n\n理解某个概念并不一定就意味着你会使用它。为了帮助你巩固新学的技能，我们将练习编写你已经见过的一些代码。\n\n在第一道练习中，我们将要求你判断每行代码的作用是什么。然后，我们将再次阅读代码，并要求你在不查看代码的情况下记住如何编写它们。",
              "instructor_notes": ""
            },
            {
              "id": 719576,
              "key": "4022134c-bcc8-40a3-a01f-4b88b7698d75",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4022134c-bcc8-40a3-a01f-4b88b7698d75",
                "completed_at": "2019-06-03T03:46:05.938Z",
                "last_viewed_at": "2019-06-03T03:46:05.938Z",
                "unstructured": "{\"answer_ids\":[\"a1520025673153\",\"a1520025837480\",\"a1520025939963\",\"a1520025976773\",\"a1520032595647\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "将每段代码与描述相匹配。"
                },
                "concepts_label": "描述",
                "answers_label": "代码",
                "concepts": [
                  {
                    "text": "没有这行代码，你不能用🐢做任何的事情。",
                    "correct_answer": {
                      "id": "a1520025673153",
                      "text": "`import turtle`"
                    }
                  },
                  {
                    "text": "创建一个乌龟并命名他。",
                    "correct_answer": {
                      "id": "a1520025837480",
                      "text": "`amy = turtle.Turtle()`"
                    }
                  },
                  {
                    "text": "给乌龟设置一个可以使用的颜色。",
                    "correct_answer": {
                      "id": "a1520025939963",
                      "text": "`amy.color(\"yellow\")`"
                    }
                  },
                  {
                    "text": "让乌龟右转。",
                    "correct_answer": {
                      "id": "a1520025976773",
                      "text": "`amy.right(90)`"
                    }
                  },
                  {
                    "text": "让乌龟前进。",
                    "correct_answer": {
                      "id": "a1520032595647",
                      "text": "`amy.forward(100)`"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1520025673153",
                    "text": "`import turtle`"
                  },
                  {
                    "id": "a1520025939963",
                    "text": "`amy.color(\"yellow\")`"
                  },
                  {
                    "id": "a1520025837480",
                    "text": "`amy = turtle.Turtle()`"
                  },
                  {
                    "id": "a1520032595647",
                    "text": "`amy.forward(100)`"
                  },
                  {
                    "id": "a1520025976773",
                    "text": "`amy.right(90)`"
                  }
                ]
              }
            },
            {
              "id": 719577,
              "key": "2ab7f132-74eb-4f7e-bc9b-59ba02ad88df",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2ab7f132-74eb-4f7e-bc9b-59ba02ad88df",
                "completed_at": "2019-06-03T03:46:20.226Z",
                "last_viewed_at": "2019-06-03T03:46:20.226Z",
                "unstructured": "{\"answer_ids\":[\"a1520782401447\",\"a1520782434013\",\"a1520782443670\",\"a1520782448536\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "每段代码都是什么类型的代码？"
                },
                "concepts_label": "代码",
                "answers_label": "类型",
                "concepts": [
                  {
                    "text": "`amy`",
                    "correct_answer": {
                      "id": "a1520782401447",
                      "text": "变量"
                    }
                  },
                  {
                    "text": "`\"yellow\"`",
                    "correct_answer": {
                      "id": "a1520782434013",
                      "text": "字符串"
                    }
                  },
                  {
                    "text": "`[1, 2, 3, 4]`",
                    "correct_answer": {
                      "id": "a1520782443670",
                      "text": "列表"
                    }
                  },
                  {
                    "text": "`100`",
                    "correct_answer": {
                      "id": "a1520782448536",
                      "text": "整数"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1520782401447",
                    "text": "变量"
                  },
                  {
                    "id": "a1520782448536",
                    "text": "整数"
                  },
                  {
                    "id": "a1520782443670",
                    "text": "列表"
                  },
                  {
                    "id": "a1520782434013",
                    "text": "字符串"
                  }
                ]
              }
            },
            {
              "id": 719578,
              "key": "7c078607-2eef-4a42-b903-23090b1bf2b8",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7c078607-2eef-4a42-b903-23090b1bf2b8",
                "completed_at": "2019-06-03T03:48:29.848Z",
                "last_viewed_at": "2019-06-03T03:48:29.848Z",
                "unstructured": "{\"answer_ids\":[\"a1520547890367\",\"a1520547978481\",\"a1520548038079\",\"a1520548034538\",\"a1520548029112\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "每段代码都是什么类型的代码？（我们应该使用什么术语描述每行代码？）"
                },
                "concepts_label": "代码",
                "answers_label": "是一个...",
                "concepts": [
                  {
                    "text": "`import turtle`",
                    "correct_answer": {
                      "id": "a1520547890367",
                      "text": "导入语句"
                    }
                  },
                  {
                    "text": "`amy = turtle.Turtle()`",
                    "correct_answer": {
                      "id": "a1520547978481",
                      "text": "赋值语句"
                    }
                  },
                  {
                    "text": "`amy.color(\"yellow\")`",
                    "correct_answer": {
                      "id": "a1520548029112",
                      "text": "方法调用"
                    }
                  },
                  {
                    "text": "`amy.right(90)`",
                    "correct_answer": {
                      "id": "a1520548034538",
                      "text": "方法调用"
                    }
                  },
                  {
                    "text": "`amy.forward(100)`",
                    "correct_answer": {
                      "id": "a1520548038079",
                      "text": "方法调用"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1520548034538",
                    "text": "方法调用"
                  },
                  {
                    "id": "a1520547890367",
                    "text": "导入语句"
                  },
                  {
                    "id": "a1520547978481",
                    "text": "赋值语句"
                  },
                  {
                    "id": "a1520548038079",
                    "text": "方法调用"
                  },
                  {
                    "id": "a1520548029112",
                    "text": "方法调用"
                  }
                ]
              }
            },
            {
              "id": 719579,
              "key": "a4f64ff1-6b9f-4d16-b7de-20be51af73c2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "现在该练习自己记住代码了。这些代码行将和你在上方练习中看到的一样，但是现在你需要尝试在脑中记住它们，而不是直接从屏幕上识别它们。\n\n注意，拼写和大小写必须都正确，才能成为正确答案。这是编程比较复杂的一个方面，即使一个小小的拼写错误也会使程序停止运行。\n\n请努力得出正确答案，而不去查看上方代码（这样可以加强记忆力！）。但是如果你遇到问题了，可以向上滚动并快速浏览以回忆这些代码。\n\n注意，这些练习旨在帮助你学习，并不是检验你。",
              "instructor_notes": ""
            },
            {
              "id": 719580,
              "key": "dd902497-55b2-4772-9df1-29b5ea2606e5",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "dd902497-55b2-4772-9df1-29b5ea2606e5",
                "completed_at": "2019-06-03T03:48:53.027Z",
                "last_viewed_at": "2019-06-03T03:48:53.027Z",
                "unstructured": "{\"answer\":\"import turtle\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "如果你想用 turtle 绘制图形，程序的第一行代码应该是什么？",
                "matchers": [
                  {
                    "expression": "import turtle"
                  }
                ]
              }
            },
            {
              "id": 719581,
              "key": "49c13f00-f570-4d91-b7e2-dc60833ee591",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "49c13f00-f570-4d91-b7e2-dc60833ee591",
                "completed_at": "2019-06-03T03:49:14.416Z",
                "last_viewed_at": "2019-06-03T03:49:14.416Z",
                "unstructured": "{\"answer\":\"amy = turtle.Turtle()\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "要创建叫做 `amy` 的新 turtle，你会使用哪行代码？",
                "matchers": [
                  {
                    "expression": "\\s*amy\\s*=\\s*turtle.Turtle\\(\\)\\s*"
                  }
                ]
              }
            },
            {
              "id": 719582,
              "key": "603f1cf3-67e2-43d1-9445-2e099ce71367",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "603f1cf3-67e2-43d1-9445-2e099ce71367",
                "completed_at": "2019-06-03T03:49:42.083Z",
                "last_viewed_at": "2019-06-03T03:49:42.083Z",
                "unstructured": "{\"answer\":\"amy.color(\\\"yellow\\\")\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "要将 `amy` 的颜色设为 `yellow`，你会使用哪行代码？",
                "matchers": [
                  {
                    "expression": "\\s*amy\\.color\\(\\s*\"yellow\"\\s*\\)\\s*"
                  }
                ]
              }
            },
            {
              "id": 719583,
              "key": "c8ad47c8-57d5-48b7-99b3-9f701c9c6e24",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c8ad47c8-57d5-48b7-99b3-9f701c9c6e24",
                "completed_at": "2019-06-03T03:50:01.833Z",
                "last_viewed_at": "2019-06-03T03:50:01.833Z",
                "unstructured": "{\"answer\":\"amy.right(90)\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "要使 `amy` 右转 `90` 度，你会使用哪行代码？",
                "matchers": [
                  {
                    "expression": "\\s*amy\\.right\\(\\s*90\\s*\\)\\s*"
                  }
                ]
              }
            },
            {
              "id": 719584,
              "key": "7289cde1-d05b-4c3e-8540-03c106667d41",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7289cde1-d05b-4c3e-8540-03c106667d41",
                "completed_at": "2019-06-03T03:50:17.060Z",
                "last_viewed_at": "2019-06-03T03:50:17.060Z",
                "unstructured": "{\"answer\":\"amy.forward(100)\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "要使 `amy` 向前移动 100 个像素，你会使用哪行代码？",
                "matchers": [
                  {
                    "expression": "\\s*amy\\.forward\\(\\s*100\\s*\\)\\s*"
                  }
                ]
              }
            },
            {
              "id": 719585,
              "key": "bd2c9b40-0915-47ed-9175-9b65db07657a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "现在将所有这些代码行放到一起。在下面的 workspace 中，创建一个叫做 `amy` 的 turtle，然后使 `amy` 画一个方形。\n\n**注意：**你可以通过仅使用在此页面上看到的代码行实现此目的。如果遇到问题了，可以回去查看上方练习，或者查看我们的解决方案（在 workspace 下方）。",
              "instructor_notes": ""
            },
            {
              "id": 719586,
              "key": "02a34d8c-b2cf-4c06-972d-3adc18d4a2af",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "46b8681f-264f-45e3-8d05-f8249ee9d994",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/practice_square.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/practice_square.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801169,
              "key": "e3994686-d57d-4798-bc42-cd9b97fe20c1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719587,
              "key": "7835a3fb-f2dc-41ea-ac0c-c29b9395e69c",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7835a3fb-f2dc-41ea-ac0c-c29b9395e69c",
                "completed_at": "2019-06-03T03:52:35.192Z",
                "last_viewed_at": "2019-06-03T03:52:35.192Z",
                "unstructured": "{\"selected_ids\":[0]}"
              },
              "tasks": [
                "我画了一个方形！"
              ],
              "positive_feedback": "耶，一个方形！",
              "video_feedback": null,
              "description": ""
            },
            {
              "id": 719588,
              "key": "227eac5f-14ec-4289-ae47-5c8ef7e7e294",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719589,
              "key": "10f26994-4895-452f-9937-271f58aa5467",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 解决方案\n\n下面是我们的代码。你的可能有所不同。\n\n```python\nimport turtle\namy = turtle.Turtle()\namy.color(\"yellow\")\namy.forward(100)\namy.right(90)\namy.forward(100)\namy.right(90)\namy.forward(100)\namy.right(90)\namy.forward(100)\n```\n\n注意，这段代码多次使用了相同的代码行。即使对于只有四条边的图形，代码就很重复了。如果要画十边形呢？或者有 100 条边的形状呢？代码肯定会太重复了。似乎工作量很大。\n\n幸运的是，有另一个选择：我们可以使用**循环**。我们将在接下来的几个页面中学习这个概念！",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720015,
          "key": "8dcdab6c-bd1a-4a92-9e7c-260403e2811e",
          "title": "注释",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "8dcdab6c-bd1a-4a92-9e7c-260403e2811e",
            "completed_at": "2019-06-03T03:52:47.865Z",
            "last_viewed_at": "2019-06-03T07:46:36.887Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719590,
              "key": "acb8a91e-3f7d-47bb-ab85-1bac89248c22",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 💬 注释\n\n下面是我们刚刚查看的方形绘制代码，但是添加了其他内容：\n\n```python\n\n# 导入 turtle 模块。\nimport turtle\n\n# 创建叫做 amy 的新 turtle。\namy = turtle.Turtle()\n\n# 设置 amy 的颜色。\namy.color(\"yellow\")\n\n# 使 amy 画一个方形\namy.forward(100)\namy.right(90)\namy.forward(100)\namy.right(90)\namy.forward(100)\namy.right(90)\namy.forward(100)\n```",
              "instructor_notes": ""
            },
            {
              "id": 719591,
              "key": "00b86d1b-cc27-492e-88c4-7d0dd506c725",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "注意，这段代码包含几行以 `#` 符号开头的内容。这些行是注释— 它们只是供人类读者查看。不会影响到代码的运行方式。\n\n> **术语：**在代码中，**注释**是针对人类读者的消息。计算机在读取代码时，会忽略注释。在 Python 中，注释行以 `#` 开头。\n\n注释能够使程序更容易理解。我们在上述示例代码中添加的大部分注释都相对很明显，通过阅读代码就能看明白（至少对有经验的程序员来说是这样）。但是在很多情况下，一行代码的作用并不明显，在这些情况下，注释就很有帮助。",
              "instructor_notes": ""
            },
            {
              "id": 719592,
              "key": "503c9408-2fac-49a9-bcee-e9d0560fce78",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 注释代码\n\n使用注释还可以轻松地实验代码。如果你想暂时“关闭”某些代码，使其不会运行，但是并不想真的删除代码，你可以在代码行前面添加一个 `#`。这样将使这行代码变成注释，以便 Python 运行程序时忽略该代码。\n\n在下面的 workspace 中，你将找到绘制方形的熟悉代码。但是我们添加了你尚未见过的几个新的 turtle 方法。每个方法都被注释掉了，请尝试删除这些注释（一次删除一个），看看每行代码的作用。\n\n（注意，这只是暂时实验代码的方式，程序编写完毕后，肯定不能在程序中留下大量注释掉的代码。）",
              "instructor_notes": ""
            },
            {
              "id": 719593,
              "key": "f92b96ed-2264-4e56-a3a0-41e88a0a764d",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewSJeksOzK7Q",
              "pool_id": "webterminal",
              "view_id": "html-live-HJJs_fK7m",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/comments.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/comments.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801170,
              "key": "574615fa-d985-4dfc-802d-90fa4b7cfeaa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719594,
              "key": "0e4d300c-cc5a-4892-9edc-c050c9b113ea",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0e4d300c-cc5a-4892-9edc-c050c9b113ea",
                "completed_at": "2019-06-03T03:54:39.860Z",
                "last_viewed_at": "2019-06-03T03:55:11.738Z",
                "unstructured": "{\"answer_ids\":[\"a1531681894930\",\"a1531681951510\",\"a1531682080116\",\"a1531682112676\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "请尝试将每个方法调用与其作用相匹配。\n\n（至少有一对可能有点让人吃惊！）"
                },
                "concepts_label": "作用",
                "answers_label": "方法调用",
                "concepts": [
                  {
                    "text": "绘制很粗的线条。",
                    "correct_answer": {
                      "id": "a1531681894930",
                      "text": "`amy.width(10)`"
                    }
                  },
                  {
                    "text": "将 turtle 的速度设置为最大速度。",
                    "correct_answer": {
                      "id": "a1531681951510",
                      "text": "`amy.speed(0)`"
                    }
                  },
                  {
                    "text": "取消激活笔，使 turtle 在移动时停止绘制。",
                    "correct_answer": {
                      "id": "a1531682080116",
                      "text": "`amy.penup()`"
                    }
                  },
                  {
                    "text": "激活笔，使 turtle 在移动时开始绘制。",
                    "correct_answer": {
                      "id": "a1531682112676",
                      "text": "`amy.pendown()`"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1531681894930",
                    "text": "`amy.width(10)`"
                  },
                  {
                    "id": "a1531682112676",
                    "text": "`amy.pendown()`"
                  },
                  {
                    "id": "a1531681951510",
                    "text": "`amy.speed(0)`"
                  },
                  {
                    "id": "a1531682074110",
                    "text": "`amy.speed(10)`"
                  },
                  {
                    "id": "a1531682080116",
                    "text": "`amy.penup()`"
                  },
                  {
                    "id": "a1531682355679",
                    "text": "`amy.width(2)`"
                  }
                ]
              }
            },
            {
              "id": 719595,
              "key": "39e61863-0122-42ff-ac6e-fb98b1751449",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 注释快捷键\n\n在大多数代码编辑器中，你都可以使用很方便的键盘快捷键注释掉/取消注释一行代码。在 Mac 系统上，快捷键是 **⌘/**。在 Windows 系统上，快捷键是 **Ctrl + /**。如果你将光标放在一行代码上，并按下此快捷键，编辑器将在代码行开头插入 `#`。\n\n这个快捷键最有用的功能是你可以同时对多行代码进行操作，只需选中要注释掉（或取消注释）的代码行，然后按下快捷键即可。\n\n在继续之前，请在上方 workspace 里尝试一下！\n\n**注意：**正如我们提到的，大多数代码编辑器都具有此功能，但是并非所有代码编辑器都这样。如果上述快捷键在你的编辑器中不可行，你可能需要使用你喜欢的搜索引擎查询下该编辑器的快捷键是什么。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720016,
          "key": "fb9c9cee-c69d-4ee0-90de-c2d445b175e9",
          "title": "练习 — 顺序很重要",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "fb9c9cee-c69d-4ee0-90de-c2d445b175e9",
            "completed_at": "2019-06-03T03:55:42.295Z",
            "last_viewed_at": "2019-06-03T07:46:40.384Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719596,
              "key": "a7d686e1-bc7f-410c-bb8e-04438b06eb0f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 顺序很重要\n\n注意，默认情况下，Python 将从上到下按顺序运行每行代码。意味着程序中的代码行顺序可以使程序变化很大。",
              "instructor_notes": ""
            },
            {
              "id": 719597,
              "key": "dba89f66-8e8f-43e0-9d0c-881eb0d0aa1c",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "dba89f66-8e8f-43e0-9d0c-881eb0d0aa1c",
                "completed_at": "2019-06-03T04:03:56.499Z",
                "last_viewed_at": "2019-06-03T04:03:56.499Z",
                "unstructured": "{\"answer_ids\":[\"a1522966716269\",\"a1522966811949\",\"a1522966816979\",\"a1522966888724\",\"a1522966822797\",\"a1522966821043\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "下面的代码可以用来绘制蓝色线条，然后绘制黄色线条，如下所示：\n\n<img src=\"https://s3.amazonaws.com/video.udacity-data.com/topher/2018/July/5b4a5e4a_blue-yellow-line/blue-yellow-line.png\" alt=\"Blue and yellow line.\">\n\n你能将代码变成正确的顺序吗？"
                },
                "concepts_label": "顺序",
                "answers_label": "代码",
                "concepts": [
                  {
                    "text": "1",
                    "correct_answer": {
                      "id": "a1522966716269",
                      "text": "`import turtle`"
                    }
                  },
                  {
                    "text": "2",
                    "correct_answer": {
                      "id": "a1522966811949",
                      "text": "`amy = turtle.Turtle()`"
                    }
                  },
                  {
                    "text": "3",
                    "correct_answer": {
                      "id": "a1522966816979",
                      "text": "`amy.color(\"blue\")`"
                    }
                  },
                  {
                    "text": "4",
                    "correct_answer": {
                      "id": "a1522966821043",
                      "text": "`amy.forward(100)`"
                    }
                  },
                  {
                    "text": "5",
                    "correct_answer": {
                      "id": "a1522966822797",
                      "text": "`amy.color(\"yellow\")`"
                    }
                  },
                  {
                    "text": "6",
                    "correct_answer": {
                      "id": "a1522966888724",
                      "text": "`amy.forward(100)`"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1522966716269",
                    "text": "`import turtle`"
                  },
                  {
                    "id": "a1522966888724",
                    "text": "`amy.forward(100)`"
                  },
                  {
                    "id": "a1522966816979",
                    "text": "`amy.color(\"blue\")`"
                  },
                  {
                    "id": "a1522966821043",
                    "text": "`amy.forward(100)`"
                  },
                  {
                    "id": "a1522966811949",
                    "text": "`amy = turtle.Turtle()`"
                  },
                  {
                    "id": "a1522966822797",
                    "text": "`amy.color(\"yellow\")`"
                  }
                ]
              }
            },
            {
              "id": 719598,
              "key": "b7c882d7-adde-40c6-8b42-3af234bc8ac0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "再做道练习吧！在下面的 workspace 中，看看你能否画出如下所示的方形，其中每条边的颜色都不一样：",
              "instructor_notes": ""
            },
            {
              "id": 719599,
              "key": "487759d2-45c5-4af7-8afb-113ca21b43e1",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://s3.amazonaws.com/video.udacity-data.com/topher/2018/July/5b4a60d1_rainbow-box/rainbow-box.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/487759d2-45c5-4af7-8afb-113ca21b43e1",
              "caption": "",
              "alt": "一个有红色、橘色、黄色和绿色边的方形。",
              "width": 158,
              "height": 153,
              "instructor_notes": null
            },
            {
              "id": 719600,
              "key": "d536e11f-5217-4984-8cfa-1638b53b66b4",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewrkxBOTTP7X",
              "pool_id": "webterminal",
              "view_id": "html-live-ryB_TTDQX",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/order_matters.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/order_matters.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801171,
              "key": "4e44ea5f-829f-45b5-b032-e0e008fa3d62",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719601,
              "key": "defdce1d-b205-4c5a-836f-8345fcf3b17d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719602,
              "key": "4a10dc39-1d9d-48fe-962e-8795996de3bb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 解决方案\n\n```python\nimport turtle\namy = turtle.Turtle()\n\namy.color(\"red\")\namy.forward(100)\namy.right(90)\namy.color(\"orange\")\namy.forward(100)\namy.right(90)\namy.color(\"yellow\")\namy.forward(100)\namy.right(90)\namy.color(\"green\")\namy.forward(100)\n```\n\n同样，注意这段代码非常重复！稍后我们将讲解如何改进它。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720017,
          "key": "932cfef9-7a00-47d2-8dee-b661e29125fd",
          "title": "使用变量",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "932cfef9-7a00-47d2-8dee-b661e29125fd",
            "completed_at": "2019-06-03T07:27:52.171Z",
            "last_viewed_at": "2019-06-03T07:46:50.129Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719603,
              "key": "699ef8fc-bd0e-4d64-885a-8a0bf94442a7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": " ",
              "instructor_notes": ""
            },
            {
              "id": 719604,
              "key": "60588acb-f5c0-4a31-9ce2-45acbc71e476",
              "title": "Python：使用变量",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "i7nff81Gr8U",
                "china_cdn_id": "i7nff81Gr8U.mp4"
              }
            },
            {
              "id": 851708,
              "key": "19671610-6cf7-4019-912b-0df9ecc935c3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "如果你看到 `for side in [1, 2, 3, 4]:` 的用法感到好奇，别担心，你可以暂时忽略。它是一种 Python 的循环用法，我们马上就会讲到！",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720018,
          "key": "9848ec7e-ab0d-4e29-ab6b-ec0b29f3664a",
          "title": "练习 — 使用变量 (1/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9848ec7e-ab0d-4e29-ab6b-ec0b29f3664a",
            "completed_at": "2019-06-03T07:29:21.603Z",
            "last_viewed_at": "2019-06-03T07:46:52.177Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719605,
              "key": "fdd51fa7-6342-4b25-8068-938ae976eecc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 练习 — 使用变量 (1/2)",
              "instructor_notes": ""
            },
            {
              "id": 719606,
              "key": "2aa58403-b268-4f97-bce5-391e34bc5821",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "能够将值赋值给变量\n\n```python\nfavorite_color = \"cyan\"\n```\n\n然后使用此变量在代码的其他位置执行操作\n\n```python\nmary.color(favorite_color)\n```\n\n是程序员应该具备的重要技能！我们练习下语法吧。",
              "instructor_notes": ""
            },
            {
              "id": 719607,
              "key": "6e8f1d75-484c-4094-9420-194e5e3b0f4b",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6e8f1d75-484c-4094-9420-194e5e3b0f4b",
                "completed_at": "2019-06-03T07:29:47.804Z",
                "last_viewed_at": "2019-06-03T07:29:47.804Z",
                "unstructured": "{\"answer_ids\":[\"a1525463332077\",\"a1525463229571\",\"a1525463471466\",\"a1525463335457\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "以下哪些语句是有效的赋值语句？"
                },
                "concepts_label": "赋值语句",
                "answers_label": "有效或无效？",
                "concepts": [
                  {
                    "text": "pretty_color = \"red\"",
                    "correct_answer": {
                      "id": "a1525463229571",
                      "text": "有效"
                    }
                  },
                  {
                    "text": "color = \"blue\"",
                    "correct_answer": {
                      "id": "a1525463332077",
                      "text": "有效"
                    }
                  },
                  {
                    "text": "\"blue\" = color",
                    "correct_answer": {
                      "id": "a1525463335457",
                      "text": "无效"
                    }
                  },
                  {
                    "text": "\"red\" = pretty_color",
                    "correct_answer": {
                      "id": "a1525463471466",
                      "text": "无效"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1525463229571",
                    "text": "有效"
                  },
                  {
                    "id": "a1525463335457",
                    "text": "无效"
                  },
                  {
                    "id": "a1525463471466",
                    "text": "无效"
                  },
                  {
                    "id": "a1525463332077",
                    "text": "有效"
                  }
                ]
              }
            },
            {
              "id": 719608,
              "key": "32607440-31b1-491c-afaa-3bc265114869",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "32607440-31b1-491c-afaa-3bc265114869",
                "completed_at": "2019-06-03T07:30:07.760Z",
                "last_viewed_at": "2019-06-03T07:30:07.760Z",
                "unstructured": "{\"answer\":\"color = \\\"blue\\\"\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "输入一个赋值语句，它会创建一个叫做 `color` 的变量并将值 `\"blue\"` 赋值给该变量。",
                "matchers": [
                  {
                    "expression": "color *= *\"blue\""
                  }
                ]
              }
            },
            {
              "id": 719609,
              "key": "325eed08-4ac2-4099-9636-8354814a6d4a",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "325eed08-4ac2-4099-9636-8354814a6d4a",
                "completed_at": "2019-06-03T07:30:41.982Z",
                "last_viewed_at": "2019-06-03T07:30:41.982Z",
                "unstructured": "{\"answer_ids\":[\"a1525394245323\",\"a1525394792112\",\"a1525395017635\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "假设有一个叫做 `mary` 的 turtle，下面是使该 turtle 画出紫色五边形的代码：\n\n```python\nmary.color(\"purple\")\nfor side in [1, 2, 3, 4, 5]:\n    mary.forward(100)\n    mary.right(72)\n```\n\n哪些代码的效果将和上述代码的一样？"
                },
                "concepts_label": "代码",
                "answers_label": "相同或不同结果？",
                "concepts": [
                  {
                    "text": "```python\nlovely_color = \"purple\"\nmary.color(lovely_color)\nfor side in [1, 2, 3, 4, 5]:\n    mary.forward(100)\n    mary.right(72)\n```",
                    "correct_answer": {
                      "id": "a1525394245323",
                      "text": "相同"
                    }
                  },
                  {
                    "text": "```python\nlovely_color = \"purple\"\nmary.color(\"lovely_color\")\nfor side in [1, 2, 3, 4, 5]:\n    mary.forward(100)\n    mary.right(72)\n```",
                    "correct_answer": {
                      "id": "a1525394792112",
                      "text": "不同"
                    }
                  },
                  {
                    "text": "```python\nblah = \"purple\"\nmary.color(blah)\nfor side in [1, 2, 3, 4, 5]:\n    mary.forward(100)\n    mary.right(72)\n```",
                    "correct_answer": {
                      "id": "a1525395017635",
                      "text": "相同"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1525394792112",
                    "text": "不同"
                  },
                  {
                    "id": "a1525395017635",
                    "text": "相同"
                  },
                  {
                    "id": "a1525394245323",
                    "text": "相同"
                  }
                ]
              }
            },
            {
              "id": 719610,
              "key": "d7668c28-14a3-4073-932b-4ef2487dabbb",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d7668c28-14a3-4073-932b-4ef2487dabbb",
                "completed_at": "2019-06-03T07:30:53.771Z",
                "last_viewed_at": "2019-06-03T07:30:53.771Z",
                "unstructured": "{\"selected_id\":\"a1525396325517\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "在上述练习中，有个选项使用了叫做 `blah` 的变量。你觉得将该变量命名为 `blah` 合适吗？",
                "answers": [
                  {
                    "id": "a1525396242894",
                    "text": "名称很糟糕，因为它使代码崩溃了（程序将抛出错误）。",
                    "is_correct": false
                  },
                  {
                    "id": "a1525396325517",
                    "text": "代码能正常运行，但是 `blah` 是糟糕的名称是因为它使人类更难理解程序。",
                    "is_correct": true
                  },
                  {
                    "id": "a1525396409037",
                    "text": "是很好的名称，根本没有问题。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719611,
              "key": "682cc31e-f92a-42f6-a11d-f7bb4e2d0380",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "682cc31e-f92a-42f6-a11d-f7bb4e2d0380",
                "completed_at": "2019-06-03T07:31:01.384Z",
                "last_viewed_at": "2019-06-03T07:48:22.227Z",
                "unstructured": "{\"selected_ids\":[0,1,2]}"
              },
              "tasks": [
                "创建一个新的变量（任何名称都行），并将字符串 `\"purple\"` 赋值给该变量。",
                "将 `mary.color(\"purple\")` 中的字符串替换为新的变量。",
                "运行代码，确保依然可行！"
              ],
              "positive_feedback": "很棒！",
              "video_feedback": null,
              "description": "下面是绘制紫色五边形的 workspace。请练习"
            },
            {
              "id": 719612,
              "key": "3767271d-83c0-4f78-814a-86f4dcc51314",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "_（如果遇到问题，请在下方查看解决方案。）_",
              "instructor_notes": ""
            },
            {
              "id": 719613,
              "key": "5c7184bb-802b-4a2d-8ef2-e029b4454bf9",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "9acbcfe8-e191-48f1-86c2-2269c8e2f35a",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/purple_pentagon.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/purple_pentagon.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801172,
              "key": "2c5c54e9-dbbe-4234-8076-a57c32485c68",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719614,
              "key": "aefae6b6-e452-4f2b-a1ad-c0c1501f1211",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719615,
              "key": "7b71504d-0607-4497-8a47-9f2e5883ba6b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 解决方案\n\n```python\nimport turtle\nmary = turtle.Turtle()\nlovely_color = \"purple\"\nmary.color(lovely_color)\nfor side in [1, 2, 3, 4, 5]:\n    mary.forward(100)\n    mary.right(72)\n```\n\n注意，我们选择将变量命名为 `lovely_color`，但是你可以称之为 `pretty_color` 或直接称为 `color`，效果是一样的。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720019,
          "key": "15125170-97b5-4a10-a7b7-c5d23d657d9e",
          "title": "练习 — 使用变量 (2/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "15125170-97b5-4a10-a7b7-c5d23d657d9e",
            "completed_at": "2019-06-03T07:32:08.799Z",
            "last_viewed_at": "2019-06-03T07:47:03.165Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719616,
              "key": "ae6d3670-b5cf-475a-a1af-b06093918943",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 练习 — 使用变量 (2/2)",
              "instructor_notes": ""
            },
            {
              "id": 719617,
              "key": "6451c4b4-bf41-4566-b1fd-2ebeba9ba500",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6451c4b4-bf41-4566-b1fd-2ebeba9ba500",
                "completed_at": "2019-06-03T07:32:32.666Z",
                "last_viewed_at": "2019-06-03T07:32:32.666Z",
                "unstructured": "{\"answer_ids\":[\"a1525468108812\",\"a1525468094279\",\"a1525468085874\",\"a1525468075845\",\"a1525468013116\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "你已经知道你可以将字符串赋值给变量。但是，你还可以将各种其他数据赋值给变量，例如列表或整数。\n\n你尚未见过下面的部分语句，但是请猜测下，哪些语句是有效的赋值语句？"
                },
                "concepts_label": "赋值语句",
                "answers_label": "有效或无效？",
                "concepts": [
                  {
                    "text": "[1, 2, 3] = some_list",
                    "correct_answer": {
                      "id": "a1525468013116",
                      "text": "无效"
                    }
                  },
                  {
                    "text": "some_list = [1, 2, 3]",
                    "correct_answer": {
                      "id": "a1525468075845",
                      "text": "有效"
                    }
                  },
                  {
                    "text": "sides = [1, 2, 3, 4, 5]",
                    "correct_answer": {
                      "id": "a1525468085874",
                      "text": "有效"
                    }
                  },
                  {
                    "text": "angle = 45",
                    "correct_answer": {
                      "id": "a1525468094279",
                      "text": "有效"
                    }
                  },
                  {
                    "text": "\"sides\" = \"sides\"",
                    "correct_answer": {
                      "id": "a1525468108812",
                      "text": "无效"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1525468075845",
                    "text": "有效"
                  },
                  {
                    "id": "a1525468108812",
                    "text": "无效"
                  },
                  {
                    "id": "a1525468085874",
                    "text": "有效"
                  },
                  {
                    "id": "a1525468013116",
                    "text": "无效"
                  },
                  {
                    "id": "a1525468094279",
                    "text": "有效"
                  }
                ]
              }
            },
            {
              "id": 719618,
              "key": "37048c00-d7e9-43b0-b834-7d0dfd5dad70",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "37048c00-d7e9-43b0-b834-7d0dfd5dad70",
                "completed_at": "2019-06-03T07:32:50.904Z",
                "last_viewed_at": "2019-06-03T07:32:50.904Z",
                "unstructured": "{\"answer\":\"sides = [1, 2, 3, 4, 5]\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "创建一个叫做 `sides` 的变量，并将列表 `[1, 2, 3, 4, 5]` 赋值给该变量。",
                "matchers": [
                  {
                    "expression": "sides *= *\\[ *1, *2, *3, *4, *5 *\\]"
                  }
                ]
              }
            },
            {
              "id": 719619,
              "key": "cbccf62c-306b-4464-8b0d-dab72d0dd2c2",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "cbccf62c-306b-4464-8b0d-dab72d0dd2c2",
                "completed_at": "2019-06-03T07:33:02.757Z",
                "last_viewed_at": "2019-06-03T07:33:02.757Z",
                "unstructured": "{\"answer\":\"angle = 72\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "创建一个叫做 `angle` 的变量，并将整数 `72` 赋值给该变量。",
                "matchers": [
                  {
                    "expression": "angle *= *72 *"
                  }
                ]
              }
            },
            {
              "id": 719620,
              "key": "5d3dd48b-6ffb-48a3-a2fc-e1e6bb484455",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5d3dd48b-6ffb-48a3-a2fc-e1e6bb484455",
                "completed_at": "2019-06-03T07:33:59.108Z",
                "last_viewed_at": "2019-06-03T07:33:59.108Z",
                "unstructured": "{\"answer_ids\":[\"a1525468228467\",\"a1525468272387\",\"a1525468284976\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "下面又是我们的紫色五边形代码：\n\n```python\nmary.color(\"purple\")\nfor side in [1, 2, 3, 4, 5]:\n    mary.forward(100)\n    mary.right(72)\n```\n\n下面哪些代码的效果将和上方代码一样？"
                },
                "concepts_label": "Code",
                "answers_label": "相同或不同结果",
                "concepts": [
                  {
                    "text": "```python\ncolor = \"purple\"\nsides = [1, 2, 3, 4, 5]\nangle = 72\ndistance = 100\nmary.color(color)\nfor side in sides:\n    mary.forward(distance)\n    mary.right(angle)\n```",
                    "correct_answer": {
                      "id": "a1525468228467",
                      "text": "相同"
                    }
                  },
                  {
                    "text": "```python\ncolor = \"purple\"\nsides = [1, 2, 3, 4, 5]\ndistance = 72\nangle = 100\nmary.color(color)\nfor side in sides:\n    mary.forward(distance)\n    mary.right(angle)\n```",
                    "correct_answer": {
                      "id": "a1525468272387",
                      "text": "不同"
                    }
                  },
                  {
                    "text": "```python\nsilly = \"purple\"\nbad = [1, 2, 3, 4, 5]\nconfusing = 72\nbut_still_works = 100\nmary.color(silly)\nfor side in bad:\n    mary.forward(but_still_works)\n    mary.right(confusing)\n```",
                    "correct_answer": {
                      "id": "a1525468284976",
                      "text": "相同"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1525468284976",
                    "text": "相同"
                  },
                  {
                    "id": "a1525468228467",
                    "text": "相同"
                  },
                  {
                    "id": "a1525468272387",
                    "text": "不同"
                  }
                ]
              }
            },
            {
              "id": 719621,
              "key": "8a8651b0-6eb7-42e6-b6cb-b41a0247afbf",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8a8651b0-6eb7-42e6-b6cb-b41a0247afbf",
                "completed_at": "2019-06-03T07:48:31.494Z",
                "last_viewed_at": "2019-06-03T07:48:32.753Z",
                "unstructured": "{\"selected_ids\":[0,1,2]}"
              },
              "tasks": [
                "将 `100` 赋值给一个变量，然后使用该变量告诉 turtle 向前移动多远。",
                "将 `72` 赋值给一个变量，然后使用该变量告诉 turtle 转到多少角度。",
                "将 `[1, 2, 3, 4, 5]` 赋值给一个变量，然后使用该变量告诉 turtle 画多少条边。"
              ],
              "positive_feedback": "很棒！",
              "video_feedback": null,
              "description": "现在该你了！在下面的 workspace 中，你将找到上个页面的代码（用于绘制紫色五边形）。请不要直接使用 `100`、`72` 和 `[1, 2, 3, 4, 5]`，而是更改代码，将这些值赋值给变量，然后使用这些变量告诉 turtle 如何绘制图形。\n\n如果遇到问题了，可以在 workspace 下方找到我们的解决方案。"
            },
            {
              "id": 719622,
              "key": "a80ed61b-e629-4c52-a8a9-f88340130c2d",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "88fc2703-c54a-4c8e-92c5-e269eaef1585",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/purple_pentagon.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/purple_pentagon.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801173,
              "key": "999faf0f-11d9-4948-b34a-7a0dc4436fc8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719623,
              "key": "8c95966f-9271-4042-b26d-e4d8b48193b0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719624,
              "key": "c886eec4-b72b-4d06-a757-2ba492d721f6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 解决方案\n\n注意，你可以为变量选择其他名称。\n\n```python\ncolor = \"purple\"\nsides = [1, 2, 3, 4, 5]\nangle = 72\ndistance = 100\nmary.color(color)\nfor side in sides:\n    mary.forward(distance)\n    mary.right(angle)\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720020,
          "key": "0d7d604d-1787-447e-b6ed-01abf8fababf",
          "title": "循环",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0d7d604d-1787-447e-b6ed-01abf8fababf",
            "completed_at": "2019-06-03T07:35:04.446Z",
            "last_viewed_at": "2019-06-03T07:47:18.576Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719625,
              "key": "2aed600c-0486-4726-8af6-32b1bf9985a3",
              "title": "Python：用 for 循环进行循环",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "8XmmUg1qdJE",
                "china_cdn_id": "8XmmUg1qdJE.mp4"
              }
            },
            {
              "id": 719626,
              "key": "ab5a2afe-6e6d-4a5b-9c16-914aa3ab8c22",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "下面是另一个用循环绘制五边形的 workspace。你可以使用此 workspace 回答下面的练习，该练习将帮助你进一步了解循环的原理！",
              "instructor_notes": ""
            },
            {
              "id": 719627,
              "key": "1c9240b2-8de5-4b7c-9ea0-f00ba689b1e8",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "103dd023-a7a2-46ae-8b2d-8a6b87d5bc04",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/penta.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/penta.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801174,
              "key": "2f7e8ea3-dedb-4ce4-8721-6b509f666055",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719628,
              "key": "43ec0580-e128-4ced-8ade-38c53148e467",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "43ec0580-e128-4ced-8ade-38c53148e467",
                "completed_at": "2019-06-03T07:37:09.514Z",
                "last_viewed_at": "2019-06-03T07:37:09.514Z",
                "unstructured": "{\"selected_id\":\"a1525477034027\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "如果将 `[1, 2, 3, 4, 5]` 替换为 `[1, 0, 1, 0, 1]`，会发生什么？\n\n思考下这个问题，然后在代码里尝试一下！",
                "answers": [
                  {
                    "id": "a1525476990030",
                    "text": "出现错误。",
                    "is_correct": false
                  },
                  {
                    "id": "a1525477034027",
                    "text": "turtle 画出和之前完全一样的五边形。",
                    "is_correct": true
                  },
                  {
                    "id": "a1525477044301",
                    "text": "turtle 画出一个三角形，针对列表中的每个 `1` 画出一条边。",
                    "is_correct": false
                  },
                  {
                    "id": "a1525477048635",
                    "text": "turtle 在一条线上来回移动。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719631,
              "key": "6e3290dd-4748-4933-b771-2c979d4945a1",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6e3290dd-4748-4933-b771-2c979d4945a1",
                "completed_at": "2019-06-03T07:37:15.726Z",
                "last_viewed_at": "2019-06-03T07:37:15.726Z",
                "unstructured": "{\"selected_id\":\"a1525477134499\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "如果将 `[1, 0, 1, 0, 1]` 替换为 `[\"red\", \"orange\", \"yellow\", \"green\", \"blue\"]`，会发生什么？\n\n思考下这个问题，然后在代码中尝试一下！",
                "answers": [
                  {
                    "id": "a1525477121326",
                    "text": "出现错误。",
                    "is_correct": false
                  },
                  {
                    "id": "a1525477134499",
                    "text": "turtle 画出和之前完全一样的五边形。",
                    "is_correct": true
                  },
                  {
                    "id": "a1525477144427",
                    "text": "turtle 在一条线上来回移动。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719632,
              "key": "69beda2e-2f1a-4218-b593-1093e4cc1fce",
              "title": "缩进很重要！",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "69beda2e-2f1a-4218-b593-1093e4cc1fce",
                "completed_at": "2019-06-03T07:37:39.799Z",
                "last_viewed_at": "2019-06-03T07:37:39.799Z",
                "unstructured": "{\"selected_id\":\"a1525475524279\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "注意，在这个循环里的所有行（第一行之后）都缩进了（向右移动了四个空格）。 \n\n```python\nfor side in [1, 2, 3, 4, 5]:\n    amy.forward(100)\n    amy.right(72)\n```\n\n如果我们删掉最后一行的缩进，会怎样？如下所示：\n\n```python\nfor side in [1, 2, 3, 4, 5]:\n    amy.forward(100)\namy.right(72)\n```",
                "answers": [
                  {
                    "id": "a1525475524279",
                    "text": "turtle 画出一条笔直的长线条（并离开屏幕）。",
                    "is_correct": true
                  },
                  {
                    "id": "a1525475548844",
                    "text": "turtle 在原地打转，没有移到任何地方。",
                    "is_correct": false
                  },
                  {
                    "id": "a1525475553957",
                    "text": "什么也没变化，turtle 依然画出一个五边形。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719629,
              "key": "7c899c84-19fa-46ca-a71b-3a324904d47a",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7c899c84-19fa-46ca-a71b-3a324904d47a",
                "completed_at": "2019-06-03T07:37:52.915Z",
                "last_viewed_at": "2019-06-03T07:37:52.915Z",
                "unstructured": "{\"selected_id\":\"a1525476063146\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "如果调换这两行，使 `amy.right(72)` 位于循环内，并使 `amy.forward(100)` 位于循环外，会发生什么？\n\n```python\nfor side in [1, 2, 3, 4, 5]:\n    amy.right(72)\namy.forward(100)\n```",
                "answers": [
                  {
                    "id": "a1525476052991",
                    "text": "turtle 画出一条笔直的长线条（并离开屏幕）。",
                    "is_correct": false
                  },
                  {
                    "id": "a1525476063146",
                    "text": "turtle 首先转动五次，然后向前移动一次。",
                    "is_correct": true
                  },
                  {
                    "id": "a1525476063642",
                    "text": "什么也没变化，turtle 依然画出一个五边形。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719633,
              "key": "00001631-4faa-4233-9078-3575dcd29185",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "00001631-4faa-4233-9078-3575dcd29185",
                "completed_at": "2019-06-03T07:38:03.020Z",
                "last_viewed_at": "2019-06-03T07:38:03.020Z",
                "unstructured": "{\"selected_id\":\"a1525478792745\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "现在我们再看看循环的第一行：\n\n```python\nfor side in [1, 2, 3, 4, 5]:\n```\n\n`side` 是什么？在这里，我们必须使用单词 `side` 吗？可以将其替换为不同的单词吗？例如：\n\n\n```python\nfor blah in [1, 2, 3, 4, 5]:\n```\n\n尝试一下！发生了什么？",
                "answers": [
                  {
                    "id": "a1525478651298",
                    "text": "出现错误。",
                    "is_correct": false
                  },
                  {
                    "id": "a1525478792745",
                    "text": "turtle 画出和之前完全一样的五边形。",
                    "is_correct": true
                  },
                  {
                    "id": "a1525478799072",
                    "text": "turtle 在一条线上来回移动。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719630,
              "key": "acb5cef6-2de5-48cf-b779-bfe6efca2052",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "因此，更改列表中的项目似乎没区别。将 `side` 更改为其他单词也似乎没有区别！对于此示例，是这样。这些更改不会改变**这个**特定循环的运行方式或改变 turtle 绘制的图形。但是稍后，我们将看到这些更改的确很重要的循环。暂时先记住这些结果。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720021,
          "key": "e0353158-8f22-488f-a00e-23d470d40118",
          "title": "练习 — 基本循环",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e0353158-8f22-488f-a00e-23d470d40118",
            "completed_at": "2019-06-03T07:38:12.070Z",
            "last_viewed_at": "2019-06-03T07:47:39.954Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719634,
              "key": "7718da29-38f7-4bb7-a10c-80613c410b57",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 练习 - 基本 `for` 循环",
              "instructor_notes": ""
            },
            {
              "id": 719635,
              "key": "963754c9-5027-459a-8434-9a347db94efb",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "963754c9-5027-459a-8434-9a347db94efb",
                "completed_at": "2019-06-03T07:42:45.656Z",
                "last_viewed_at": "2019-06-03T07:42:58.413Z",
                "unstructured": "{\"selected_ids\":[\"a1521858723131\",\"a1521858803690\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "下面是我们之前见过的某个 `for` 循环：\n\n```\nfor side in [1, 2, 3, 4]:\n    george.forward(100)\n    george.right(90)\n```\n对于该循环，下面的哪些表述正确？",
                "answers": [
                  {
                    "id": "a1521858723131",
                    "text": "列表项数量决定了循环的运行次数。",
                    "is_correct": true
                  },
                  {
                    "id": "a1521858803690",
                    "text": "我们通过缩进表示一行代码位于循环内。",
                    "is_correct": true
                  },
                  {
                    "id": "a1521858880010",
                    "text": "列表项必须是数字，否则循环不可行。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719636,
              "key": "a66765a6-f051-4e2a-90ea-794f7832a2ee",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a66765a6-f051-4e2a-90ea-794f7832a2ee",
                "completed_at": "2019-06-03T07:43:40.667Z",
                "last_viewed_at": "2019-06-03T07:43:53.135Z",
                "unstructured": "{\"answer_ids\":[\"a1521859092782\",\"a1521859218119\",\"a1521859616836\",\"a1521859566468\",\"a1521859649661\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "某些循环可行，某些不可行。你能判断哪些可行，哪些不可行吗？"
                },
                "concepts_label": "循环",
                "answers_label": "可行或不可行？",
                "concepts": [
                  {
                    "text": "```\nfor side in [1, 2, 3, 4]:\n    george.forward(100)\n    george.right(90)\n```",
                    "correct_answer": {
                      "id": "a1521859092782",
                      "text": "可行"
                    }
                  },
                  {
                    "text": "```\nfor side in [1, 2, 3, 4]\n    george.forward(100)\n    george.right(90)\n```",
                    "correct_answer": {
                      "id": "a1521859218119",
                      "text": "不可行"
                    }
                  },
                  {
                    "text": "```\nfor side in [0, 7, \"fish\", \"llama\"]:\n    george.forward(100)\n    george.right(90)\n```",
                    "correct_answer": {
                      "id": "a1521859566468",
                      "text": "可行"
                    }
                  },
                  {
                    "text": "```\nfor side in (1, 2, 3, 4):\n    george.forward(100)\n    george.right(90)\n```",
                    "correct_answer": {
                      "id": "a1521859616836",
                      "text": "可行"
                    }
                  },
                  {
                    "text": "```\nfor side in [1, 2, 3, 4]:\n  george.forward(100)\n    george.right(90)\n```",
                    "correct_answer": {
                      "id": "a1521859649661",
                      "text": "不可行"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1521859649661",
                    "text": "不可行"
                  },
                  {
                    "id": "a1521859218119",
                    "text": "不可行"
                  },
                  {
                    "id": "a1521859092782",
                    "text": "可行"
                  },
                  {
                    "id": "a1521859616836",
                    "text": "可行"
                  },
                  {
                    "id": "a1521859566468",
                    "text": "可行"
                  }
                ]
              }
            },
            {
              "id": 719637,
              "key": "680b3836-d8ec-4e87-a5ce-d71043915911",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "680b3836-d8ec-4e87-a5ce-d71043915911",
                "completed_at": "2019-06-03T07:44:00.849Z",
                "last_viewed_at": "2019-06-03T07:44:00.849Z",
                "unstructured": "{\"selected_id\":\"a1521858288572\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "```python\nfor side in [100]:\n    george.forward(100)\n    george.right(90)\n```\n\n这个循环将运行多少次？",
                "answers": [
                  {
                    "id": "a1521858288572",
                    "text": "1 次",
                    "is_correct": true
                  },
                  {
                    "id": "a1521858607038",
                    "text": "2 次",
                    "is_correct": false
                  },
                  {
                    "id": "a1521858608350",
                    "text": "100 次",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719638,
              "key": "4107beca-c2fe-4f4d-ad0f-108f1baab843",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4107beca-c2fe-4f4d-ad0f-108f1baab843",
                "completed_at": "2019-06-03T07:44:12.190Z",
                "last_viewed_at": "2019-06-03T07:49:00.401Z",
                "unstructured": "{\"selected_ids\":[0,1,2]}"
              },
              "tasks": [
                "原封不动地运行代码。",
                "更改代码，使其使用 `for` 循环绘制三角形。",
                "再次运行代码，确保它依然会绘制三角形。"
              ],
              "positive_feedback": "**太棒了！**",
              "video_feedback": null,
              "description": "下面是一个绘制三角形的 workspace。可以看出，最后一部分有很多重复代码。首先，原封不动地运行代码。然后看看能否使用 `for` 循环绘制相同的三角形。"
            },
            {
              "id": 719639,
              "key": "ce720bc2-d029-476c-bc9c-8d5221a2f5f5",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "766075f3-ef96-4aa1-8f71-8cd6b6d7d751",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/triangle.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/triangle.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801175,
              "key": "679127e0-14d7-47f2-8858-12c426c71817",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719640,
              "key": "f6d1233e-0bb7-470b-9ac1-5e3159873a75",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719641,
              "key": "973da657-a8b7-4aa3-8309-a4fb8d9378b6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 解决方案\n\n```python\nimport turtle\njuno = turtle.Turtle()\njuno.color(\"white\")\n\nfor side in [1, 2, 3]:\n    juno.forward(100)\n    juno.left(120)\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720022,
          "key": "b3fb73ba-1447-4c4d-b975-d7cc0504bebc",
          "title": "练习 — 将列表赋值给变量",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b3fb73ba-1447-4c4d-b975-d7cc0504bebc",
            "completed_at": "2019-06-03T07:49:03.643Z",
            "last_viewed_at": "2019-06-03T07:47:51.237Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719642,
              "key": "c9136d29-f911-4da1-a051-5d9fd858111c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 练习 — 将列表赋值给变量\n\n在这节课的下一部分，我们将学习一些更复杂的 `for` 循环。这些循环可能有点复杂，确保在继续之前，先巩固下一些核心概念。\n\n首先，你已经知道我们可以接受列表并将其赋值给变量，如下所示：\n\n`some_list = [1, 2, 3, 4]`\n\n如果我们想在某个地方使用该列表，我们可以直接输入名称 `some_list`，代码就像我们在该位置放入该列表一样运行。\n\n例如，在下面的 workspace 中，你将看到有一个边很多的图形。要绘制该图形，我们将使用一个有很多项目的列表。目前，代码直接在循环里使用列表。我们将其更改为首先将该列表赋值给一个变量。",
              "instructor_notes": ""
            },
            {
              "id": 719643,
              "key": "60bdd376-46a5-47ba-8446-26a62d8e1d82",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "60bdd376-46a5-47ba-8446-26a62d8e1d82",
                "completed_at": "2019-06-03T07:49:22.815Z",
                "last_viewed_at": "2019-06-03T07:49:57.121Z",
                "unstructured": "{\"selected_ids\":[0,1,2,3]}"
              },
              "tasks": [
                "**运行**代码，看看效果如何。",
                "添加一个赋值语句，将列表赋值给叫做 `some_list` 的变量。",
                "在使用列表的地方，改为输入名称 `some_list`。",
                "再次**运行**代码，确保依然可行。"
              ],
              "positive_feedback": "很棒！",
              "video_feedback": null,
              "description": ""
            },
            {
              "id": 719644,
              "key": "b168e4eb-e3d1-4211-94af-302427e1c712",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewS1lIqk8O7X",
              "pool_id": "webterminal",
              "view_id": "html-live-r1Uc1IOXm",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/lists_and_variables.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace//workspace-turtle-support/student_files/lesson_one/lists_and_variables.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801176,
              "key": "13a204ca-039b-403a-b274-ed80524c0183",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719645,
              "key": "7b7e20dc-fa87-4298-9b0c-f52ed73f7648",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719646,
              "key": "c3ad5c2f-3d56-42d0-8d82-bbc37983c33d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 解决方案\n\n```python\nimport turtle\namy = turtle.Turtle()\namy.color(\"cyan\")\n\nsome_list = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\nfor item in some_list:\n    amy.forward(50)\n    amy.right(30)\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720023,
          "key": "402392ea-aa5e-4549-9243-95350d5b9ce8",
          "title": "列表和循环",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "402392ea-aa5e-4549-9243-95350d5b9ce8",
            "completed_at": "2019-06-03T07:50:07.711Z",
            "last_viewed_at": "2019-06-03T07:49:05.658Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719647,
              "key": "0dc3ba15-2057-4de0-ae9b-acc4deb9454a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 🔣 列表和循环\n\n在 Python 中，**列表**项放入方括号里，并用逗号分隔列表项。你从这节课的第一个示例就看到列表了，当时我们的 turtle 叫做 `george`，并绘制出一个正方形：\n\n```python\nfor side in [1, 2, 3, 4]:\n    george.forward(100)\n    george.right(90)\n```\n此代码中的列表是 `[1, 2, 3, 4]`。列表和 `for` 循环紧密合作。但在上述示例（以及我们到目前为止见过的所有示例）中，我们并没有实际使用列表中的数字，只是考虑到有四个列表项。\n\n（是 _four_ 循环，算押韵吧。）\n\n但是，我们可以在 `for` 循环中的代码里使用列表中的数字。举个例子—",
              "instructor_notes": ""
            },
            {
              "id": 719648,
              "key": "e4151f91-8323-4cd6-8ef6-3ac01612d0ad",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e4151f91-8323-4cd6-8ef6-3ac01612d0ad",
                "completed_at": "2019-06-03T07:59:08.599Z",
                "last_viewed_at": "2019-06-03T07:59:11.118Z",
                "unstructured": "{\"selected_ids\":[0,1]}"
              },
              "tasks": [
                "阅读下面的 workspace 中的新代码。",
                "**运行**该代码。",
                "尝试更改列表中的数字，并再次**运行**代码，看看会发生什么。"
              ],
              "positive_feedback": "可以看出，这里的 turtle 使用列表中的长度判断每次循环运行时，要移动多远。",
              "video_feedback": null,
              "description": "完成这些操作后，请选中它们—"
            },
            {
              "id": 719649,
              "key": "5e403eb1-8362-4c71-8237-c59594d15869",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "a3b5f862-b4b8-46a2-b6eb-52a119b88a65",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/squiral.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/squiral.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801177,
              "key": "b0b6c54a-0d77-4e10-b16b-a23c9ffa74d1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719650,
              "key": "5c01da88-8491-4c5e-8ee8-89bf158ecf36",
              "title": "Python：遍历列表",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Lqpn7C-RBzY",
                "china_cdn_id": "Lqpn7C-RBzY.mp4"
              }
            },
            {
              "id": 719651,
              "key": "e87665e3-4f96-4a54-a467-cbfdcafaf1fc",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e87665e3-4f96-4a54-a467-cbfdcafaf1fc",
                "completed_at": "2019-06-03T08:02:16.666Z",
                "last_viewed_at": "2019-06-03T08:02:16.666Z",
                "unstructured": "{\"selected_id\":\"a1510357605272\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "下面是上述代码中的一行代码。\n```python\nfor length in lengths:\n```\n`lengths` 是什么？",
                "answers": [
                  {
                    "id": "a1510357576565",
                    "text": "turtle 对象。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510357605272",
                    "text": "包含数字列表的变量。",
                    "is_correct": true
                  },
                  {
                    "id": "a1510357606171",
                    "text": "属于 turtle 对象的方法。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510357693840",
                    "text": "包含字符串指针的数组变量。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719652,
              "key": "44b31c5d-8814-4fd6-8e70-c0de316f4aba",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "44b31c5d-8814-4fd6-8e70-c0de316f4aba",
                "completed_at": "2019-06-03T08:02:31.764Z",
                "last_viewed_at": "2019-06-03T08:02:31.764Z",
                "unstructured": "{\"selected_ids\":[\"a1531633841031\",\"a1531633864783\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "下面还是相同的代码行：\n\n```python\nfor length in lengths:\n```\n\n对于 `length`（没有 `s`），哪些表述正确？?\n\n其中**两个**表述正确。请标记出这**两个**正确的表述：",
                "answers": [
                  {
                    "id": "a1531633781303",
                    "text": "它也是一个包含数字列表的变量，就像 `lengths` 一样。",
                    "is_correct": false
                  },
                  {
                    "id": "a1531633841031",
                    "text": "它也是一个变量，但是和 `lengths` 不同，它不包含完整的列表。",
                    "is_correct": true
                  },
                  {
                    "id": "a1531633864783",
                    "text": "每次循环运行时，`length` 变量都被分配 `lengths` 列表中的一个项目。",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 720024,
          "key": "8884472f-5b3b-4e20-9ff2-873f43ad08de",
          "title": "练习 — 循环变量",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "8884472f-5b3b-4e20-9ff2-873f43ad08de",
            "completed_at": "2019-06-03T08:02:35.264Z",
            "last_viewed_at": "2019-06-03T08:01:57.379Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719653,
              "key": "99a1225b-4a5f-48c3-8208-98ac899ad3fe",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 练习 — 循环变量",
              "instructor_notes": ""
            },
            {
              "id": 719654,
              "key": "e9c7a854-d410-4cd8-9361-6c7e0f73c104",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e9c7a854-d410-4cd8-9361-6c7e0f73c104",
                "completed_at": "2019-06-03T08:02:42.728Z",
                "last_viewed_at": "2019-06-03T08:02:42.728Z",
                "unstructured": "{\"selected_id\":\"a1521860578809\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "在以下循环中，`length` 是什么？\n\n```python\nfor length in [10, 20, 30, 40, 50, 60]:\n    dizzy.forward(length)\n    dizzy.right(90)\n```",
                "answers": [
                  {
                    "id": "a1521860553914",
                    "text": "字符串。",
                    "is_correct": false
                  },
                  {
                    "id": "a1521860577904",
                    "text": "方法。",
                    "is_correct": false
                  },
                  {
                    "id": "a1521860578809",
                    "text": "变量。",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719655,
              "key": "a98b34b2-f929-4ae8-b0ce-75554178e260",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a98b34b2-f929-4ae8-b0ce-75554178e260",
                "completed_at": "2019-06-03T08:02:57.257Z",
                "last_viewed_at": "2019-06-03T08:02:57.257Z",
                "unstructured": "{\"selected_ids\":[\"a1521860896110\",\"a1521860916781\",\"a1521860938821\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "下面是相同的循环：\n\n```python\nfor length in [10, 20, 30, 40, 50, 60]:\n    dizzy.forward(length)\n    dizzy.right(90)\n```\n\n关于该循环，以下哪些表述正确？",
                "answers": [
                  {
                    "id": "a1521860896110",
                    "text": "循环将运行六次。",
                    "is_correct": true
                  },
                  {
                    "id": "a1521860916781",
                    "text": "循环第三次运行时，值 `30` 将被赋值给 `length` 变量。",
                    "is_correct": true
                  },
                  {
                    "id": "a1521860938821",
                    "text": "循环第四次运行时，`dizzy` 将向前移动 40 个像素。",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719656,
              "key": "20a20d32-816c-4c88-a610-c4638c54acad",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "20a20d32-816c-4c88-a610-c4638c54acad",
                "completed_at": "2019-06-03T08:03:22.647Z",
                "last_viewed_at": "2019-06-03T08:03:22.647Z",
                "unstructured": "{\"answer_ids\":[\"a1521861240646\",\"a1525546519887\",\"a1521861380219\",\"a1521861328686\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "还是相同的循环：\n```python\nfor length in [10, 20, 30, 40, 50, 60]:\n    dizzy.forward(length)\n    dizzy.right(90)\n```\n下面的哪些循环将绘制出和这个循环相同的图形？"
                },
                "concepts_label": "循环",
                "answers_label": "相同或不同？",
                "concepts": [
                  {
                    "text": "```python\nfor length in [1, 2, 3, 4, 5, 6]:\n    dizzy.forward(length)\n    dizzy.right(90)\n```",
                    "correct_answer": {
                      "id": "a1521861240646",
                      "text": "不同"
                    }
                  },
                  {
                    "text": "```python\nfor side in [10, 20, 30, 40, 50, 60]:\n    dizzy.forward(side)\n    dizzy.right(90)\n```",
                    "correct_answer": {
                      "id": "a1521861328686",
                      "text": "相同"
                    }
                  },
                  {
                    "text": "```python\nfor angle in [10, 20, 30, 40, 50, 60]:\n    dizzy.forward(100)\n    dizzy.right(angle)\n```",
                    "correct_answer": {
                      "id": "a1521861380219",
                      "text": "不同"
                    }
                  },
                  {
                    "text": "```python\nfor angle in [10, 20, 30, 40, 50, 60]:\n    dizzy.forward(angle)\n    dizzy.right(90)\n```",
                    "correct_answer": {
                      "id": "a1525546519887",
                      "text": "相同"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1521861240646",
                    "text": "不同"
                  },
                  {
                    "id": "a1521861380219",
                    "text": "不同"
                  },
                  {
                    "id": "a1521861328686",
                    "text": "相同"
                  },
                  {
                    "id": "a1525546519887",
                    "text": "相同"
                  }
                ]
              }
            },
            {
              "id": 719657,
              "key": "d366ff2d-bb03-4019-9bc2-8a46d43a3a18",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 循环的第一行\n关键概念是 `for` 循环在**第一行**内置了一个特殊变量。在这些示例中，该变量叫做 `length`。\n\n```python\nfor length in [10, 20, 30, 40, 50, 60]:\n```\n\n循环的第一行每次运行时，列表中的某项将被赋值给该变量。\n\n在第一行用该值赋值后，循环中的代码会运行。\n\n需要理解的重要一点是这个赋值发生在 `for` 循环的*第一行*，但是在此第一行之后，我们可以将不同的值赋值该变量（使用普通赋值语句）。\n\n例如，看看下个问题：",
              "instructor_notes": ""
            },
            {
              "id": 719658,
              "key": "7ef3643a-1c74-4069-98cc-cd882fb93903",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7ef3643a-1c74-4069-98cc-cd882fb93903",
                "completed_at": "2019-06-03T08:03:47.389Z",
                "last_viewed_at": "2019-06-03T08:03:47.389Z",
                "unstructured": "{\"selected_ids\":[\"a1531635302518\",\"a1531635352527\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "下面是我们一直查看的相同循环，但是稍加修改了。\n\n```python\nfor length in [10, 20, 30, 40, 50, 60]:\n    length = 100\n    dizzy.forward(length)\n    dizzy.right(90)\n```\n\n对于此代码，哪些表述正确（这道题可能有点难！）\n\n其中**两个**表述正确：",
                "answers": [
                  {
                    "id": "a1531635232304",
                    "text": "行 `length = 100` 没有影响；可以直接删掉。",
                    "is_correct": false
                  },
                  {
                    "id": "a1531635302518",
                    "text": "循环每次运行时，`dizzy` 将向前移动 `100` 个像素。",
                    "is_correct": true
                  },
                  {
                    "id": "a1531635333366",
                    "text": "`dizzy` 将向前移动 `100` 个像素，但是仅在循环第一次运行时会这样。",
                    "is_correct": false
                  },
                  {
                    "id": "a1531635352527",
                    "text": "循环第一次运行时，`length` 被赋值 `10`，但是立即重新被赋值 `100`。",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719659,
              "key": "6faba4be-0cb9-4ebd-a1b1-8c8520a190a2",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6faba4be-0cb9-4ebd-a1b1-8c8520a190a2",
                "completed_at": "2019-06-03T08:04:04.385Z",
                "last_viewed_at": "2019-06-03T08:04:04.385Z",
                "unstructured": "{\"selected_id\":\"a1531637087669\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "下面这个比较奇怪：\n\n```python\nfor length in [10, 20, 30, 40, 50, 60]:\n    dizzy.forward(length)\n    length = 100\n    dizzy.forward(length)\n```\n循环第一次运行时，`dizzy` 会移动多远？",
                "answers": [
                  {
                    "id": "a1531636914325",
                    "text": "`10` 个像素",
                    "is_correct": false
                  },
                  {
                    "id": "a1531637038973",
                    "text": "`20` 个像素",
                    "is_correct": false
                  },
                  {
                    "id": "a1531637064758",
                    "text": "`100` 个像素",
                    "is_correct": false
                  },
                  {
                    "id": "a1531637087669",
                    "text": "`110` 个像素",
                    "is_correct": true
                  },
                  {
                    "id": "a1531637094478",
                    "text": "`200` 个像素",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 720025,
          "key": "a02a3760-f86a-46c9-9d64-814f3ec9ae19",
          "title": "神秘的形状",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a02a3760-f86a-46c9-9d64-814f3ec9ae19",
            "completed_at": "2019-06-03T08:04:06.880Z",
            "last_viewed_at": "2019-06-03T08:09:17.901Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719660,
              "key": "0223c7d9-bb07-4225-aa4a-0f74b617239b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# `∠` 夹角列表\n\n在上个示例中，你见过一个数字列表，并且程序将每个数字当做*距离*。下面是另一个数字列表。每个数字都应当做*夹角*：\n\n```python\nangles = [-90, 0, 0, -90,\n          135, 0, 0, 0, \n          90, 0, 0, 0,\n          135, -90, 0, 0,\n          90, 0, 0, 0]\n```\n\n请将此夹角列表复制到下面的代码中。然后填写使用它的 `for` 循环。\n\n此循环的效果必须和你刚刚看到的一样，但是我们将使距离保持不变，并更改夹角，而不是使夹角保持不变并更改距离。因此，在循环里，使 turtle 按照列表（`angle` 变量）中的数字右转，然后向前移动 25 个像素。\n\n它画出了什么形状？\n\n_（如果遇到问题，请参阅下面的解决方案。）_",
              "instructor_notes": ""
            },
            {
              "id": 719661,
              "key": "3944b251-9873-49b7-a383-f348886e69f0",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3944b251-9873-49b7-a383-f348886e69f0",
                "completed_at": "2019-06-03T08:05:55.722Z",
                "last_viewed_at": "2019-06-03T08:05:58.885Z",
                "unstructured": "{\"selected_ids\":[0,1,2]}"
              },
              "tasks": [
                "将 `angles` 赋值语句复制到代码中",
                "写一个 **for** 循环并使用叫做 `angles` 的列表指导 turtle 转向。",
                "看看它画出了什么形状！"
              ],
              "positive_feedback": "看来你已经知道如何遍历列表了！",
              "video_feedback": null,
              "description": "完成这些操作后，请选中它们 —"
            },
            {
              "id": 719662,
              "key": "0fd55327-c787-469a-8e96-8ce62ccd4f1e",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "205d5cd2-8be3-4b8c-8482-89837e109507",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/mystery.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/mystery.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801178,
              "key": "2a72c5cb-5cc2-4ead-960d-84dca5997d5c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719663,
              "key": "21bbfea1-d227-4614-86ae-eb9803239bcb",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "21bbfea1-d227-4614-86ae-eb9803239bcb",
                "completed_at": "2019-06-03T08:07:00.711Z",
                "last_viewed_at": "2019-06-03T08:07:00.711Z",
                "unstructured": "{\"selected_id\":\"a1510865492638\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "它画出了什么形状？",
                "answers": [
                  {
                    "id": "a1510865485796",
                    "text": "一个气球，或者一个鼠标。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510865492638",
                    "text": "一座房子，或者一个箭头",
                    "is_correct": true
                  },
                  {
                    "id": "a1510865493466",
                    "text": "加利福尼亚州的地图轮廓。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510867369342",
                    "text": "它没有画出形状，而是显示 `SyntaxError`。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719664,
              "key": "84ac50df-1811-4725-8d97-cc9cec0ae3e3",
              "title": "Python：神秘形状演示",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "9yEiInrUQAU",
                "china_cdn_id": "9yEiInrUQAU.mp4"
              }
            }
          ]
        },
        {
          "id": 720026,
          "key": "15f90dba-a5e1-480a-b18b-9d38b3772d5b",
          "title": "嵌套循环",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "15f90dba-a5e1-480a-b18b-9d38b3772d5b",
            "completed_at": "2019-06-03T08:07:22.744Z",
            "last_viewed_at": "2019-06-03T08:09:25.984Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719665,
              "key": "1a7d2ff1-fe2b-4a6d-a25b-8b52f02c6ab4",
              "title": "Python：嵌套循环",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "TmnSQqfTvws",
                "china_cdn_id": "TmnSQqfTvws.mp4"
              }
            },
            {
              "id": 719666,
              "key": "926c8ab4-403d-4344-804f-57e3263add11",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "926c8ab4-403d-4344-804f-57e3263add11",
                "completed_at": "2019-06-03T08:22:41.566Z",
                "last_viewed_at": "2019-06-03T08:27:50.470Z",
                "unstructured": "{\"selected_ids\":[0,1]}"
              },
              "tasks": [
                "**运行**下面的 workspace 中的代码。",
                "尝试更改代码，使 turtle 画出其他形状。"
              ],
              "positive_feedback": "**很棒！**嵌套循环是很重要的编程技能。",
              "video_feedback": null,
              "description": "完成这些操作后，请选中它们 —"
            },
            {
              "id": 719667,
              "key": "d63549d1-64fc-46cd-a373-891627373d10",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://d17h27t6h515a5.cloudfront.net/topher/2017/November/5a160033_screen-shot-2017-11-22-at-2.54.14-pm/screen-shot-2017-11-22-at-2.54.14-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d63549d1-64fc-46cd-a373-891627373d10",
              "caption": "_请尝试更改程序以画出其他形状。下面是一个示例！_",
              "alt": "六个环环相扣的六边形。",
              "width": 165,
              "height": 165,
              "instructor_notes": null
            },
            {
              "id": 719668,
              "key": "283df722-ed41-4e91-a669-57867fb28bab",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "2f3e4d77-b91f-4a66-9198-d9af8afb5a09",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/chain.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/chain.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801179,
              "key": "41afd500-fca0-4b17-b316-7eba15038626",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719669,
              "key": "4b1f1f27-4699-4e63-8daa-1fe56f391e43",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4b1f1f27-4699-4e63-8daa-1fe56f391e43",
                "completed_at": "2019-06-03T08:28:18.626Z",
                "last_viewed_at": "2019-06-03T08:28:18.626Z",
                "unstructured": "{\"selected_id\":\"a1511389581356\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "以下代码使用了嵌套循环。turtle 总共将爬多远？\n\n```python\nimport turtle\nanna = turtle.Turtle()\nfor path in [1, 2, 3, 4]:\n    for step in [1, 2, 3]:\n        anna.forward(10)\n```",
                "answers": [
                  {
                    "id": "a1511389355978",
                    "text": "12 个像素",
                    "is_correct": false
                  },
                  {
                    "id": "a1511389552937",
                    "text": "40 个像素",
                    "is_correct": false
                  },
                  {
                    "id": "a1511389581356",
                    "text": "120 个像素",
                    "is_correct": true
                  },
                  {
                    "id": "a1511389780188",
                    "text": "信息不足，无法判断。",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 720027,
          "key": "b2953232-33f9-45b8-b4bd-951818ad5b5b",
          "title": "练习 — Turtle 方法",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b2953232-33f9-45b8-b4bd-951818ad5b5b",
            "completed_at": "2019-06-03T08:28:22.418Z",
            "last_viewed_at": "2019-06-03T08:32:52.696Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719670,
              "key": "8205fcbe-c91f-45dc-b5ed-1c7b056de6d8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 练习 - Turtle 方法\n\n你已经学习了使用 turtle 执行不同操作的大量不同方法。我们复习下这些方法，确保你已经记住它们。",
              "instructor_notes": ""
            },
            {
              "id": 719671,
              "key": "dd00994a-0dc2-424a-a6b2-2ffd9fb3fff3",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "dd00994a-0dc2-424a-a6b2-2ffd9fb3fff3",
                "completed_at": "2019-06-03T08:28:42.727Z",
                "last_viewed_at": "2019-06-03T08:28:42.727Z",
                "unstructured": "{\"answer_ids\":[\"a1523216924031\",\"a1523216933277\",\"a1523216946152\",\"a1523218811336\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "将方法调用与作用相匹配。"
                },
                "concepts_label": "作用",
                "answers_label": "方法调用",
                "concepts": [
                  {
                    "text": "向左转100度。",
                    "correct_answer": {
                      "id": "a1523216924031",
                      "text": "`amy.left(100)`"
                    }
                  },
                  {
                    "text": "后退100个像素。",
                    "correct_answer": {
                      "id": "a1523216933277",
                      "text": "`amy.back(100)`"
                    }
                  },
                  {
                    "text": "改变颜色。",
                    "correct_answer": {
                      "id": "a1523216946152",
                      "text": "`amy.color(\"blue\")`"
                    }
                  },
                  {
                    "text": "前进100个像素。",
                    "correct_answer": {
                      "id": "a1523218811336",
                      "text": "`amy.forward(100)`"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1523216946152",
                    "text": "`amy.color(\"blue\")`"
                  },
                  {
                    "id": "a1523216924031",
                    "text": "`amy.left(100)`"
                  },
                  {
                    "id": "a1523216933277",
                    "text": "`amy.back(100)`"
                  },
                  {
                    "id": "a1523218811336",
                    "text": "`amy.forward(100)`"
                  }
                ]
              }
            },
            {
              "id": 719672,
              "key": "7063bcf2-e0a6-45f9-af13-e3d35f3a8331",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7063bcf2-e0a6-45f9-af13-e3d35f3a8331",
                "completed_at": "2019-06-03T08:29:00.468Z",
                "last_viewed_at": "2019-06-03T08:29:00.468Z",
                "unstructured": "{\"answer_ids\":[\"a1523218864554\",\"a1523218868478\",\"a1523218997307\",\"a1523219008179\"],\"is_correct\":true}"
              },
              "question": {
                "complex_prompt": {
                  "text": "以下是你刚刚学习过的方法。\n\n同样，将方法调用与作用相匹配。"
                },
                "concepts_label": "作用",
                "answers_label": "方法调用",
                "concepts": [
                  {
                    "text": "更改线条粗细。",
                    "correct_answer": {
                      "id": "a1523218864554",
                      "text": "`amy.width(5)`"
                    }
                  },
                  {
                    "text": "尽量快速绘制。",
                    "correct_answer": {
                      "id": "a1523218868478",
                      "text": "`amy.speed(0)`"
                    }
                  },
                  {
                    "text": "停止绘制。",
                    "correct_answer": {
                      "id": "a1523218997307",
                      "text": "`amy.penup()`"
                    }
                  },
                  {
                    "text": "开始绘制。",
                    "correct_answer": {
                      "id": "a1523219008179",
                      "text": "`amy.pendown()`"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1523218868478",
                    "text": "`amy.speed(0)`"
                  },
                  {
                    "id": "a1523218864554",
                    "text": "`amy.width(5)`"
                  },
                  {
                    "id": "a1523219008179",
                    "text": "`amy.pendown()`"
                  },
                  {
                    "id": "a1523218997307",
                    "text": "`amy.penup()`"
                  }
                ]
              }
            },
            {
              "id": 719673,
              "key": "0406fd9d-ca9c-4ad4-90f9-20bcfb575867",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "现在该你来练习输入方法了。这样有助于你之后需要这些方法时，记住正确的语法。",
              "instructor_notes": ""
            },
            {
              "id": 719674,
              "key": "71258642-37c7-4c26-a145-389a7bee7776",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "71258642-37c7-4c26-a145-389a7bee7776",
                "completed_at": "2019-06-03T08:29:19.899Z",
                "last_viewed_at": "2019-06-03T08:29:19.899Z",
                "unstructured": "{\"answer\":\"amy.forward(100)\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "输入使 `amy` 向前移动 100 个像素的方法调用。",
                "matchers": [
                  {
                    "expression": "amy.forward\\(100\\)"
                  }
                ]
              }
            },
            {
              "id": 719675,
              "key": "b9a771e0-0589-42de-9870-70f6bcd79afc",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b9a771e0-0589-42de-9870-70f6bcd79afc",
                "completed_at": "2019-06-03T08:29:28.817Z",
                "last_viewed_at": "2019-06-03T08:29:28.817Z",
                "unstructured": "{\"answer\":\"amy.back(100)\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "输入使 `amy` 后退 100 个像素的方法调用。",
                "matchers": [
                  {
                    "expression": "amy.back\\(100\\)"
                  }
                ]
              }
            },
            {
              "id": 719676,
              "key": "80b6a7bb-b2d4-41f3-b527-f51bc5552155",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "80b6a7bb-b2d4-41f3-b527-f51bc5552155",
                "completed_at": "2019-06-03T08:29:43.185Z",
                "last_viewed_at": "2019-06-03T08:29:43.185Z",
                "unstructured": "{\"answer\":\"amy.left(100)\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "输入使 `amy` 左转 100 度的方法调用。",
                "matchers": [
                  {
                    "expression": "amy.left\\(100\\)"
                  }
                ]
              }
            },
            {
              "id": 719677,
              "key": "ea062983-be58-463b-9882-f50a45fd9350",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ea062983-be58-463b-9882-f50a45fd9350",
                "completed_at": "2019-06-03T08:29:57.069Z",
                "last_viewed_at": "2019-06-03T08:29:57.069Z",
                "unstructured": "{\"answer\":\"amy.color(\\\"blue\\\")\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "输入将 `amy` 的绘制颜色设为蓝色的方法调用。",
                "matchers": [
                  {
                    "expression": "amy.color\\(\"blue\"\\)"
                  }
                ]
              }
            },
            {
              "id": 719678,
              "key": "ada80239-3bd9-4975-8ba7-f7b83d58e77e",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ada80239-3bd9-4975-8ba7-f7b83d58e77e",
                "completed_at": "2019-06-03T08:30:08.373Z",
                "last_viewed_at": "2019-06-03T08:30:08.373Z",
                "unstructured": "{\"answer\":\"amy.penup()\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "有时候，我们希望 turtle 在屏幕上到处移动但是不绘制任何线条。请输入关闭 `amy` 的笔的方法调用。",
                "matchers": [
                  {
                    "expression": "amy.penup\\(\\)"
                  }
                ]
              }
            },
            {
              "id": 719679,
              "key": "9485d4d1-cd25-4133-97a0-655ba0a10a74",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9485d4d1-cd25-4133-97a0-655ba0a10a74",
                "completed_at": "2019-06-03T08:30:17.024Z",
                "last_viewed_at": "2019-06-03T08:30:17.024Z",
                "unstructured": "{\"answer\":\"amy.pendown()\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "输入重新开启 `amy` 的笔的方法调用，以便在她移动时绘制图形。",
                "matchers": [
                  {
                    "expression": "amy.pendown\\(\\)"
                  }
                ]
              }
            },
            {
              "id": 719680,
              "key": "7b1fdbb7-ed69-4688-a7d6-4a782abbae0f",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7b1fdbb7-ed69-4688-a7d6-4a782abbae0f",
                "completed_at": "2019-06-03T08:30:29.238Z",
                "last_viewed_at": "2019-06-03T08:30:29.238Z",
                "unstructured": "{\"answer\":\"amy.speed(0)\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "输入使 `amy` 尽可能快速绘制的方法调用。",
                "matchers": [
                  {
                    "expression": "amy.speed\\(0\\)"
                  }
                ]
              }
            },
            {
              "id": 719681,
              "key": "9b9ecfb6-cdb7-4ce2-9a6a-67903c65feac",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9b9ecfb6-cdb7-4ce2-9a6a-67903c65feac",
                "completed_at": "2019-06-03T08:30:38.727Z",
                "last_viewed_at": "2019-06-03T08:30:43.393Z",
                "unstructured": "{\"answer\":\"amy.width(5)\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "输入将 `amy` 的线条粗细更改为 5 个像素的方法调用。",
                "matchers": [
                  {
                    "expression": "amy.width\\(5\\)"
                  }
                ]
              }
            },
            {
              "id": 719682,
              "key": "cfeaffb0-fe12-45c1-9f7c-373df5862ea8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "现在我们使用这些方法绘制简单的图形：三条彩色线条，中间有空格，如下所示：",
              "instructor_notes": ""
            },
            {
              "id": 719683,
              "key": "8ea2654a-de2f-4a20-9252-2c6e213930b4",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://s3.amazonaws.com/video.udacity-data.com/topher/2018/April/5aca7cac_red-orange-yellow-lines/red-orange-yellow-lines.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8ea2654a-de2f-4a20-9252-2c6e213930b4",
              "caption": "",
              "alt": "turtle 画出了三个短线条，分别是红色、橘色和黄色，中间有间隙。",
              "width": 260,
              "height": 45,
              "instructor_notes": null
            },
            {
              "id": 719684,
              "key": "1429de6e-d5bb-4144-8b4f-3e693587cb5b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在下面的 workspace 中，看看你能否自己画出该图形。我们添加了注释，提醒你应该采取的步骤\n\n_（如果遇到问题，请在 workspace 下方查找我们的解决方案。)_",
              "instructor_notes": ""
            },
            {
              "id": 719685,
              "key": "f5823688-b773-4526-9b82-3e9ba499b13e",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewBygzkqKIQm",
              "pool_id": "webterminal",
              "view_id": "html-live-HkzkcF8QQ",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/turtle_methods.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/turtle_methods.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801180,
              "key": "6174d662-e749-4ed7-bae5-b146848b0da6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719686,
              "key": "602dfad1-9805-4d5d-881d-92564749ea42",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719687,
              "key": "e224bd5a-2f68-4bc7-a0e3-253dab9ff4fb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 解决方案\n\n```python\nimport turtle\namy = turtle.Turtle()\n\n# Make the width thicker so that the line will be easier to see\n# 使线条宽度加粗，以便更容易看到线条\namy.width(5)\n\n# Move back without drawing anything\n# 向后移动且不画任何东西\namy.penup()\namy.back(140)\namy.pendown()\n\n# Draw a red line\n# 画一条红线（red）\namy.color(\"red\")\namy.forward(50)\n\n# Move forward without drawing anything\n# 向前移动且不画任何东西\namy.penup()\namy.forward(50)\namy.pendown()\n\n# Draw an orange line\n# 画一条橙色线（orange）\namy.color(\"orange\")\namy.forward(50)\n\n# Move forward without drawing anything\n# 向前移动且不画任何东西\namy.penup()\namy.forward(50)\namy.pendown()\n\n# Draw a yellow line\n# 画一条黄线（yellow）\namy.color(\"yellow\")\namy.forward(50)\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720028,
          "key": "bfb18a39-cb93-44d7-9739-a55f912c7036",
          "title": "练习 — 更多循环变量 (1/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "bfb18a39-cb93-44d7-9739-a55f912c7036",
            "completed_at": "2019-06-03T08:33:31.895Z",
            "last_viewed_at": "2019-06-03T08:33:02.592Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719688,
              "key": "80d37284-73bf-487b-99e2-7ed2cb855de2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 练习 — 更多循环变量 (1/2)\n\n你刚刚编写了绘制三个彩色线条的代码，如下所示：",
              "instructor_notes": ""
            },
            {
              "id": 719689,
              "key": "44b9c54e-4ad3-410a-9487-16cedd61c384",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://s3.amazonaws.com/video.udacity-data.com/topher/2018/April/5aca7cac_red-orange-yellow-lines/red-orange-yellow-lines.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/44b9c54e-4ad3-410a-9487-16cedd61c384",
              "caption": "",
              "alt": "turtle 画出了三个短线，分别是红色、橙色和黄色，中间有间隙。",
              "width": 260,
              "height": 45,
              "instructor_notes": null
            },
            {
              "id": 719690,
              "key": "9343d4c7-846a-4ace-97d7-ab969357c899",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "你可能发现了，代码重复性很高。我们看看能否使用 `for` 循环降低重复性，并画出三个短线。\n\n使每条线颜色都不同可能有点麻烦，我们（暂时）简化下并使所有线条都是红色。\n\n下面的 workspace 中的代码将画出三个红色线条，中间有间隙。可以看出，某些代码重复了。请更改代码，使这些代码行位于 `for` 循环里。",
              "instructor_notes": ""
            },
            {
              "id": 719691,
              "key": "e80d0088-f979-4a7d-bc2c-b0046db42df3",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewBJeS5dIB7m",
              "pool_id": "webterminal",
              "view_id": "html-live-ryrq_Ir7Q",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/more_loops.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/more_loops.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801181,
              "key": "fff6adce-4149-4f47-8570-af70654d425b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719692,
              "key": "c0c00970-ee7f-4813-b5ad-d5158f035406",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719693,
              "key": "f08ecf0c-39d9-41c9-ae2c-ebe558d30ef9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 解决方案\n\n如果你的代码可行，应该看起来如下所示：\n\n```python\nimport turtle\namy = turtle.Turtle()\n\n# Make the width thicker so that the line will be easier to see\n# 使线条宽度加粗，以便更容易看到线条\namy.width(5)\n\n# Move back without drawing anything\n# 向后移动且不画任何东西\namy.penup()\namy.back(140)\namy.pendown()\n\n# Draw three red lines, with space in between\n#绘制三条红线，线与线之间用空格间隔\nfor line in [1, 2, 3]:\n    amy.color(\"red\")\n    amy.forward(50)\n    amy.penup()\n    if line != 3:\n        amy.forward(50)\n    amy.pendown()\n```\n\n我们将在下个页面继续使用此代码。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720029,
          "key": "255e5956-2104-47f5-ba05-9e701965c9cb",
          "title": "练习 — 更多循环变量 (2/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "255e5956-2104-47f5-ba05-9e701965c9cb",
            "completed_at": "2019-06-03T08:44:10.258Z",
            "last_viewed_at": "2019-06-03T08:43:34.661Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719694,
              "key": "f04b5f5e-976b-458d-b7d7-386f22b40397",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 练习 — 更多循环变量 (2/2)",
              "instructor_notes": ""
            },
            {
              "id": 719695,
              "key": "aabbf882-1472-438b-8fb7-c5558a68a375",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "我们有一个画三条短线的循环。但是每次循环运行时，它都使用相同的颜色，因此所有线条都是红色。我们不想要这种效果，我们希望它每次都使用不同的颜色。\n\n我们希望它为：\n\n```python\namy.color(\"red\")\n```\n\n然后：\n\n```python\namy.color(\"orange\")\n```\n\n然后：\n\n```python\namy.color(\"yellow\")\n```\n\n但是如何做到呢？我们希望颜色改变（即变化）这一事实提示我们使用变量。因此我们使用变量（如 `amy.color(prettycolor)`），而不是直接使用字符串（如 `amy.color(\"red\")`）。\n\n然后，turtle 将根据我们赋值给此变量的颜色绘制短线。",
              "instructor_notes": ""
            },
            {
              "id": 719696,
              "key": "38e43efd-81a4-44bc-b16b-0e541d6cd1cf",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "38e43efd-81a4-44bc-b16b-0e541d6cd1cf",
                "completed_at": "2019-06-03T08:45:14.441Z",
                "last_viewed_at": "2019-06-03T08:45:14.441Z",
                "unstructured": "{\"selected_id\":\"a1531695653683\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "`amy.color(prettycolor)` 应该位于 `for` 循环里面（如下所示）：\n\n```python\nfor line in [1, 2, 3]:\n  amy.color(prettycolor)\n  amy.forward(50)\n  amy.penup()\n  amy.forward(50)\n  amy.pendown()\n```\n\n还是 `for` 循环外面（如下所示）？\n\n```python\namy.color(prettycolor)\n\nfor line in [1, 2, 3]:\n  amy.forward(50)\n  amy.penup()\n  amy.forward(50)\n  amy.pendown()\n```",
                "answers": [
                  {
                    "id": "a1531695653683",
                    "text": "在循环内",
                    "is_correct": true
                  },
                  {
                    "id": "a1531695715680",
                    "text": "在循环外",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719697,
              "key": "71d79d68-b8f6-49f9-b3be-04ea752c4e1c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "每次循环运行时，我们希望将新的颜色赋值给 `prettycolor`。\n\n“每次循环运行时，都更改某个变量的值”这一概念不断出现。例如，之前我们见到循环每次运行时，长度都会改变。使得我们能够画出很特别的螺旋形状：",
              "instructor_notes": ""
            },
            {
              "id": 719698,
              "key": "65f6b577-6084-4dfd-835d-b25d1fac67cc",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://s3.amazonaws.com/video.udacity-data.com/topher/2018/July/5b4bddba_squiral/squiral.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/65f6b577-6084-4dfd-835d-b25d1fac67cc",
              "caption": "",
              "alt": "我们之前绘制的蓝色方形螺旋。",
              "width": 150,
              "height": 164,
              "instructor_notes": null
            },
            {
              "id": 719699,
              "key": "d6efce07-35a5-4c38-ad99-b5b674164100",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在另一个示例中，我们见到一个循环：每次循环运行时，夹角都会改变：",
              "instructor_notes": ""
            },
            {
              "id": 719700,
              "key": "aec6b201-5668-4f7a-9015-704a3576d9af",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://s3.amazonaws.com/video.udacity-data.com/topher/2018/July/5b4bdde4_mystery-shape/mystery-shape.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/aec6b201-5668-4f7a-9015-704a3576d9af",
              "caption": "",
              "alt": "我们之前见过的红色小房子或箭头。",
              "width": 150,
              "height": 215,
              "instructor_notes": null
            },
            {
              "id": 719701,
              "key": "4bc2d064-5a21-4fa1-b8b0-6dd2e01975b8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "对于当前问题，我们采取的措施几乎不变。但是我们想要更改颜色，而不是长度或夹角：",
              "instructor_notes": ""
            },
            {
              "id": 719702,
              "key": "94397355-9ba2-4263-8845-3d9f48efb7e0",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://s3.amazonaws.com/video.udacity-data.com/topher/2018/April/5aca7cac_red-orange-yellow-lines/red-orange-yellow-lines.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/94397355-9ba2-4263-8845-3d9f48efb7e0",
              "caption": "",
              "alt": "三个彩色线条（红色、橘色和黄色）。",
              "width": 260,
              "height": 45,
              "instructor_notes": null
            },
            {
              "id": 719703,
              "key": "0bf58d1b-9361-44a2-8c5e-d2f4e5273bee",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在所有三种情形中，**关键在于 `for` 循环的第一行**。目前第一行看起来如下所示：\n\n```python\nfor line in [1, 2, 3]:\n```\n\n注意，`for` 循环的第一行存在一个特殊的变量。之所以特殊，是因为循环每次运行时，该变量都会从列表中分配下一个值。虽然你没有从中看到任何赋值语句，但这就是 `for` 循环的工作原理。\n\n在此示例中，变量的名称是 `line`，它被分配了列表 `[1, 2, 3]` 中的某个数字。循环第一次运行时，`line` 将被分配值 `1`，第二次运行时，它将被分配值 `2`，第三次运行时，它将被分配值 `3`。\n\n听起来和我们想对 turtle 的颜色执行的操作很相似！",
              "instructor_notes": ""
            },
            {
              "id": 719704,
              "key": "0e408803-5235-4852-954f-1c8a14251078",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0e408803-5235-4852-954f-1c8a14251078",
                "completed_at": "2019-06-03T08:46:59.925Z",
                "last_viewed_at": "2019-06-03T08:47:01.144Z",
                "unstructured": "{\"selected_ids\":[]}"
              },
              "tasks": [
                "将列表 `[1, 2, 3]` 改成更有用的列表。",
                "将变量名从 `line` 更改为更有意义的名称。",
                "使用循环里的变量设置 turtle 的颜色。"
              ],
              "positive_feedback": "很棒！像这样在 `for` 循环里使用变量是很关键的概念，一开始可能很让人困惑。",
              "video_feedback": null,
              "description": "下面是你在上个页面中使用的相同 workspace（应该依然包含绘制三条红色短线的代码）。\n\n看看你是否知道如何根据以下要求更改代码：循环每次运行时，它都使用不同的颜色（例如 `\"red\"`、`\"orange\"` 和 `\"yellow\"`）。\n\n以下是你需要完成的步骤："
            },
            {
              "id": 719706,
              "key": "244722e8-3eb2-4ed5-b4b1-acf30d021da1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "_（如果遇到问题，不要伤心，请看看下面我们的解决方案！）。_",
              "instructor_notes": ""
            },
            {
              "id": 719705,
              "key": "564d0b6f-95ea-4418-99a4-697fc71744e7",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewBJeS5dIB7m",
              "pool_id": "webterminal",
              "view_id": "html-live-Hy0IPIYXX",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/more_loops.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/more_loops.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801182,
              "key": "2f738fc2-60e3-4361-aa39-c6e01b77104d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719707,
              "key": "c1ecfa8c-d143-4ecd-8b90-43d5f1543d15",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719709,
              "key": "c141415c-ff07-4951-9ae8-dd97938a7789",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 解决方案\n\n```python\nimport turtle\namy = turtle.Turtle()\n\n# Make the width thicker so that the line will be easier to see\n# 使线条宽度加粗，以便更容易看到线条\namy.width(5)\n\n# Move back without drawing anything\n# 向后移动且不画任何东西\namy.penup()\namy.back(140)\namy.pendown()\n\n# Draw three lines of different colors, with space in between\n#绘制三条不同颜色的线，线与线之间用空格间隔\nfor prettycolor in [\"red\", \"orange\", \"yellow\"]:\n    amy.color(prettycolor)\n    amy.forward(50)\n    amy.penup()\n    amy.forward(50)\n    amy.pendown()\n```\n\n注意，我们继续使用名称 `prettycolor` 而不是直接叫做 `color` 的唯一原因是，我们不希望你将它和 `color` 方法（例如 `amy.color(color)`）弄混了。但是 Python 不会弄混的，你也可以将 `color` 用作变量。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720030,
          "key": "a55a5244-9c90-46ea-8364-9ac24cff24cd",
          "title": "练习 — 嵌套循环",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a55a5244-9c90-46ea-8364-9ac24cff24cd",
            "completed_at": "2019-06-03T08:49:59.154Z",
            "last_viewed_at": "2019-06-03T09:37:11.720Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719708,
              "key": "984c0ccc-15f5-4765-95d6-4d83c026adf3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 练习 — 嵌套循环\n\n我们已经见过可以将一个循环放入另一个循环里，如下所示：\n\n```python\nfor side in [1, 2, 3, 4]:\n    paul.forward(100)\n    paul.right(90)\n    for side in [1, 2, 3, 4]:\n        paul.forward(10)\n        paul.right(90)\n```\n如果你还记得的话，这个循环画出一个很大的方形，四角有一个很小的方形：",
              "instructor_notes": ""
            },
            {
              "id": 719710,
              "key": "f881d541-0354-4615-8576-0770b7591e12",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://s3.amazonaws.com/video.udacity-data.com/topher/2018/July/5b4b8318_nested-loops-squares/nested-loops-squares.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/f881d541-0354-4615-8576-0770b7591e12",
              "caption": "",
              "alt": "一个很大的方形，四角有一个很小的方形。",
              "width": 200,
              "height": 237,
              "instructor_notes": null
            },
            {
              "id": 719711,
              "key": "16b7724d-ed9d-42dd-98e2-e46c87d0edeb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n一开始这样编写嵌套循环可能比较难，我们练习下吧。以下 workspace 中具有绘制三个彩色短线的代码（就同你刚刚处理过的代码一样）。如果我们想画出三个彩色图形，而不是三个短线呢？\n\n在当前代码中，每次循环运行时，`amy` 只是向前移动。你可以将代码行 `amy.forward(50)` 替换为完整的第二个 `for` 循环！你可以使用该循环让 `amy` 画一个方形（或任何你想要的图形）。\n\n```python\nfor prettycolor in [\"red\", \"orange\", \"yellow\"]:\n    amy.color(prettycolor)\n    amy.forward(50) #用 for 循环取代该行代码\n    amy.penup()\n    amy.forward(50)\n    amy.pendown()\n```\n\n你的目标是使用嵌套循环画出多个形状，如下所示：",
              "instructor_notes": ""
            },
            {
              "id": 719712,
              "key": "cd1813bb-f2d3-4eb8-a010-b19700c752ac",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://s3.amazonaws.com/video.udacity-data.com/topher/2018/June/5b1ee4f4_nested-loops-boxes/nested-loops-boxes.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/cd1813bb-f2d3-4eb8-a010-b19700c752ac",
              "caption": "",
              "alt": "turtle 画出了三个方形，分别是红色、橘色和黄色，中间有间隙。",
              "width": 353,
              "height": 118,
              "instructor_notes": null
            },
            {
              "id": 719713,
              "key": "50a20ec1-8bc6-4b60-a387-6185c7e6d31a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "请在下面的 workspace 中尝试一下。\n\n_(如果遇到问题，请在 workspace 下方查找我们的解决方案。)_",
              "instructor_notes": ""
            },
            {
              "id": 719714,
              "key": "e1e871ba-d777-4175-a250-edcca68be64b",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewrye9PVjIX7",
              "pool_id": "webterminal",
              "view_id": "html-live-S1cwEi8mX",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/nested_loops.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/nested_loops.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801183,
              "key": "85295d74-9d31-4838-a548-d3019580b1c8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719715,
              "key": "a09d4105-2150-4844-82f1-825ddf4ac1f4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "----\n<div style=\"background-color: #a4e4f5;\">\n## ⚠️ 剧透！\n\n**下面是我们的解决方案。**如果你能认真完成练习，然后再将你的代码与我们的代码进行对比，学习效果将更好！\n</div>\n----\n----",
              "instructor_notes": ""
            },
            {
              "id": 719716,
              "key": "a102c9dc-fcaa-497b-815c-e2bec06b1751",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 解决方案\n\n下面是我们的解决方案。注意，我们还调整了不绘制时 `amy` 移动的距离，以便在形状之间留点空间。\n\n```python\nimport turtle\n\namy = turtle.Turtle()\n\n# Make the width thicker so that the line will be easier to see\n# 使线条宽度加粗，以便更容易看到线条\namy.width(5)\n\n# Move back without drawing anything\n# 向后移动且不画任何东西\namy.penup()\namy.forward(-140)\namy.pendown()\n\n# Draw three shapes of different colors, with space in between\n#绘制三种不同颜色的形状，形状间用空格间隔\nfor prettycolor in [\"red\", \"orange\", \"yellow\"]:\n    amy.color(prettycolor)\n    for side in [1, 2, 3, 4]:\n        amy.forward(50)\n        amy.right(90)\n    amy.penup()\n    amy.forward(100)\n    amy.pendown()\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 720031,
          "key": "089ae2d4-55a2-4cb3-bf10-3d8d13aac14d",
          "title": "考虑错误",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "089ae2d4-55a2-4cb3-bf10-3d8d13aac14d",
            "completed_at": "2019-06-03T09:44:05.411Z",
            "last_viewed_at": "2019-06-03T09:43:44.289Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719717,
              "key": "2d888de1-5fc9-411a-8955-67f220b6275e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 🚧 三种错误\n\n根据我的经验，编程中会出现三大类型的错误：**语法错误**、**用法错误**和**逻辑错误**。\n\n### 语法错误就像拼写错误\n\n第一个是**语法错误**。也就是写的代码在语言语法上不合理。在 Python 中，如果只写了 `)`，但是前面没有 `(`，则存在语法错误。如果 **for** 循环里忘了 `:`，则也存在语法错误。\n\n```python\nimport turtle\nalison = turtle.Turtle()\nfor angle in [15, 30, 45]     # missing colon  缺少冒号\n    alison.right 90)          # missing parenthesis  缺少括号\n```\n\n语法错误就像拼写错误。当你学习新的语言时，很可能会犯很多语法错误。但是当你熟练该语言后，错误就会少了。\n\n### 用法错误就像不合理的答案\n\n第二种错误可以称之为**用法错误**。当你要求计算机执行不合理的操作时，就存在用法错误。例如，`alison.forward(\"orange\")` 是用法错误。完全符合语法，但是 `forward` 方法要求提供数字（表示像素距离），而不是字符串。turtle 无法向前移动 `\"orange\"` 像素。\n\n这种错误就相当于说的话很奇怪，或者答案不合理：\n\n> **问：**今天午餐你要吃什么？\n> **答：**从纽约到伦敦的距离。\n\n> **问：**你最喜欢的颜色是什么颜色？\n> **答：**企鹅。\n\n你不能吃距离；企鹅不是颜色。对于这些问题来说，这些答案不合理，就像 `\"orange\"` 不能作为 `forward` 方法的输入一样。\n\nPython 的 `NameError` 和 `TypeError` 消息通常都是这种类型的错误。你之前见到的 `ZeroDivisionError` 也算是这种错误。\n\n### 逻辑错误就像提出错误的要求\n\n最后，第三种错误是**逻辑错误**。程序能正常运行 — 没有崩溃 — 但是行为和你想要的不一样，因为你所写的和你想要的不一样。这就和人们常常说道“计算机并非按照你所想的去操作，而是按照你告诉它的指令去操作。”一个意思。\n\n例如，如果我想画一个八边形，并且我的代码是 —\n\n```python\nimport turtle\nmichael = turtle.Turtle()\nfor side in [1, 2, 3, 4, 5, 7, 8]:\n    michael.forward(100)\n    michael.right(45)\n```\n\n那么我的代码存在逻辑错误。请仔细检查，看看你能否找到该错误。",
              "instructor_notes": ""
            },
            {
              "id": 719718,
              "key": "34973d98-765c-4a92-96a8-09644b82bb92",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "34973d98-765c-4a92-96a8-09644b82bb92",
                "completed_at": "2019-06-03T09:46:04.961Z",
                "last_viewed_at": "2019-06-03T09:46:54.510Z",
                "unstructured": "{\"selected_id\":\"a1511442077697\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "在没有运行上述 `michael` 代码的情况下，你认为哪行有错误？",
                "answers": [
                  {
                    "id": "a1511442000944",
                    "text": "**import** 语句所在的行",
                    "is_correct": false
                  },
                  {
                    "id": "a1511442066510",
                    "text": "定义 **michael** 的行",
                    "is_correct": false
                  },
                  {
                    "id": "a1511442077697",
                    "text": "**for** 循环开始的行",
                    "is_correct": true
                  },
                  {
                    "id": "a1511442089233",
                    "text": "turtle **向前移动**的行",
                    "is_correct": false
                  },
                  {
                    "id": "a1511442090090",
                    "text": "turtle **右转**的行",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719719,
              "key": "aeaf5814-8b29-424b-817c-da7d4742eb74",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 缩进可能很麻烦\n\n代码可能会出错的地方是循环缩进。如果你发现某些代码行运行的次数超出（或少于）预期了，仔细检查下循环缩进情况。\n\n```python\nfor a in [1, 2, 3]:\n    # code here will run 3 times.  此处代码将运行 3 次\n    for b in [4, 5, 6]:\n        # code in here will run 9 times  此处代码将运行 9 次\n    # but code here will run only 3 times!  但此处代码将只运行 3 次\n```\n",
              "instructor_notes": ""
            },
            {
              "id": 719720,
              "key": "8c25268b-6b4f-4c15-a69a-67a137ffbd5d",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8c25268b-6b4f-4c15-a69a-67a137ffbd5d",
                "completed_at": "2019-06-03T09:48:27.666Z",
                "last_viewed_at": "2019-06-03T09:48:27.666Z",
                "unstructured": "{\"selected_id\":\"a1518121996764\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "当以下代码运行时，`willow` 将总共向前移动多少距离？\n\n```python\nwillow = turtle.Turtle()\nfor x in [1, 2, 3]:\n    willow.forward(1)\n    for y in [4, 5, 6, 7]:\n        willow.forward(1)\n    willow.forward(1)\n```",
                "answers": [
                  {
                    "id": "a1518121791172",
                    "text": "3 个像素",
                    "is_correct": false
                  },
                  {
                    "id": "a1518121984386",
                    "text": "7 个像素",
                    "is_correct": false
                  },
                  {
                    "id": "a1518121985607",
                    "text": "13 个像素",
                    "is_correct": false
                  },
                  {
                    "id": "a1518121996764",
                    "text": "18 个像素",
                    "is_correct": true
                  },
                  {
                    "id": "a1518122015780",
                    "text": "21 个像素",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 720032,
          "key": "c4ea9fbc-6b67-4ae6-9407-7379b599ac59",
          "title": "实战演练：用代码画图",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c4ea9fbc-6b67-4ae6-9407-7379b599ac59",
            "completed_at": "2019-06-03T09:48:29.573Z",
            "last_viewed_at": "2019-06-03T12:26:37.417Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719721,
              "key": "6b95987f-15f9-4290-b512-a941b42ff277",
              "title": "Python：彩虹 Turtle",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "jV_0sC9BVUw",
                "china_cdn_id": "jV_0sC9BVUw.mp4"
              }
            },
            {
              "id": 719722,
              "key": "462363bd-2ef2-411a-b592-12679ba45559",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 🌈绘制彩虹\n\n使用下面的 workspace 画一个彩虹色图形，或画你自己选择的图形！\n\n几个可能有用的额外 turtle 方法（假设你有一个叫做 `terry` 的 turtle）：\n\n* `terry.hideturtle()` 将使 turtle 本身消失。\n* `terry.showturtle()` 将使其再次出现。\n\n正如你之前见过的：\n\n* `terry.width(10)` 将使其画出很粗的线条。\n* `terry.penup()` 将使其“抬笔”并且在移动时不绘制线条。\n* `terry.pendown()` 将使其再次移动时开始绘制图形。\n\n别忘了先创建一个 turtle。（你并非必须叫它 `terry`。）\n\n_之后不知道该怎么操作？尝试 `for` 循环！_",
              "instructor_notes": ""
            },
            {
              "id": 719723,
              "key": "68463537-8cb0-4904-8bea-8751a9edb67a",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view69c608dc",
              "pool_id": "webterminal",
              "view_id": "79984a71-46a8-40e1-b69e-50b78eeaf774",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/workspace-turtle-support/student_files/lesson_one/anything.py"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": false,
                    "previewFile": "/home/workspace/workspace-turtle-support/student_files/lesson_one/anything.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 801184,
              "key": "04e0d496-7fae-4965-90df-78ccf996f0ab",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "（**备注**：如果你无法打开上面的workspace，请去[这里](https://github.com/udacity/turtles-cn)）",
              "instructor_notes": ""
            },
            {
              "id": 719724,
              "key": "884b7993-25ac-4883-bcee-6ce3ab4d1a36",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "这是一道开放式练习。你可以尝试很多或尝试很少！（尝试越多，学到的知识越多。）_\n\n当你尝试完毕后，请观看此页面下方的视频，查看一些可行的示例。",
              "instructor_notes": ""
            },
            {
              "id": 719725,
              "key": "e09d5f9f-0752-408d-8671-855f7c489e17",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e09d5f9f-0752-408d-8671-855f7c489e17",
                "completed_at": "2019-06-03T12:45:06.050Z",
                "last_viewed_at": "2019-06-03T12:45:06.361Z",
                "unstructured": "{\"selected_ids\":[0,1]}"
              },
              "tasks": [
                "写一段使用颜色列表绘制彩色图形的代码。",
                "如果你愿意，可以对你的作品截图，并分享给好友！"
              ],
              "positive_feedback": "**真希望我能看到你的多彩代码！**",
              "video_feedback": null,
              "description": "在继续之前，确保你已经完成了每个步骤！"
            },
            {
              "id": 719726,
              "key": "17acb346-ccb4-4396-9bcf-1ede887a8d29",
              "title": "Python：彩虹 Turtle 演示",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "P50aMPx-zYI",
                "china_cdn_id": "P50aMPx-zYI.mp4"
              }
            },
            {
              "id": 719727,
              "key": "dcc37c98-8194-4a8c-8f51-ccf46b49330c",
              "title": "Python：彩虹 Turtle 演示（第 2 部分）",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "uIg5-eaaqGs",
                "china_cdn_id": "uIg5-eaaqGs.mp4"
              }
            }
          ]
        },
        {
          "id": 720033,
          "key": "07851f83-f173-4517-8929-f7260c88b347",
          "title": "复习",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "07851f83-f173-4517-8929-f7260c88b347",
            "completed_at": "2019-06-03T09:49:54.680Z",
            "last_viewed_at": "2019-06-03T13:00:30.298Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 719728,
              "key": "4686f3b2-9f2e-441f-b0ac-dfb2ceaf0900",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 复习\n\n恭喜！你已经学完这节课了。在学习下节课之前，请花点时间复习下所学的知识。我们学了很多知识！此页面上的练习有助于你巩固到目前为止所学的知识。 ",
              "instructor_notes": ""
            },
            {
              "id": 719729,
              "key": "26c3b48c-8fa3-4a55-b882-564b55ea8023",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "26c3b48c-8fa3-4a55-b882-564b55ea8023",
                "completed_at": "2019-06-03T09:50:09.874Z",
                "last_viewed_at": "2019-06-03T09:50:15.203Z",
                "unstructured": "{\"selected_id\":\"a1510617520602\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "下面的哪些代码行是**方法调用**？",
                "answers": [
                  {
                    "id": "a1510617490245",
                    "text": "`import turtle`",
                    "is_correct": false
                  },
                  {
                    "id": "a1510617519820",
                    "text": "`for side in sides:`",
                    "is_correct": false
                  },
                  {
                    "id": "a1510617520602",
                    "text": "`george.forward(90)`",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 719730,
              "key": "b2771933-4d3e-466b-9020-d32b2844f7b5",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b2771933-4d3e-466b-9020-d32b2844f7b5",
                "completed_at": "2019-06-03T09:50:27.762Z",
                "last_viewed_at": "2019-06-03T09:50:27.762Z",
                "unstructured": "{\"selected_id\":\"a1510617736793\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "在使用列表的 `for` 循环中，什么决定了循环将运行多少次？",
                "answers": [
                  {
                    "id": "a1510617717079",
                    "text": "turtle 的笔的宽度。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510617736793",
                    "text": "列表项数量，例如 `[5, 6, 7]` 会使循环运行三次。",
                    "is_correct": true
                  },
                  {
                    "id": "a1510617737556",
                    "text": "循环代码有多少副本。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510617873570",
                    "text": "列表中的最大数字，例如 `[3, 17, 5]` 中的 `17`。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719731,
              "key": "0d57b597-9ecb-4c5c-992b-1516d44f9d6b",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0d57b597-9ecb-4c5c-992b-1516d44f9d6b",
                "completed_at": "2019-06-03T09:50:57.136Z",
                "last_viewed_at": "2019-06-03T09:50:57.136Z",
                "unstructured": "{\"selected_id\":\"a1510618066266\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "在 Python 中，代码包含在引号内是什么意思？",
                "answers": [
                  {
                    "id": "a1510618066266",
                    "text": "是一个字符串，一段文本",
                    "is_correct": true
                  },
                  {
                    "id": "a1510618103584",
                    "text": "是变量名，可能包含 turtle 或数字。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510618118734",
                    "text": "是计算机内存中的带编号位置。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510618136045",
                    "text": "是一个模块。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719732,
              "key": "c17c2de5-1f52-4dd1-a636-aca155cd0fc5",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c17c2de5-1f52-4dd1-a636-aca155cd0fc5",
                "completed_at": "2019-06-03T09:51:12.584Z",
                "last_viewed_at": "2019-06-03T09:51:12.584Z",
                "unstructured": "{\"selected_id\":\"a1510618365360\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "`NameError` 是什么意思？",
                "answers": [
                  {
                    "id": "a1510618355878",
                    "text": "代码尝试给 turtle 设置粗鲁或下流的名字。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510618364604",
                    "text": "代码尝试创建太大而无法塞进内存的字符串。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510618365360",
                    "text": "代码尝试在定义变量前使用该变量。",
                    "is_correct": true
                  },
                  {
                    "id": "a1510687024406",
                    "text": "可能表示任何意思，或什么意思也没有；无法判断。",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 719733,
              "key": "9dad8b96-0e96-4cb6-ba8c-d9ad80f07f1e",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9dad8b96-0e96-4cb6-ba8c-d9ad80f07f1e",
                "completed_at": "2019-06-03T09:51:25.817Z",
                "last_viewed_at": "2019-06-03T09:51:32.480Z",
                "unstructured": "{\"selected_ids\":[\"a1510618561067\",\"a1510618599696\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "你可以从 Python 的错误消息中发现哪些信息？\n\n请选中**所有**适用项。",
                "answers": [
                  {
                    "id": "a1510618561067",
                    "text": "错误类型，例如 `ZeroDivisionError` 或 `NameError`",
                    "is_correct": true
                  },
                  {
                    "id": "a1510618598845",
                    "text": "代码的正确版本。",
                    "is_correct": false
                  },
                  {
                    "id": "a1510618599696",
                    "text": "错误所在的行号。",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}