WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.779
到目前为止 你一直在优达学城的教室

00:00:03.779 --> 00:00:06.067
这样的环境中编写代码

00:00:06.067 --> 00:00:07.919
但你可能也希望能够

00:00:07.919 --> 00:00:10.460
在你自己的计算机上本地运行程序

00:00:10.460 --> 00:00:15.095
在这里 我们要说一下 Python 和 C++ 之间的另一个重要区别

00:00:15.095 --> 00:00:18.772
在上节课开始时 你就学到了第一个主要区别

00:00:18.772 --> 00:00:23.489
那就是 Python 是动态类型的 而 C++ 是静态类型的

00:00:23.489 --> 00:00:25.904
这就是为什么我要写像 int 一样的编码

00:00:25.905 --> 00:00:30.285
另一个主要区别是 Python 是所谓的解释语言

00:00:30.285 --> 00:00:33.494
而 C++ 是一种编译语言

00:00:33.494 --> 00:00:36.629
当你用 Python 或者 C++ 编写代码的时候

00:00:36.630 --> 00:00:39.660
电脑无法直接了解你所写的内容

00:00:39.659 --> 00:00:42.854
代码首先需要翻译成

00:00:42.854 --> 00:00:46.269
计算机理解的语言 在 Python 代码中

00:00:46.270 --> 00:00:49.493
有一种翻译器 也被称为解释器

00:00:49.493 --> 00:00:51.465
它会逐行翻译

00:00:51.465 --> 00:00:55.270
然后执行每行代码

00:00:55.270 --> 00:00:57.750
翻译这行 然后执行

00:00:57.750 --> 00:00:59.579
翻译这行 然后执行

00:00:59.579 --> 00:01:05.170
这个翻译执行过程一直到你到达文件末尾为止

00:01:05.170 --> 00:01:07.500
在本例中 一直到代码单元的结尾

00:01:07.500 --> 00:01:10.560
并运行单元格 按预期的方式运行

00:01:10.560 --> 00:01:12.960
现实比我所描述的要复杂得多

00:01:12.959 --> 00:01:16.544
但这是 Python 这样的解释语言的基本特征

00:01:16.545 --> 00:01:19.885
使用 C++ 等编译性语言时

00:01:19.885 --> 00:01:22.765
所有的代码在被执行前

00:01:22.765 --> 00:01:26.224
都被翻译成一种编译器可以理解的语言

00:01:26.224 --> 00:01:28.409
这一步称为编译

00:01:28.409 --> 00:01:31.409
程序只有在编译之后

00:01:31.409 --> 00:01:33.825
才可以被执行或运行

00:01:33.825 --> 00:01:37.469
到目前为止 我们一直没有向你展示这个编译步骤

00:01:37.469 --> 00:01:39.847
当你在浏览器中编写代码

00:01:39.847 --> 00:01:41.355
然后向下滚动

00:01:41.355 --> 00:01:43.234
并点击测试运行时

00:01:43.234 --> 00:01:48.400
我们一直在秘密地编译 然后在后台执行代码

00:01:48.400 --> 00:01:51.675
所以到目前为止 这种语言已经被编译了

00:01:51.674 --> 00:01:55.216
但是 当你在自己的计算机上编写 C++ 代码时

00:01:55.216 --> 00:01:57.739
你就得自己编译了

00:01:57.739 --> 00:02:00.049
让我向大家展示一下 在我电脑上是如何运行的

00:02:00.049 --> 00:02:01.929
在这里 我有同样的文件

00:02:01.930 --> 00:02:04.213
我把它称为 demo.cpp

00:02:04.212 --> 00:02:06.734
如果我真的想在我的电脑上运行这个代码

00:02:06.734 --> 00:02:10.164
我必须先拉起一个叫终端的东西

00:02:10.164 --> 00:02:13.079
现在不用纠结什么是终端

00:02:13.080 --> 00:02:16.870
你现在只需要知道当我输入 LS

00:02:16.870 --> 00:02:20.332
这个命令时 它会列出我当前目录中所有文件

00:02:20.332 --> 00:02:24.240
现在 我看到只有这个 dem.cpp 文件

00:02:24.240 --> 00:02:26.070
现在我在运行这段代码之前

00:02:26.069 --> 00:02:27.689
需要先进行编译

00:02:27.689 --> 00:02:29.055
在我的电脑上

00:02:29.055 --> 00:02:33.580
我先输入 g++ 然后再输入文件名

00:02:33.580 --> 00:02:35.650
在本例中 输入 demo.ccp

00:02:35.650 --> 00:02:39.724
然后按 Enter 键 结果程序没有反应

00:02:39.724 --> 00:02:42.104
不过 如果我输入另外一个 LS

00:02:42.104 --> 00:02:45.846
我可以看见第二个名为 a.out 的文件

00:02:45.847 --> 00:02:51.270
这是 demo.ccp 中代码的翻译或编译版本

00:02:51.270 --> 00:02:54.900
如果我输入 /a.out 然后按 Enter 键

00:02:54.900 --> 00:02:57.444
就得到了想要的结果

00:02:57.444 --> 00:02:58.834
在本课程剩余时间

00:02:58.835 --> 00:03:00.895
你会学习更多关于编译的知识

00:03:00.895 --> 00:03:04.000
然后你会在自己的电脑上开始使用 C++ 代码

