WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.000
到目前为止 我们一直在讨论在现实世界中

00:00:03.000 --> 00:00:07.509
使用盒子和袋子存储多张罚款单的系统

00:00:07.509 --> 00:00:10.259
不过现在 我们要回归数字世界

00:00:10.259 --> 00:00:14.324
思考我们如何表述一张罚款单

00:00:14.324 --> 00:00:16.079
记住 现实中的罚款单是这样的

00:00:16.079 --> 00:00:19.244
不过我们要讨论的是数字罚款单

00:00:19.245 --> 00:00:22.500
也就是说 我们只关心这张数字罚款单包含多少数据

00:00:22.500 --> 00:00:26.609
在本例中 数据就是文本 但实际上并不只是文本

00:00:26.609 --> 00:00:27.839
也不适合用字符串来表述

00:00:27.839 --> 00:00:32.700
因为这里有两种不同类型的文本

00:00:32.700 --> 00:00:36.795
在左边 我们有各种字段名称

00:00:36.795 --> 00:00:38.910
每张罚款单有一个 DATE 字段

00:00:38.909 --> 00:00:42.129
一个 Priority 字段 还有一个 Description 字段

00:00:42.130 --> 00:00:46.230
不过右边的文本在不同罚款单上是不一样的 首先

00:00:46.229 --> 00:00:48.104
我们研究一下这些数据

00:00:48.104 --> 00:00:51.509
它们的呈现顺序是 DATE 位于 Priority 前面

00:00:51.509 --> 00:00:56.789
Description 则位于最后

00:00:56.789 --> 00:00:58.854
但是 这种顺序没有实际意义

00:00:58.854 --> 00:01:02.669
实际上 我们完全可以将 Description放在最前面

00:01:02.670 --> 00:01:06.060
当数据没有任何固有的顺序时

00:01:06.060 --> 00:01:07.829
这往往意味着

00:01:07.829 --> 00:01:11.355
我们应该使用除列表以外的其他数据结构 但也会有例外

00:01:11.355 --> 00:01:13.620
在下一节中 你将探索

00:01:13.620 --> 00:01:16.250
与各种数据结构相关的权衡思路

00:01:16.250 --> 00:01:17.760
最终 我们的解决办法是使用

00:01:17.760 --> 00:01:22.200
Python 字典作为存储无序但相关数据的首选方式

