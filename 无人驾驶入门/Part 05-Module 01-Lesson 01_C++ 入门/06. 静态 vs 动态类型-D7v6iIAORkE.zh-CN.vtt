WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.964
所以在研究一些 C++ 的东西时

00:00:02.964 --> 00:00:04.919
我发现 静态类型这个词

00:00:04.919 --> 00:00:07.769
不断出现 语言被称为静态类型

00:00:07.769 --> 00:00:09.334
C++ 就是一种静态类型

00:00:09.335 --> 00:00:13.115
你能解释一下静态类型的语言是什么意思？

00:00:13.115 --> 00:00:14.669
当你进入 C++ 时

00:00:14.669 --> 00:00:18.495
你必须告诉编译器你想要什么样的变量

00:00:18.495 --> 00:00:25.109
是一个浮点变量 还是一个字符或一个字符串

00:00:25.109 --> 00:00:28.530
你需要提前知道你是否想要很高的精度

00:00:28.530 --> 00:00:32.265
如 float 64类型或双精度型

00:00:32.265 --> 00:00:38.265
之所以这么做 是因为它告诉编译器应该如何操作

00:00:38.265 --> 00:00:40.710
在 Python 语言中 你无需这样做

00:00:40.710 --> 00:00:43.799
你可以随意使用任何变量

00:00:43.799 --> 00:00:46.919
这些变量可以半途改变 没关系

00:00:46.920 --> 00:00:52.325
但是如果你在 C++ 中声明一个变量浮点数 F

00:00:52.325 --> 00:00:58.155
一旦 F 存在 它就必须是一个浮点数

00:00:58.155 --> 00:00:59.490
如果你采用一个不同的函数

00:00:59.490 --> 00:01:02.510
你可能获得一个无限的字符串 F

00:01:02.509 --> 00:01:04.140
虽然看起来很傻

00:01:04.140 --> 00:01:07.840
在名字的范围之外没有关系

00:01:07.840 --> 00:01:09.503
不过在范围之内

00:01:09.503 --> 00:01:11.265
它必须始终是那种类型

00:01:11.265 --> 00:01:13.049
所以它是固定类型

00:01:13.049 --> 00:01:15.935
它是静态类型 这就是静态类型的意思

00:01:15.935 --> 00:01:18.420
所以当设计编程语言时

00:01:18.420 --> 00:01:20.093
我实际上是在制作自己的编程语言

00:01:20.093 --> 00:01:24.359
我可以选择是否使用静态类型的语言

00:01:24.359 --> 00:01:27.254
和静态类型相对的 我觉得还有动态类型语言

00:01:27.254 --> 00:01:28.393
如何权衡这个呢？

00:01:28.394 --> 00:01:30.240
权衡时需要考虑什么呢？

00:01:30.239 --> 00:01:32.519
静态类型的语言更可能速度更快

00:01:32.519 --> 00:01:36.509
因为它让你可以提前知道你需要做的事情

00:01:36.510 --> 00:01:39.990
动态类型的语言则可能会更灵活

00:01:39.989 --> 00:01:44.030
让用户随后决定他们真正想要的是什么

00:01:44.030 --> 00:01:47.430
所以这是一个灵活性与速度的权衡

