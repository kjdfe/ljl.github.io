WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.004
所以我觉得我对此有一些了解

00:00:02.004 --> 00:00:04.019
但是还有些问题 例如

00:00:04.019 --> 00:00:05.699
既然双精度比单精度浮点数更精确

00:00:05.700 --> 00:00:07.759
为什么不始终使用双精度浮点数呢？

00:00:07.759 --> 00:00:10.240
因为双精度浮点数占空间更大

00:00:10.240 --> 00:00:13.285
如果你正在做一个小程序 这并不重要

00:00:13.285 --> 00:00:19.035
但是如果你需要做一个程序 其中有一百万个变量

00:00:19.035 --> 00:00:21.882
双精度浮点数占用空间是单精度的两倍

00:00:21.882 --> 00:00:25.794
我们的电脑现在有很多存储空间

00:00:25.795 --> 00:00:28.630
笔记本电脑的存储容量已经非常惊人

00:00:28.629 --> 00:00:30.869
不过当你采用嵌入系统时

00:00:30.870 --> 00:00:33.186
有时候存储空间不足

00:00:33.186 --> 00:00:35.729
你需要知道资源约束

00:00:35.729 --> 00:00:37.414
的限制

00:00:37.414 --> 00:00:40.439
因此 你必须选择使用单精度浮点数 或者甚至选择定点数

00:00:40.439 --> 00:00:45.000
不过在无人驾驶车中 我可以在行李箱中放入很多台电脑

00:00:45.000 --> 00:00:49.269
但是在行李箱中放的每台电脑都会消耗电量

00:00:49.270 --> 00:00:52.000
这意味着每多一台电脑 车的续航里程都会缩短

