WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:05.000
Google自動運転車の位置推定を
プログラミングできました

00:00:05.000 --> 00:00:10.000
まだ実感はないかもしれませんが
今何をしているか教えましょう

00:00:10.000 --> 00:00:13.000
観測更新のあと動作について話しました

00:00:13.000 --> 00:00:16.000
これら2つをsenseとmoveと呼びます

00:00:16.000 --> 00:00:20.000
位置推定はsenseとmoveの反復に他なりません

00:00:20.000 --> 00:00:24.000
初期信念はこのループに放り込まれます

00:00:24.000 --> 00:00:27.000
最初に認識を実行すると左側に来ます

00:00:27.000 --> 00:00:33.000
位置推定は次の動作を順番に実行します
move、sense、move、sense、move、sense

00:00:33.000 --> 00:00:36.000
move、sense、move、senseのサイクルです

00:00:36.000 --> 00:00:40.000
ロボットは動く度に今いる場所の情報を失います

00:00:40.000 --> 00:00:42.000
動作が不確実だからです

00:00:42.000 --> 00:00:44.400
認識する度に情報を得ます

00:00:44.400 --> 00:00:47.000
これは次の事実を見れば明確です

00:00:47.000 --> 00:00:51.000
動作後は確率分布が少しだけ平らになり広がります

00:00:51.000 --> 00:00:55.000
そして認識したあとの確率分布は狭まります

00:00:55.000 --> 00:01:00.000
補足ですがエントロピーと呼ばれる
情報量を表す尺度があります

00:01:00.000 --> 00:01:03.000
たくさんある方法の1つが
［－Ʃp（Xi）log p（Xi）］で

00:01:03.000 --> 00:01:07.000
それぞれのグリッドセルにおける
確率の期待値のlogを表しています

00:01:07.000 --> 00:01:12.000
詳細は省略しますが
これがその分布が持っている情報量の尺度です

00:01:12.000 --> 00:01:18.000
更新ステップや動作ステップでは
エントロピーが小さくなり

00:01:18.000 --> 00:01:20.000
観測ステップでは大きくなります

00:01:20.000 --> 00:01:23.000
私たちは情報を失ったり得たりしているのです

00:01:23.000 --> 00:01:26.000
では これをコードに実装したいと思います

00:01:26.000 --> 00:01:32.000
以前行った赤と緑の2種類の観測に加え
2つの動作を与えます　1と1です

00:01:32.000 --> 00:01:35.000
つまりロボットは左右にもう一度動くのです

00:01:35.000 --> 00:01:39.000
ロボットが初めに赤を認識した場合の
事後分布を計算できますか？

00:01:39.000 --> 00:01:43.000
赤を認識したあと右に1動き緑を認識し
右にまた動いた場合の

00:01:43.000 --> 00:01:45.000
事後分布を求めてください

00:01:45.000 --> 00:01:48.000
先ほどの一様分布から始めましょう

