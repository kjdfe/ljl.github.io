WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.690
A great way to learn a variety of

00:00:02.690 --> 00:00:06.740
computer vision techniques is by building an image classifier.

00:00:06.740 --> 00:00:10.910
A lot of what we'll focus on in this lesson is grouping image data into classes,

00:00:10.910 --> 00:00:15.615
like humans, bikes, and cars or images taken during the day vs at night.

00:00:15.615 --> 00:00:19.135
And some of these classification tasks are quite challenging.

00:00:19.135 --> 00:00:21.950
We'll be exploring two main ways to separate this data

00:00:21.949 --> 00:00:26.309
by programming explicit rules that separate data into groups,

00:00:26.309 --> 00:00:30.904
or by machine learning techniques that can automatically separate this data.

00:00:30.905 --> 00:00:34.890
Both approaches can be used to build an image classifier.

00:00:34.890 --> 00:00:37.789
So what exactly is an image classifier?

00:00:37.789 --> 00:00:41.685
An image classifier is an algorithm that takes in an image as

00:00:41.685 --> 00:00:46.204
input and outputs a label or class that identifies that image.

00:00:46.204 --> 00:00:50.429
For example, one type of classifier used in self driving cars will look at

00:00:50.429 --> 00:00:54.774
different images of roads and be able to identify whether that road contains humans,

00:00:54.774 --> 00:01:00.585
cars, bikes and so on distinguishing and classifying each image based on its contents.

00:01:00.585 --> 00:01:03.240
And there are many types of classifiers used to

00:01:03.240 --> 00:01:06.225
recognize specific objects or even behaviors,

00:01:06.224 --> 00:01:08.780
like whether a person is walking or running.

00:01:08.780 --> 00:01:12.655
But all these classifiers involve a similar series of steps.

00:01:12.655 --> 00:01:16.920
I'll refer to these steps as part of the image classification pipeline.

00:01:16.920 --> 00:01:21.000
First, a computer receives visual input from an imaging device like a camera.

00:01:21.000 --> 00:01:25.344
This is typically captured as an image or a sequence of images.

00:01:25.344 --> 00:01:27.030
Each image is then sent through

00:01:27.030 --> 00:01:31.335
some pre-processing steps whose purpose is to standardize each image.

00:01:31.334 --> 00:01:36.284
Common pre-processing steps include resizing an image or rotating it to change its shape,

00:01:36.284 --> 00:01:40.694
or transforming the image from one color to another like from color to gray scale.

00:01:40.694 --> 00:01:43.500
Only by standardizing each image, for example,

00:01:43.500 --> 00:01:45.540
and making them the same size can you then

00:01:45.540 --> 00:01:49.165
compare them and further analyze them in the same way.

00:01:49.165 --> 00:01:51.000
Next, we extract features.

00:01:51.000 --> 00:01:53.575
Features are what help us define certain objects and they're

00:01:53.575 --> 00:01:56.825
usually information about object, shape or color.

00:01:56.825 --> 00:02:00.900
Some features that distinguish a car from a bicycle are that a car is

00:02:00.900 --> 00:02:05.400
usually a much larger shape and it has four wheels instead of two.

00:02:05.400 --> 00:02:08.700
The shape and wheels would be distinguishing features for a car,

00:02:08.699 --> 00:02:11.829
and we'll talk more about features later in this lesson.

00:02:11.830 --> 00:02:13.890
And finally, these features are fed into

00:02:13.889 --> 00:02:19.559
a classification algorithm also referred to as a model that classifies the image.

00:02:19.560 --> 00:02:21.240
This step looks at any features from

00:02:21.240 --> 00:02:25.080
the previous step and predicts whether say this image is of a car,

00:02:25.080 --> 00:02:27.890
or a pedestrian, or a bike and so on.

00:02:27.889 --> 00:02:29.399
You'll be programming each of

00:02:29.400 --> 00:02:33.490
these classification steps manually so that you really understand each step,

00:02:33.490 --> 00:02:35.310
and by the end of this lesson you'll have

00:02:35.310 --> 00:02:38.009
all the skills you'll need to complete the final project,

00:02:38.009 --> 00:02:40.004
building a traffic light classifier,

00:02:40.004 --> 00:02:44.280
which takes in images of traffic lights and separates them into three classes,

00:02:44.280 --> 00:02:46.000
red, yellow or green lights.

