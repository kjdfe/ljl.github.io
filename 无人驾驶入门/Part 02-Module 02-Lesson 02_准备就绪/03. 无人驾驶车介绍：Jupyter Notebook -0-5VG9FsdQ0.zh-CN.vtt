WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.889
本视频结束后

00:00:01.889 --> 00:00:04.339
你会看到一个这样的工具

00:00:04.339 --> 00:00:06.275
它叫做 Jupyter Notebook

00:00:06.275 --> 00:00:11.135
它是一个编写和记录 Python 代码的好工具

00:00:11.134 --> 00:00:13.934
你可以看到 它是由单元格组成的

00:00:13.935 --> 00:00:16.024
这里有一个高亮的单元格

00:00:16.024 --> 00:00:20.304
我可以使用方向键在单元格间上下移动

00:00:20.304 --> 00:00:22.439
从这里可以看到

00:00:22.440 --> 00:00:24.490
这是一个 Markdown 单元格

00:00:24.489 --> 00:00:27.494
这里我们不会详细讨论 Markdown 你只需知道

00:00:27.495 --> 00:00:30.660
它是一种让文本看起来更漂亮的标记语言

00:00:30.660 --> 00:00:32.340
因此 有时候你可以看到

00:00:32.340 --> 00:00:36.245
这些单元格是这种格式的 这会有点麻烦

00:00:36.244 --> 00:00:38.814
如果你不知道该怎么做 那就是大麻烦了

00:00:38.814 --> 00:00:40.949
简单点说 这种格式显示的是编辑模式

00:00:40.950 --> 00:00:45.145
在这里 这个句式可以把内容变为标题

00:00:45.145 --> 00:00:48.525
在这里 这个句式可以把内容变为粗体

00:00:48.524 --> 00:00:52.229
在这种模式下 你可能想要切换为更美观的界面

00:00:52.229 --> 00:00:53.789
在 Markdown 单元格中 我们可以

00:00:53.789 --> 00:00:55.079
使用 Ctrl 和回车键操作

00:00:55.079 --> 00:00:56.664
同样 我们还可以使用 Code 单元格

00:00:56.664 --> 00:01:00.435
在这里 我们有一个 Python 注释 后面是一个输出语句

00:01:00.435 --> 00:01:03.330
我们可以在这里按 Ctrl + 回车

00:01:03.329 --> 00:01:06.239
然后它就会输出 "Hello World!"

00:01:06.239 --> 00:01:08.515
还有另一种方式可以运行一个单元格

00:01:08.515 --> 00:01:11.125
即按下 Shift + 回车

00:01:11.125 --> 00:01:15.930
它的功能是一样的 不同的是 它会把光标移到下面的单元格中

00:01:15.930 --> 00:01:17.360
这实际上挺不错的

00:01:17.359 --> 00:01:20.295
例如 你有一个这样的 notebook

00:01:20.295 --> 00:01:22.674
你可以并从顶端开始时一路按 Shift + 回车

00:01:22.674 --> 00:01:24.689
Shift + 回车 Shift + 回车

00:01:24.689 --> 00:01:27.750
你可以自己继续操作

00:01:27.750 --> 00:01:30.734
但首先 有两件事情要强调一下

00:01:30.734 --> 00:01:33.239
第一 这是你的工作区

00:01:33.239 --> 00:01:35.369
你可以在这些 notebook 中做任何操作

00:01:35.370 --> 00:01:38.130
不会造成任何不可逆的损失

00:01:38.129 --> 00:01:39.239
一切都非常安全

00:01:39.239 --> 00:01:42.119
例如 我可以在这里

00:01:42.120 --> 00:01:44.230
出于某种原因 删掉一个单元格

00:01:44.230 --> 00:01:47.730
我会按 D 键两次删除单元格

00:01:47.730 --> 00:01:51.570
我会删掉所有单元格 好了

00:01:51.569 --> 00:01:53.229
现在 所有单元格都消失了

00:01:53.230 --> 00:01:56.594
我还可以保存操作结果

00:01:56.594 --> 00:01:57.959
现在 你可能觉得

00:01:57.959 --> 00:02:00.474
内容已经彻底丢失 我们没法再继续下面的练习了

00:02:00.474 --> 00:02:01.659
不要担心

00:02:01.659 --> 00:02:05.704
在底部这里 我们选择 MENU 然后选择 RESET DATA

00:02:05.704 --> 00:02:07.859
出现了一个警告 似乎不太妙 别担心

00:02:07.859 --> 00:02:10.564
我们需要输入 "Reset data" 来确认

00:02:10.564 --> 00:02:13.229
删除内容之所以这么困难

00:02:13.229 --> 00:02:14.394
是因为这是你的工作空间

00:02:14.395 --> 00:02:16.515
里面可能有很多工作成果 你不想删除

00:02:16.514 --> 00:02:19.594
因此 我们需要确保你不会一时糊涂 把内容改得面目全非

00:02:19.594 --> 00:02:23.580
当然了 数据重置后 我们又得从头开始

00:02:23.580 --> 00:02:24.895
因此 我要强调的第一件事就是

00:02:24.895 --> 00:02:26.600
这里的数据足够安全

00:02:26.599 --> 00:02:28.409
第二 我想说的是

00:02:28.409 --> 00:02:30.539
这是真正属于你的工作区

00:02:30.539 --> 00:02:32.939
你可以创建新文件 你可以做任何操作

00:02:32.939 --> 00:02:35.639
因此 我准备在 Python 3 中创建一个新 notebook

00:02:35.639 --> 00:02:39.074
我将其命名为 math_practice

00:02:39.074 --> 00:02:41.629
我还可以编写 Python 代码

00:02:41.629 --> 00:02:43.984
我们试一下 2 + 2

00:02:43.985 --> 00:02:45.745
当然 结果是 4

00:02:45.745 --> 00:02:50.230
我还可以点击这里的 Jupyter 标志浏览我的所有文件

00:02:50.229 --> 00:02:54.750
噢 跳出了一个提示 因为我没有保存更改 不错

00:02:54.750 --> 00:02:58.245
接下来我来保存更改

00:02:58.245 --> 00:03:00.560
然后再次点击上面的 Jupyter 标志

00:03:00.560 --> 00:03:02.810
现在 我可以看到所有文件

00:03:02.810 --> 00:03:04.905
math_practice 和 playground 都显示在这里

00:03:04.905 --> 00:03:08.694
我可以点击 playground 然后又返回这里了

00:03:08.694 --> 00:03:10.194
好的 上面只是演示一下

00:03:10.194 --> 00:03:12.959
你可以在 playground 文件中练习并熟悉相关操作

00:03:12.960 --> 00:03:16.000
随着课程的进展 你会越来越了解这个工具 好好享受吧

