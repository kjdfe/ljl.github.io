WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.000
现在我们已经非常熟悉一维卡尔曼滤波器了

00:00:04.000 --> 00:00:08.000
而且你已经编写了一个卡尔曼滤波器 你明白如何整合测量

00:00:08.000 --> 00:00:11.000
如何整合运动

00:00:11.000 --> 00:00:14.000
实际上 你已经用代码实现了超酷的、完整的

00:00:14.000 --> 00:00:18.000
一维卡尔曼滤波器

00:00:18.000 --> 00:00:21.000
不过在现实中 我们经常会遇到多维的情况

00:00:21.000 --> 00:00:25.000
这就会涉及到很多因素 所以我要举例演示

00:00:25.000 --> 00:00:31.000
并说明为什么在较多维度状态空间中估测很重要

00:00:31.000 --> 00:00:37.000
假设你有一个 x 和 y 的二维状态空间 – 比如一幅来自摄像机图像

00:00:37.000 --> 00:00:43.000
或者在我们的例子中 我们可能采用一辆载有雷达的汽车来检测

00:00:43.000 --> 00:00:46.000
车辆随着时间变化的位置

00:00:46.000 --> 00:00:51.000
这时候 二维卡尔曼滤波器就非常适合

00:00:51.000 --> 00:00:53.000
具体工作原理是这样的

00:00:53.000 --> 00:01:00.000
假设在时间 t = 0 时 你观察到感兴趣的对象将位于这个坐标

00:01:00.000 --> 00:01:04.000
这可能是谷歌无人驾驶车项目的另一辆车

00:01:04.000 --> 00:01:08.000
一段时间后 你会看到它在这里

00:01:08.000 --> 00:01:11.000
再过一段时间后 你会看到它在这里

00:01:11.000 --> 00:01:17.000
在时间 t = 3 时 你觉得这辆车会在哪里？

00:01:17.000 --> 00:01:22.000
我会给你们三个不同的位置选项

00:01:22.000 --> 99:59:59.999
请点击选择最可能的位置选项

