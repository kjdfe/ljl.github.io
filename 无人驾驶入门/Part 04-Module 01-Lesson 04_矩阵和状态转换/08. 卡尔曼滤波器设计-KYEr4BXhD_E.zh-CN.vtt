WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:06.000
当我们设计一个卡尔曼滤波器时

00:00:06.000 --> 00:00:10.000
对于状态 你需要一个状态转移函数

00:00:10.000 --> 00:00:15.000
它通常是一个矩阵 所以我们讨论的 全都是线性代数的内容

00:00:15.000 --> 00:00:18.000
对于测量 你需要一个测量函数

00:00:18.000 --> 00:00:24.000
下面 我举一个对象在一维空间运动的例子

00:00:24.000 --> 00:00:31.000
我们已经知道 新的位置是旧的位置 + 速度

00:00:31.000 --> 00:00:35.000
用矩阵形式表达 那么这里有一个 1 这里也有一个 1

00:00:35.000 --> 00:00:41.000
速度不变所以，新速度应该就是旧速度 这里是0 这里是1

00:00:41.000 --> 00:00:46.000
如果你将此矩阵乘以此矢量 这正是你得到的结果

00:00:46.000 --> 00:00:51.000
对于测量 我们只测量了第一个分量即位置 而不是速度

00:00:51.000 --> 00:00:55.000
它使用这样的矩阵

00:00:55.000 --> 00:01:02.000
这个矩阵称为 F 这个被称为 H

00:01:02.000 --> 00:01:07.000
这里涉及到了卡尔曼滤波器的实际更新方程

00:01:07.000 --> 00:01:14.000
我会给你们方程式 但请不要记忆它们 我也不会给出证明步骤

00:01:14.000 --> 00:01:16.000
另外 证明过程也比较复杂

00:01:16.000 --> 00:01:21.000
每次我要用的时候 我就查询一下

00:01:21.000 --> 00:01:27.000
这里是一个预测步骤 我用最佳估计 x

00:01:27.000 --> 00:01:32.000
乘以状态转移矩阵 - 矩阵 F

00:01:32.000 --> 00:01:37.000
并且加上我所知道的运动 - u

00:01:37.000 --> 00:01:39.000
计算得到了一个新的 x

00:01:39.000 --> 00:01:43.000
我还有一个协方差 表示我的不确定性

00:01:43.000 --> 00:01:48.000
协方差矩阵的更新如下 其中 T 是转置

00:01:48.000 --> 00:01:53.000
还有一个测量更新步骤 我们使用测量值 z

00:01:53.000 --> 00:02:01.000
我们将测量值与预测值进行比较 其中 H 是测量函数

00:02:01.000 --> 00:02:04.000
它可以将状态映射到测量值

00:02:04.000 --> 00:02:07.000
我们称之为误差

00:02:07.000 --> 00:02:15.000
该误差被映射到矩阵 s 中 该矩阵是通过将投影系统的不确定性

00:02:15.000 --> 00:02:19.000
投射到测量空间中获得 这个测量空间采用测量函数投影

00:02:19.000 --> 00:02:23.000
+ 矩阵 R 代表测量噪声的特征

00:02:23.000 --> 00:02:27.000
然后将其映射到称为 K 的变量中 K 通常被称为卡尔曼增益

00:02:27.000 --> 00:02:30.000
在这里我们求 s 的逆矩阵

00:02:30.000 --> 00:02:36.000
最后 我们使用你已经见过的神秘的方程式

00:02:36.000 --> 00:02:41.000
来更新估计值和不确定性

00:02:41.000 --> 00:02:46.000
现在 我把它写下来 是为了让你可以看到完整的定义

00:02:46.000 --> 00:02:49.000
但是你不需要去记忆

00:02:49.000 --> 00:02:54.000
如果你真的想了解这些数学内容 你知道的是 这里写的只是

00:02:54.000 --> 00:02:57.000
我给大家总结的涉及到高维空间时的数学公式

00:02:57.000 --> 00:03:00.000
不过我建议大家不要担心这个

00:03:00.000 --> 00:03:06.000
这里就是一组用来实现高维卡尔曼滤波器

00:03:06.000 --> 99:59:59.999
和更高的维度

