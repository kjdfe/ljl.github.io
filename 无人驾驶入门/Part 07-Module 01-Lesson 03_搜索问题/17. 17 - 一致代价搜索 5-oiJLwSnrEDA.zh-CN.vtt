WEBVTT
Kind: captions
Language: zh-CN

00:00:02.229 --> 00:00:05.339
答案是不行 还没结束

00:00:05.339 --> 00:00:07.304
我们到达了目标状态

00:00:07.304 --> 00:00:11.599
把通往目的地布加勒斯特的路径放到边缘上

00:00:11.599 --> 00:00:14.399
但我们还没有将路径从边缘上弹出

00:00:14.400 --> 00:00:19.780
在我们将其从边缘上弹出之前 一致代价搜索会继续进行

00:00:19.780 --> 00:00:23.810
继续查找是否有更好的路径可抵达目标

00:00:23.809 --> 00:00:28.140
我们来看看 我忘了说 弗格拉什已经探索好了

00:00:28.140 --> 00:00:31.969
我们继续看边缘

00:00:31.969 --> 00:00:35.475
现在代价最小的是这条 299 的

00:00:35.475 --> 00:00:37.185
扩展出来

00:00:37.185 --> 00:00:40.910
得到路径代价值为 374

00:00:40.909 --> 00:00:42.519
将其放到边缘上

00:00:42.520 --> 00:00:44.609
继续重复操作

00:00:44.609 --> 00:00:49.350
现在代价最小的路径在这边 代价值为 317

00:00:49.350 --> 00:00:51.484
将其标记为已探索

00:00:51.484 --> 00:00:54.200
再添加两条路径 一条在这里

00:00:54.200 --> 00:00:55.585
这条代价值较大

00:00:55.585 --> 00:00:57.064
所以排除掉

00:00:57.064 --> 00:01:01.009
另一条也能抵达目标

00:01:01.009 --> 00:01:05.575
总代价为 418

00:01:05.575 --> 00:01:07.579
这就说明等待是有回报的

00:01:07.579 --> 00:01:12.064
没有一找到第一条通往目标的路径就停下来是件好事

00:01:12.064 --> 00:01:18.079
因为现在找到的这第二条路径比第一条代价小

00:01:18.079 --> 00:01:20.689
但我们还不到停止的时候 因为还没有把

00:01:20.689 --> 00:01:24.155
通往目标的路径弹出 所以我们继续

00:01:24.155 --> 00:01:30.379
接下来 边缘上代价最小的路径为这条 366 的

00:01:30.379 --> 00:01:37.129
扩展该路径 来到一条代价较大的路径上 而且这条路径通向的节点我们之前见过了

00:01:37.129 --> 00:01:39.239
所以边缘不会添加任何新路径

00:01:39.239 --> 00:01:43.774
接下来 边缘上代价最小的路径为 374 的这条

00:01:43.775 --> 00:01:48.290
将其扩展开来 还是没什么好结果

00:01:48.290 --> 00:01:51.245
得到的路径比我们之前看到的更差

00:01:51.245 --> 00:01:58.790
最后 边缘上前往布加勒斯特而代价又最小的路径为这条 418 的

00:01:58.790 --> 00:02:03.525
所以将其弹出 抵达目标 现在我们可以停止了

00:02:03.525 --> 00:02:06.635
所以虽然我们先找到了 460 的路径

00:02:06.635 --> 00:02:09.259
但我们没有停在那里 因为可能还有其它路径

00:02:09.259 --> 00:02:12.114
能抵达目标 而且代价更小

00:02:12.115 --> 00:02:17.985
所以算法继续进行 直到我们将通往目标的路径从边缘上弹出

00:02:17.985 --> 00:02:24.000
这就是为什么一致代价搜索保证能找出通往目标且代价最小的路径

