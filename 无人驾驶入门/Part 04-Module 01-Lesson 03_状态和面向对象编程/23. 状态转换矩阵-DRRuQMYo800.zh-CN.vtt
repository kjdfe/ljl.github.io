WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.559
我们来看看如何在无人驾驶车所用的数学方法中使用向量

00:00:04.559 --> 00:00:09.364
我们表示状态的方式是一个只有一个长度的值的列表

00:00:09.365 --> 00:00:11.579
本例中 一个长度有两个值

00:00:11.579 --> 00:00:17.565
但是 状态向量是一列值 其尺寸为 1 高度为 N

00:00:17.565 --> 00:00:19.950
本例中 N 为 2

00:00:19.949 --> 00:00:23.939
这使状态向量成为一种特殊的矩阵

00:00:23.940 --> 00:00:27.720
我们很快会看到为什么列向量很重要

00:00:27.719 --> 00:00:30.614
我们再来考虑一下预测状态函数

00:00:30.614 --> 00:00:32.309
它处于初始状态

00:00:32.310 --> 00:00:34.859
我们存储位置 X 和速度 V

00:00:34.859 --> 00:00:37.530
然后我们有几行代码

00:00:37.530 --> 00:00:40.969
可预测基于恒速运动模型的下一个状态

00:00:40.969 --> 00:00:42.945
我们计算新的位置

00:00:42.945 --> 00:00:44.905
新的 X 并把两个值

00:00:44.905 --> 00:00:47.045
新的位置和速度

00:00:47.045 --> 00:00:48.859
放到一个新的预测状态中

00:00:48.859 --> 00:00:50.714
一个包括两个新值的列表

00:00:50.715 --> 00:00:54.859
但是 通过放置 X 和 B 这两个值的状态向量

00:00:54.859 --> 00:00:58.100
我们不需要将它们分开来执行此计算

00:00:58.100 --> 00:01:03.000
我们实际上可以在一个乘法步骤中进行相同的计算

00:01:03.000 --> 00:01:05.939
该步骤是矩阵乘法步骤

00:01:05.939 --> 00:01:09.209
矩阵乘法将两个数字网格相乘

00:01:09.209 --> 00:01:12.779
像这样二乘二矩阵和这个二乘一状态向量

00:01:12.780 --> 00:01:15.480
其位置为 X 速度为 V

00:01:15.480 --> 00:01:18.160
接下来 我们看看这个乘法的运算方式

00:01:18.159 --> 00:01:20.640
此运算首先将第一个矩阵中的行乘以

00:01:20.640 --> 00:01:23.480
第二个矩阵中的列

00:01:23.480 --> 00:01:25.770
所以 这些尺寸 第一个矩阵中列的数量

00:01:25.769 --> 00:01:30.140
应该和第二个矩阵中行的数量相同

00:01:30.140 --> 00:01:32.655
一步一步地 这看起来像一乘以X

00:01:32.655 --> 00:01:36.430
就等于 X 然后 V 乘以 dt

00:01:36.430 --> 00:01:42.180
那么现在 我们第一个矩阵中的第一行乘以第二个矩阵中的列

00:01:42.180 --> 00:01:47.610
下一步是求这两个值的和 从而在这个新矩阵中形成一个新的值

00:01:47.609 --> 00:01:49.540
X 加 V 乘以 dt

00:01:49.540 --> 00:01:52.635
然后 对下一行执行同样的运算

00:01:52.635 --> 00:01:56.123
就是 0 乘以 X 加 1 乘以 V

00:01:56.123 --> 00:01:59.719
并且将这些值加起来 得到 V 计算完成了

00:01:59.719 --> 00:02:01.769
你可以看到 这创造了一个新的二乘以一

00:02:01.769 --> 00:02:05.515
向量 其中有两个值 这看起来似乎很熟悉

00:02:05.515 --> 00:02:09.680
事实上 这些只是我们的恒速运动模型方程

00:02:09.680 --> 00:02:11.474
经过一段时间的改变

00:02:11.474 --> 00:02:16.694
X 变为 X 加上速度乘以时间变化 而 V保持恒定

00:02:16.694 --> 00:02:19.215
所以 矩阵乘法可以让我们创建

00:02:19.215 --> 00:02:23.180
一个新的预测状态向量和一个乘法步骤

00:02:23.180 --> 00:02:26.370
这是预测这个新状态的一种常见方式

00:02:26.370 --> 00:02:30.420
二乘二矩阵通常被称为状态转换矩阵

00:02:30.419 --> 00:02:33.329
接下来 我们将测试你在矩阵乘法方面的知识

00:02:33.330 --> 00:02:37.000
看看我们如何使用这些知识来改进预测状态函数

